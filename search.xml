<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/09/23/photo/"/>
      <url>/2024/09/23/photo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="C:\Users\Baixi\Desktop\曲韵华章（9.22加主页）\quyunhuazhang\src\assets\home\dianwei.png" alt="dianwei"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记！~~</title>
      <link href="/2024/09/12/CSS/"/>
      <url>/2024/09/12/CSS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>使用选择器之前，在head标签内加style标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>class类选择器 ，多个标签的类名可以重复</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;hhh&quot;</span>&gt;</span>h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​使用：    .类名{    声明      }</p><ol start="2"><li>id选择器，唯一的</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;hhh&quot;</span>&gt;</span>h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​     使用：   #类名{    声明      }</p><ol start="3"><li>标签选择器：  标签  {  声明  }</li></ol><h2 id="导入CSS样式的方法"><a href="#导入CSS样式的方法" class="headerlink" title="导入CSS样式的方法"></a>导入CSS样式的方法</h2><ol><li>内部样式：直接写在前面的</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h5</span> <span class="attr">style</span>=<span class="string">&quot;font-size:50px;color:cornflowerblue &quot;</span>&gt;</span>h5<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>内联样式：正如选择器所讲的，声明在head标签内的</p></li><li><p>外联样式：建立一个css文本，写在style外面，用link将地址写在href里；</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./外联.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​内部样式优先级最高；</p><h2 id="设置字体样式"><a href="#设置字体样式" class="headerlink" title="设置字体样式"></a>设置字体样式</h2><p>以font-开头的声明，如：font-family   ；font-size  等设置字体样式</p><h2 id="文本装饰"><a href="#文本装饰" class="headerlink" title="文本装饰"></a>文本装饰</h2><ol><li>水平对齐方式： text-align：  center为居中，left和right为左右；</li><li>height与line-height的区别：height是字体背景的限高，而line-height是字体基线与背景限高的距离除二；</li><li>width是字体背景的宽；</li><li>text-decoration: 文本装饰，例如text-decoration: none;取消超链接下划线</li><li>text-shadow:阴影，值：水平位置，垂直位置，阴影颜色，模糊程度；</li><li>white-space:控制元素内部空白部分的显示方式，比如：<em>pre</em> 为保留空白符和换行符，不进行换行处理；<em>pre-wrap</em> 保留空白符和换行符，允许自动换行</li><li>text-overflow文本溢出，需要注意的是要使其生效，块元素必须显式定义<code>overflow</code>为非visible值（hidden），同时white-space需要为<code>nowrap</code>值。值：ellipsis是将溢出部分替换为’…’ 。</li><li>等等等等…..</li></ol><h2 id="伪类语法"><a href="#伪类语法" class="headerlink" title="伪类语法"></a>伪类语法</h2><p>选择器：伪类名{  声明； }</p><ol><li>a:link{}未单击访问过超链接样式；</li><li>a:visited{}单机访问后超链接样式；</li><li>a:hover{} 鼠标悬浮其上的超链接样式；</li><li>a:active{} 鼠标单击未释放的超链接样式；</li><li>focus 获取焦点，只有表单类元素能使用</li><li>checked 选中勾选的复选框或单选按钮。</li></ol><p><strong>结构伪类</strong></p><ol><li>first-child容器内第一个这个元素变化</li><li>nth-child()表示第几个“儿子”；</li><li>first-of-type 这类元素的第一种</li></ol><p><strong>UI伪类</strong></p><ol><li>disabled，比如某些信息不需要你填时变灰适用</li><li>enabled，除disabled以外都可以用</li></ol><p><strong>目标伪类</strong>：target，跳到此处时会变化</p><p><strong>伪元素选择器！！！</strong></p><p>还有鼠标形状：cursor：1. default ;2.pointer ; 3.wait ; 4.help ; 5.text ; 6. crosshair 7. …….；</p><h2 id="div"><a href="#div" class="headerlink" title="div"></a>div</h2><p>   div容器就如同一个背包，把想要写的东西放在一个背包里方便后续统一操作</p><ol><li><strong>width</strong>和<strong>height</strong>是div的宽高；</li><li><strong>border</strong>是边框界限，例如：  border: 1px solid <strong>rgb</strong>(236, 234, 234);  是黑色占一像素的实线边框；</li><li><strong>background</strong>是div的背景，例如： background: <strong>url</strong>(..&#x2F;leisai.jpg) no-repeat 10px 20px; 是不重复平铺背景的图片，10px是移动的x轴，20px是移动的y轴，y轴方向颠倒了；</li><li>等等一些其他标签可用的div都可以用。</li><li><strong>resize</strong>可以重新盒子调节大小，需要配合<em>overflow</em></li><li><strong>box-shadow</strong>阴影，值：水平位置，垂直位置，阴影颜色，外沿，模糊程度，内阴影：</li></ol><blockquote><p>​     box-shadow: 10px 10px 10px <strong>rgb</strong>(205, 152, 255)  ;</p></blockquote><ol start="7"><li><strong>opacity</strong>透明度</li></ol><h2 id="span"><a href="#span" class="headerlink" title="span"></a>span</h2><p>类似于小括号，方便直接修改其他标签里面的内容。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>无序列表： ul标签，可以通过type或者style改变前面的样式，</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>有序列表： ol标签，可以通过type或者style改变前面的样式。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>自定义列表：dl标签，dt是列表头，dd是列表内容。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>软件<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>硬件<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格（加载效率较低）"><a href="#表格（加载效率较低）" class="headerlink" title="表格（加载效率较低）"></a>表格（加载效率较低）</h2><p>table标签，tr标签是一行的开始，td标签是每一行每一列的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>白杨<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>杨晨<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>92<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>rowspan</strong>是将列相连，<strong>colspan</strong>是将行相连。例如 &lt;td *colspan*&#x3D;”3”&gt; 是从这个格子开始向右三格相连。border-collapse: collapse;可以使边框合并（给父亲用）！！！</p><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>补：记得加form标签套在最外面，<strong>reset</strong>()可以重置form里的所有内容   <em>placeholder</em>可以添加默认显示的值</p><p>input标签 ，可以创建一个输入框 ，type可多选，<em>autofocus</em>是进入页面自动获取焦点；</p><ol><li>text是输入文本；  </li><li>password是输入密码，可隐藏显示；</li><li>radio是选择选项，单选时则需要使选项的name相同，checked表示这个选项默认被选了</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>男：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;man&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>&gt;</span> </span><br><span class="line">    女：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;woman&quot;</span>&gt;</span>   <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>checkbox也是选择；</li><li>button是按钮，两种写法</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>select是下拉菜单  加上selected是默认先显示这个内容</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择地域<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">selected</span>&gt;</span>晋城<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>长治<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>太原<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="7"><li>传输文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多行文本域，textarea标签 ,用于限制字数，但不常用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一般用  &lt;input *type*&#x3D;”password” *maxlength*&#x3D;”11”&gt;；；</p><p>表单高级用法：1. 用于隐藏输入框&lt;input *type*&#x3D;”hidden”&gt;  2. &lt;textarea *readonly* &gt; 表示只读，不可修改内容</p><ol start="3"><li>&lt;button *disabled*&gt; 表示这个按钮不可用</li></ol><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><p>爹在前面，儿子在后面，空格隔开，（儿子之后所有都会被影响）例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span> <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>第三<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>若要使a标签内的“第三”也为红色，需要</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">li a&#123; color:red; &#125;</span><br></pre></td></tr></table></figure><h2 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h2><p>只能选择作为某元素直接&#x2F;一级子元素的元素，爹&gt;子，例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&gt;strong&#123;color:red;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>哈哈哈<span class="tag">&lt;<span class="name">strong</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>啊哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>哈哈哈<span class="tag">&lt;<span class="name">span</span>&gt;</span>嗷嗷<span class="tag">&lt;<span class="name">strong</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>嗷嗷<span class="tag">&lt;/<span class="name">span</span>&gt;</span>啊哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p,strong&#123;color:red;&#125;</span><br></pre></td></tr></table></figure><h2 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;choose&quot;</span>&gt;</span>第一个p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>第一个h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;choose&quot;</span>&gt;</span>第二个h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>若要使第一个h1变色，直接标签加类即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.choose&#123;color:aquamarine;&#125;</span><br></pre></td></tr></table></figure><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.luogu.com.cn/&quot;</span>&gt;</span>洛谷<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>无<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在[]内的属性，只要有则都会被渲染；例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[href]&#123;color:rgba(222, 152, 250, 0.729);&#125;</span><br></pre></td></tr></table></figure><p>只要有href的则都会变色。</p><p>有多种其他方式：1. 例如： href*&#x3D;”cn” 只要href里有则都变色；2.href^&#x3D;”<a href="https://www.baidu/">https://www.baidu</a>“  以此为开头的会变色；</p><ol start="3"><li>href$&#x3D;”cn&#x2F;“以此结束的都会变色</li></ol><h2 id="边框设置"><a href="#边框设置" class="headerlink" title="边框设置"></a>边框设置</h2><ol><li>border  边框 ： solid 实线   dashed  虚线  double 双实线   dotted  点状虚线 ；同时可以分别设置四边如：border-right；</li></ol><p>还可以使用<em>boder-radius</em>这类使div变成圆（还有<del>变态的</del>好玩的：border-bottom-left-radius:100px 50px（椭圆），单独设值）</p><ol start="2"><li>margin 外边距  ，与最近的元素的的边距（似乎一般left和top比较优先，right和bottom没反应） 设置四个值时为上右下左，两个值时为上左；</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>:<span class="number">0px</span> auto;//左右居中</span><br></pre></td></tr></table></figure><ol start="3"><li>padding 内边距 ，其它与margin相似</li></ol><p>盒模型计算：元素大小+边框+内边距，margin修改不会修改元素大小，padding会改变，那么可以用这个来防止修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-sizing: border-box;</span><br></pre></td></tr></table></figure><ol start="4"><li>一般为了统一，使用 * （通配符）来适配所有元素</li><li>outline，外轮廓，例如outline-width,style,color，offset等，不占盒子计算</li></ol><h2 id="标准流之间的转换"><a href="#标准流之间的转换" class="headerlink" title="标准流之间的转换"></a>标准流之间的转换</h2><ol><li>块元素，独占一行，能设置宽高；</li><li>行内块元素，不独占一行，能设置宽高；</li><li>行内元素，不独占一行，不能设置宽高；</li></ol><p>转换：用display 1.inline 是转化为行内元素 2. inline-block  转化为行内块元素  3. block 转化为块元素 4. none 消失</p><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><p>float 标签，脱离标准流以后，可以设置宽高（span也可以），当脱离标准文档流时，其他元素会占用原来的文档流；</p><p>如何清除浮动？</p><p>例如直接用div包裹浮动，然后设置高；或者用加一个div标签，然后在给这个标签的style加clear:both;清除浮动，让父元素能够正确地包裹所有子元素 ，  还有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ul::after&#123;</span><br><span class="line">    clear:both;</span><br><span class="line">    display: block;</span><br><span class="line">    content:&quot;&quot;;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（我自己理解是先清除浮动，再变成块，然后加个内容让之后的字可以回车到下一行）</p><h2 id="超出部分隐藏"><a href="#超出部分隐藏" class="headerlink" title="超出部分隐藏"></a>超出部分隐藏</h2><p>overflow标签，如果只想展示部分则直接hidden，滚动展示scroll，</p><p>紧接上文，如果想要清除浮动，可以使用  overflow: hidden; 来触发<strong>BFC机制</strong>。</p><h2 id="定位（position）"><a href="#定位（position）" class="headerlink" title="定位（position）"></a>定位（position）</h2><h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p>position: fixed;  <strong>参照物</strong>：浏览器屏幕</p><p>特点：1. 固定在了浏览器屏幕上，不会随着页面滚动而滚动</p><ol start="2"><li>不占实际位置，位置会被下面的元素占去，脱离了标准文档流</li><li>可以调整位置： top left right bottom</li></ol><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>position: relative;  <strong>参照物</strong>自身原本位置</p><p>特点：1. 会随着页面滚动而滚动</p><ol start="2"><li>占实际位置，没有脱离了标准文档流</li><li>可以调整位置： top left right bottom （例如right是离原本自身的右边框的距离）</li></ol><h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>position: absolute; <strong>参照物</strong>：离这个元素<strong>最近</strong>的<strong>设置过定位值</strong>的父元素的左上角</p><p>特点：1. 会随着页面滚动而滚动</p><ol start="2"><li>不占实际位置，位置会被下面的元素占去，脱离了标准文档流</li><li>可以调整位置： top left right bottom</li></ol><h2 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h2><blockquote><p>z-index </p></blockquote><p>后面数字越大，越优先显示</p><p>基础过完了，重要的就是<strong>练习</strong>啦！！！</p><hr><h1 id="补："><a href="#补：" class="headerlink" title="补："></a>补：</h1><p>每次设置宽高的时候可以在控制台获取一下宽高：window.innerWidth</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol><li><strong>background-origin</strong>设置参考原点</li><li><strong>background-clip</strong>设置裁剪边框（cover万能解）如text表示只显示在文本内，content-box表示被才见到内容框内等</li></ol><h2 id="渐变（background-image）"><a href="#渐变（background-image）" class="headerlink" title="渐变（background-image）"></a>渐变（background-image）</h2><ol><li>线性渐变</li></ol><blockquote><p>background-image: <strong>linear-gradient</strong>(to right,<strong>rgb</strong>(228, 160, 255),<strong>rgb</strong>(189, 212, 255));</p></blockquote><p>可以改变方向，to left top，或者 20deg 角度（顺时针旋转）</p><p>可以在颜色后面加像素如<strong>rgb</strong>(228, 160, 255) 50px，表示在这个方向上这条线一定是这个颜色，颜色与颜色之间则为渐变色，两边空白处由其附近的颜色纯色填充。</p><ol start="2"><li>径向渐变</li></ol><blockquote><p><strong>radial-gradient</strong>(at 100px 50px,<strong>rgb</strong>(228, 160, 255),<strong>rgb</strong>(189, 212, 255));</p></blockquote><ul><li>第一个at表示圆心位置，默认中心。</li><li>也可以只写100px 100px 设置圆半径</li></ul><p>同时写时半径在前坐标在后不加逗号</p><blockquote><p><strong>radial-gradient</strong>(50px 50px at 100px 100px,<strong>rgb</strong>(228, 160, 255),<strong>rgb</strong>(83, 143, 255));</p></blockquote><ol start="3"><li>重复渐变 :<strong>repeating-</strong>  将前缀加在上面两个前面</li></ol><blockquote><p>重复渐变定义：在没有渐变的区域重新渐变</p></blockquote><h2 id="2D变换"><a href="#2D变换" class="headerlink" title="2D变换"></a>2D变换</h2><ol><li>位移  以自身为参考x，y进行移动</li></ol><blockquote><p>transform: <strong>translateX</strong>(50px) <strong>translateY</strong>(50px);</p></blockquote><ol start="2"><li><p>缩放，scale()无单位，</p></li><li><p>旋转，rotate() 单位为deg角度，顺时针旋转</p></li><li><p>扭曲，skew() 单位为deg角度.</p></li><li><p>设置原点，transform-origin，可以改变旋转的原点</p></li></ol><h2 id="3D变换"><a href="#3D变换" class="headerlink" title="3D变换"></a>3D变换</h2><p>首先要找到父元素开启3D空间</p><blockquote><p>transform-style: preserve-3d;</p></blockquote><ol><li><p>rotateX，rotateY可以用了，同时要开启景深<code>perspective</code>才能看清楚效果，</p><p><strong>景深</strong>指观察者与z&#x3D;0平面的距离，能让发生3D变换的元素，产生透视效果，看起来更加立体（给父元素加）</p></li><li><p>perspective-origin可以改变透视点（观察者）的位置</p></li></ol><p>其它<del>不重要</del>与2D差不多~~~~</p><h2 id="过渡！！！"><a href="#过渡！！！" class="headerlink" title="过渡！！！"></a>过渡！！！</h2><ol><li><p>transition-property，需要过度的属性</p></li><li><p>transition-duration，过渡的时间</p></li><li><p>transition-delay，过渡延迟时间</p></li><li><p>transition-timing-function 过渡方式，ease（慢快慢），linear（匀速），ease-in（慢快），ease-out（快慢）等等等等。。。</p><p>最重要的是贝塞尔曲线<code>cubic-bezier()</code>，打开自定义过渡状态</p></li></ol><blockquote><p>​     <a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a></p></blockquote><p>这些代表需要过度的属性，写在元素内，不能写在伪类选择器里。伪类选择器内写过渡后的形状。</p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>完整定义</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名&#123;</span><br><span class="line">    <span class="number">0%</span>&#123; 属性  &#125;  <span class="comment">/* 初始 */</span></span><br><span class="line">    <span class="number">57%</span>&#123;  属性  &#125;</span><br><span class="line">    <span class="number">100%</span>&#123;  属性  &#125;  <span class="comment">/* 结尾 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在需要动画的元素加animation-name  其余还有持续时间，延迟时间等与过渡相同关键词</p><ul><li><code>animation-iteration-count:infinite;</code>表示一直播放，可以改播放次数</li><li>direction，动画进行的方向改变之类</li><li><code>animation-play-state</code>改变动画播放状态，配合伪类食用较佳</li></ul><h2 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h2><p>非常实用方便（写在容器里）</p><ul><li><strong>column-count</strong>，自动布局</li><li><strong>column-gap</strong> 列之间间距</li><li><strong>column-rule</strong>   列之间边框</li><li><strong>column-span</strong> (跨列的元素里写) 表示占几列</li></ul><p>如果插入图片，直接将宽设置100%，为那一列的宽度100%    <em>图片</em>也适用！！！！</p><h2 id="伸缩盒模型（非常会“利用”空间）"><a href="#伸缩盒模型（非常会“利用”空间）" class="headerlink" title="伸缩盒模型（非常会“利用”空间）"></a>伸缩盒模型（非常会“利用”空间）</h2><blockquote><p>display: flex;  &#x2F;&#x2F;  inline-flex是行伸缩</p></blockquote><p>在容器内必写，元素变为伸缩盒模型，<strong>只有</strong>子元素为伸缩项目。</p><ol><li><p>改主轴方向：<strong>flex-direction</strong> 比如row-reverse让其相反，column-reverse列相反</p></li><li><p>让伸缩项目换行：<strong>flex-wrap: wrap;</strong></p></li><li><p>主轴（副轴）调整方式：justify-content （align-content）  <del>（似乎用处不大？）</del>（evenly平均分配！！好用）</p></li></ol><p><img src="https://img-blog.csdnimg.cn/direct/a255b9ff08184ac2adebea6339664f7b.jpeg#pic_center" alt="img"></p><ol start="4"><li><strong>伸</strong>：flex-grow，将 剩余空间 除以 所有的<em>flex-grow</em>值的相加，分配剩余空间</li><li><strong>缩</strong>：flex-shrink，将 减少的外空间 乘以 收缩比（每个容器flex-shrink<em>值除减少的外空间的比例）</em>*</li><li>排序：order，值为整数默认为0，负向前，正向后</li></ol><h1 id="媒体"><a href="#媒体" class="headerlink" title="媒体"></a>媒体</h1><h2 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h2><ol><li><strong>@media print</strong>只有在打印或者打印预览时才会应用的样式，正常在里面写CSS样式，要写在后面</li><li><strong>@media screen</strong> 只在屏幕上显示的样式</li><li><strong>@media all</strong> 应用所有设备</li></ol><h2 id="媒体属性"><a href="#媒体属性" class="headerlink" title="媒体属性"></a>媒体属性</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>:<span class="number">900px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.out</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#944444</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">/* 表示浏览器宽度900px以上时为这个颜色， */</span></span><br></pre></td></tr></table></figure><p>同样遵从从上到下运行，写在上面会被顶掉</p><p><img src="https://img-blog.csdnimg.cn/direct/a69f4705b59f49ad85832c8ca89390dc.png#pic_center" alt="img"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>:<span class="number">900px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">910px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.out</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#944444</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">/*在之间变色*/</span></span><br></pre></td></tr></table></figure><p>还有or only  ‘ , ‘ …等</p><h2 id="BFC（特异功能）"><a href="#BFC（特异功能）" class="headerlink" title="BFC（特异功能）"></a>BFC（特异功能）</h2><p>如何去开启BFC:</p><p><img src="https://img-blog.csdnimg.cn/direct/a35ad25ee848405f9705fb53a1934360.png#pic_center" alt="img"></p><p>BFC能解决的东西：</p><p><img src="https://img-blog.csdnimg.cn/direct/b8bda98050994dc0b2c247c84ddae369.png#pic_center" alt="img"></p><p>小函数：vh是视口的高度（viewport height）可以用**calc()**函数进行数学运算，</p><hr><p>再补：</p><p>使页面滑动流畅！！！</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    scroll-behavior: smooth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>后台数据管理系统 - 项目架构设计</title>
      <link href="/2024/09/12/%E5%A4%A7%E4%BA%8B%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/09/12/%E5%A4%A7%E4%BA%8B%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="后台数据管理系统-项目架构设计"><a href="#后台数据管理系统-项目架构设计" class="headerlink" title="后台数据管理系统 - 项目架构设计"></a>后台数据管理系统 - 项目架构设计</h1><p>在线演示：<a href="https://fe-bigevent-web.itheima.net/login">https://fe-bigevent-web.itheima.net/login</a></p><p>接口文档:   <a href="https://apifox.com/apidoc/shared-26c67aee-0233-4d23-aab7-08448fdf95ff/api-93850835">https://apifox.com/apidoc/shared-26c67aee-0233-4d23-aab7-08448fdf95ff/api-93850835</a></p><p><strong>接口根路径：</strong>  <a href="http://big-event-vue-api-t.itheima.net/">http://big-event-vue-api-t.itheima.net</a></p><p>本项目的技术栈 本项目技术栈基于 <a href="http://es6.ruanyifeng.com/">ES6</a>、<a href="https://cn.vuejs.org/index.html">vue3</a>、<a href="https://pinia.web3doc.top/">pinia</a>、<a href="https://router.vuejs.org/">vue-router</a> 、vite 、axios 和 <a href="https://element-plus.org/">element-plus</a></p><p><img src="/assets/image-20230711003405635.png" alt="image-20230711003405635"></p><h2 id="项目页面介绍"><a href="#项目页面介绍" class="headerlink" title="项目页面介绍"></a>项目页面介绍</h2><p><img src="/assets/image-20230706205300370.png" alt="image-20230706205300370"></p><p><img src="/assets/image-20230706210947086.png" alt="image-20230706210947086"></p><p><img src="/assets/image-20230706211055251.png" alt="image-20230706211055251"></p><p><img src="/assets/image-20230706211033589.png" alt="image-20230706211033589"></p><h2 id="pnpm-包管理器-创建项目"><a href="#pnpm-包管理器-创建项目" class="headerlink" title="pnpm 包管理器 - 创建项目"></a>pnpm 包管理器 - 创建项目</h2><p>一些优势：比同类工具快 2倍 左右、节省磁盘空间… <a href="https://www.pnpm.cn/">https://www.pnpm.cn/</a></p><p>安装方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pnpm</span><br></pre></td></tr></table></figure><p>创建项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm create vue</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230710172832242.png" alt="image-20230710172832242"></p><h2 id="ESLint-prettier-配置代码风格"><a href="#ESLint-prettier-配置代码风格" class="headerlink" title="ESLint &amp; prettier 配置代码风格"></a>ESLint &amp; prettier 配置代码风格</h2><p><strong>环境同步：</strong></p><ol><li><strong>安装了插件 ESlint，开启保存自动修复</strong></li><li><strong>禁用了插件 Prettier，并关闭保存自动格式化</strong></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESlint插件 + Vscode配置 实现自动格式化修复</span></span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source.fixAll&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">false</span>,</span><br></pre></td></tr></table></figure><p><strong>配置文件 .eslintrc.cjs</strong></p><ol><li><p>prettier 风格配置 <a href="https://prettier.io/docs/en/options.html">https://prettier.io</a></p><ol><li><p>单引号</p></li><li><p>不使用分号</p></li><li><p>每行宽度至多80字符</p></li><li><p>不加对象|数组最后逗号</p></li><li><p>换行符号不限制（win mac 不一致）</p></li></ol></li><li><p>vue组件名称多单词组成（忽略index.vue）</p></li><li><p>props解构（关闭）</p></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rules</span>: &#123;</span><br><span class="line">  <span class="string">&#x27;prettier/prettier&#x27;</span>: [</span><br><span class="line">    <span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">singleQuote</span>: <span class="literal">true</span>, <span class="comment">// 单引号</span></span><br><span class="line">      <span class="attr">semi</span>: <span class="literal">false</span>, <span class="comment">// 无分号</span></span><br><span class="line">      <span class="attr">printWidth</span>: <span class="number">80</span>, <span class="comment">// 每行宽度至多80字符</span></span><br><span class="line">      <span class="attr">trailingComma</span>: <span class="string">&#x27;none&#x27;</span>, <span class="comment">// 不加对象|数组最后逗号</span></span><br><span class="line">      <span class="attr">endOfLine</span>: <span class="string">&#x27;auto&#x27;</span> <span class="comment">// 换行符号不限制（win mac 不一致）</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&#x27;vue/multi-word-component-names&#x27;</span>: [</span><br><span class="line">    <span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">ignores</span>: [<span class="string">&#x27;index&#x27;</span>] <span class="comment">// vue组件名称多单词组成（忽略index.vue）</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&#x27;vue/no-setup-props-destructure&#x27;</span>: [<span class="string">&#x27;off&#x27;</span>], <span class="comment">// 关闭 props 解构的校验</span></span><br><span class="line">  <span class="comment">// 💡 添加未定义变量错误提示，create-vue@3.6.3 关闭，这里加上是为了支持下一个章节演示。</span></span><br><span class="line">  <span class="string">&#x27;no-undef&#x27;</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于-husky-的代码检查工作流"><a href="#基于-husky-的代码检查工作流" class="headerlink" title="基于 husky  的代码检查工作流"></a>基于 husky  的代码检查工作流</h2><p>husky 是一个 git hooks 工具  ( git的钩子工具，可以在特定时机执行特定的命令 )</p><p><strong>husky 配置</strong></p><ol><li><p>git初始化 git init</p></li><li><p>初始化 husky 工具配置  <a href="https://typicode.github.io/husky/">https://typicode.github.io/husky/</a></p></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm dlx husky-init &amp;&amp; pnpm install</span><br></pre></td></tr></table></figure><ol start="3"><li>修改 .husky&#x2F;pre-commit 文件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm lint</span><br></pre></td></tr></table></figure><p><strong>问题：</strong>默认进行的是全量检查，耗时问题，历史问题。</p><p><strong>lint-staged 配置</strong></p><ol><li>安装</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i lint-staged -D</span><br></pre></td></tr></table></figure><ol start="2"><li>配置 <code>package.json</code></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ... 省略 ...</span></span><br><span class="line">  <span class="string">&quot;lint-staged&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;*.&#123;js,ts,vue&#125;&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;eslint --fix&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ... 省略 ...</span></span><br><span class="line">    <span class="string">&quot;lint-staged&quot;</span>: <span class="string">&quot;lint-staged&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改 .husky&#x2F;pre-commit 文件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm lint-staged</span><br></pre></td></tr></table></figure><h2 id="调整项目目录"><a href="#调整项目目录" class="headerlink" title="调整项目目录"></a>调整项目目录</h2><p>默认生成的目录结构不满足我们的开发需求，所以这里需要做一些自定义改动。主要是两个工作：</p><ul><li>删除初始化的默认文件</li><li>修改剩余代码内容</li><li>新增调整我们需要的目录结构</li><li>拷贝初始化资源文件，安装预处理器插件</li></ul><ol><li><p>删除文件</p></li><li><p>修改内容</p></li></ol><p><code>src/router/index.js</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: []</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><code>src/App.vue</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><code>src/main.js</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>新增需要目录 api  utils</li></ol><p><img src="/assets/image-20230710215822678.png" alt="image-20230710215822678"></p><ol start="4"><li>将项目需要的全局样式 和 图片文件，复制到 assets 文件夹中,  并将全局样式在main.js中引入</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/assets/main.scss&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>安装 sass 依赖</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add sass -D</span><br></pre></td></tr></table></figure><h2 id="VueRouter4-路由代码解析"><a href="#VueRouter4-路由代码解析" class="headerlink" title="VueRouter4 路由代码解析"></a>VueRouter4 路由代码解析</h2><p>基础代码解析</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// createRouter 创建路由实例，===&gt; new VueRouter()</span></span><br><span class="line"><span class="comment">// 1. history模式: createWebHistory()   http://xxx/user</span></span><br><span class="line"><span class="comment">// 2. hash模式: createWebHashHistory()  http://xxx/#/user</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vite 的配置 import.meta.env.BASE_URL 是路由的基准地址，默认是 ’/‘</span></span><br><span class="line"><span class="comment">// https://vitejs.dev/guide/build.html#public-base-path</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果将来你部署的域名路径是：http://xxx/my-path/user</span></span><br><span class="line"><span class="comment">// vite.config.ts  添加配置  base: my-path，路由这就会加上 my-path 前缀了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: []</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>import.meta.env.BASE_URL 是Vite 环境变量：<a href="https://cn.vitejs.dev/guide/env-and-mode.html">https://cn.vitejs.dev/guide/env-and-mode.html</a></p><h2 id="引入-element-ui-组件库"><a href="#引入-element-ui-组件库" class="headerlink" title="引入 element-ui 组件库"></a>引入 element-ui 组件库</h2><p><strong>官方文档：</strong> <a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></p><ul><li>安装</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pnpm add element-plus</span><br></pre></td></tr></table></figure><p><strong>自动按需：</strong></p><ol><li>安装插件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add -D unplugin-vue-components unplugin-auto-<span class="keyword">import</span></span><br></pre></td></tr></table></figure><ol start="2"><li>然后把下列代码插入到你的 <code>Vite</code> 或 <code>Webpack</code> 的配置文件中</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    ...</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()]</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>直接使用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230710225018162.png" alt="image-20230710225018162"></p><p><strong>彩蛋：</strong>默认 components 下的文件也会被自动注册~</p><h2 id="Pinia-构建用户仓库-和-持久化"><a href="#Pinia-构建用户仓库-和-持久化" class="headerlink" title="Pinia - 构建用户仓库 和 持久化"></a>Pinia - 构建用户仓库 和 持久化</h2><p>官方文档：<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/</a></p><ol><li>安装插件 pinia-plugin-persistedstate</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add pinia-plugin-persistedstate -D</span><br></pre></td></tr></table></figure><ol start="2"><li>使用 main.js</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> persist <span class="keyword">from</span> <span class="string">&#x27;pinia-plugin-persistedstate&#x27;</span></span><br><span class="line">...</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">createPinia</span>().<span class="title function_">use</span>(persist))</span><br></pre></td></tr></table></figure><ol start="3"><li>配置 stores&#x2F;user.js</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户模块</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore = <span class="title function_">defineStore</span>(</span><br><span class="line">  <span class="string">&#x27;big-user&#x27;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">// 定义 token</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">t</span>) =&gt; (token.<span class="property">value</span> = t) <span class="comment">// 设置 token</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; token, setToken &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">persist</span>: <span class="literal">true</span> <span class="comment">// 持久化</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Pinia-配置仓库统一管理"><a href="#Pinia-配置仓库统一管理" class="headerlink" title="Pinia - 配置仓库统一管理"></a>Pinia - 配置仓库统一管理</h2><p>pinia 独立维护</p><p>- 现在：初始化代码在 main.js 中，仓库代码在 stores 中，代码分散职能不单一</p><p>- 优化：由 stores 统一维护，在 stores&#x2F;index.js 中完成 pinia 初始化，交付 main.js 使用</p><p>仓库 统一导出</p><p>- 现在：使用一个仓库 import { useUserStore } from <code>./stores/user.js</code> 不同仓库路径不一致</p><p>- 优化：由 stores&#x2F;index.js 统一导出，导入路径统一 <code>./stores</code>，而且仓库维护在 stores&#x2F;modules 中</p><h2 id="数据交互-请求工具设计"><a href="#数据交互-请求工具设计" class="headerlink" title="数据交互 - 请求工具设计"></a>数据交互 - 请求工具设计</h2><p><img src="/assets/image-20230711071913061.png" alt="image-20230711071913061"></p><h3 id="1-创建-axios-实例"><a href="#1-创建-axios-实例" class="headerlink" title="1. 创建 axios 实例"></a>1. 创建 axios 实例</h3><p>们会使用 axios 来请求后端接口, 一般都会对 axios 进行一些配置 (比如: 配置基础地址等)</p><p>一般项目开发中, 都会对 axios 进行基本的二次封装, 单独封装到一个模块中, 便于使用</p><ol><li>安装 axios</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add axios</span><br></pre></td></tr></table></figure><ol start="2"><li><p>新建 <code>utils/request.js</code> 封装 axios 模块</p><p>利用 axios.create 创建一个自定义的 axios 来使用</p><p><a href="http://www.axios-js.com/zh-cn/docs/#axios-create-config">http://www.axios-js.com/zh-cn/docs/#axios-create-config</a></p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://big-event-vue-api-t.itheima.net&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="comment">// TODO 1. 基础地址，超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 2. 携带token</span></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 3. 处理业务失败</span></span><br><span class="line">    <span class="comment">// TODO 4. 摘取核心响应数据</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 5. 处理401错误</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance</span><br></pre></td></tr></table></figure><h3 id="2-完成-axios-基本配置"><a href="#2-完成-axios-基本配置" class="headerlink" title="2. 完成 axios 基本配置"></a>2. 完成 axios 基本配置</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://big-event-vue-api-t.itheima.net&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  baseURL,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">100000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">    <span class="keyword">if</span> (userStore.<span class="property">token</span>) &#123;</span><br><span class="line">      config.<span class="property">headers</span>.<span class="property">Authorization</span> = userStore.<span class="property">token</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">message</span>: res.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">message</span>: err.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span> &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="keyword">if</span> (err.<span class="property">response</span>?.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance</span><br><span class="line"><span class="keyword">export</span> &#123; baseURL &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="首页整体路由设计"><a href="#首页整体路由设计" class="headerlink" title="首页整体路由设计"></a>首页整体路由设计</h2><p><strong>实现目标:</strong></p><ul><li>完成整体路由规划【搞清楚要做几个页面，它们分别在哪个路由下面，怎么跳转的…..】</li><li>通过观察,  点击左侧导航,  右侧区域在切换,  那右侧区域内容一直在变,  那这个地方就是一个路由的出口</li><li>我们需要搭建嵌套路由</li></ul><p>目标：</p><ul><li>把项目中所有用到的组件及路由表, 约定下来</li></ul><p><strong>约定路由规则</strong></p><table><thead><tr><th>path</th><th>文件</th><th>功能</th><th>组件名</th><th>路由级别</th></tr></thead><tbody><tr><td>&#x2F;login</td><td>views&#x2F;login&#x2F;LoginPage.vue</td><td>登录&amp;注册</td><td>LoginPage</td><td>一级路由</td></tr><tr><td>&#x2F;</td><td>views&#x2F;layout&#x2F;LayoutContainer.vue</td><td>布局架子</td><td>LayoutContainer</td><td>一级路由</td></tr><tr><td>├─ &#x2F;article&#x2F;manage</td><td>views&#x2F;article&#x2F;ArticleManage.vue</td><td>文章管理</td><td>ArticleManage</td><td>二级路由</td></tr><tr><td>├─ &#x2F;article&#x2F;channel</td><td>views&#x2F;article&#x2F;ArticleChannel.vue</td><td>频道管理</td><td>ArticleChannel</td><td>二级路由</td></tr><tr><td>├─ &#x2F;user&#x2F;profile</td><td>views&#x2F;user&#x2F;UserProfile.vue</td><td>个人详情</td><td>UserProfile</td><td>二级路由</td></tr><tr><td>├─ &#x2F;user&#x2F;avatar</td><td>views&#x2F;user&#x2F;UserAvatar.vue</td><td>更换头像</td><td>UserAvatar</td><td>二级路由</td></tr><tr><td>├─ &#x2F;user&#x2F;password</td><td>views&#x2F;user&#x2F;UserPassword.vue</td><td>重置密码</td><td>UserPassword</td><td>二级路由</td></tr></tbody></table><p>明确了路由规则，可以全部配完，也可以边写边配。</p><h1 id="登录注册页面-element-plus-表单-表单校验"><a href="#登录注册页面-element-plus-表单-表单校验" class="headerlink" title="登录注册页面 [element-plus 表单 &amp; 表单校验]"></a>登录注册页面 [element-plus 表单 &amp; 表单校验]</h1><h2 id="注册登录-静态结构-基本切换"><a href="#注册登录-静态结构-基本切换" class="headerlink" title="注册登录 静态结构 &amp; 基本切换"></a>注册登录 静态结构 &amp; 基本切换</h2><ol><li>安装 element-plus 图标库</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i @element-plus/icons-vue</span><br></pre></td></tr></table></figure><ol start="2"><li>静态结构准备</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span>, <span class="title class_">Lock</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> isRegister = <span class="title function_">ref</span>(<span class="literal">true</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;login-page&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isRegister&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入再次密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            注册</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            ← 返回</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-checkbox</span>&gt;</span>记住我<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>忘记密码？<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span>登录&lt;/el-button</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            注册 →</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.login-page</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.bg</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;@/assets/logo2.png&#x27;</span>) no-repeat <span class="number">60%</span> center / <span class="number">240px</span> auto,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="built_in">url</span>(<span class="string">&#x27;@/assets/login_bg.jpg&#x27;</span>) no-repeat center / cover;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.form</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    user-<span class="selector-tag">select</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.title</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.flex</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h2><h3 id="实现注册校验"><a href="#实现注册校验" class="headerlink" title="实现注册校验"></a>实现注册校验</h3><p>【需求】注册页面基本校验</p><ol><li>用户名非空，长度校验5-10位</li><li>密码非空，长度校验6-15位</li><li>再次输入密码，非空，长度校验6-15位</li></ol><p>【进阶】再次输入密码需要自定义校验规则，和密码框值一致（可选）</p><p>注意：</p><ol><li>model 属性绑定 form 数据对象</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">repassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;el-form :model=<span class="string">&quot;formModel&quot;</span> &gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>v-model 绑定 form 数据对象的子属性</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">  v-model=<span class="string">&quot;formModel.username&quot;</span></span><br><span class="line">  :prefix-icon=<span class="string">&quot;User&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请输入用户名&quot;</span></span><br><span class="line">&gt;&lt;/el-input&gt;</span><br><span class="line">... </span><br><span class="line">(其他两个也要绑定)</span><br></pre></td></tr></table></figure><ol start="3"><li>rules 配置校验规则</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form :rules=<span class="string">&quot;rules&quot;</span> &gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">username</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">min</span>: <span class="number">5</span>, <span class="attr">max</span>: <span class="number">10</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名必须是5-10位的字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">password</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码必须是6-15位的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">repassword</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请再次输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码必须是6-15的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">validator</span>: <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value !== formModel.<span class="property">value</span>.<span class="property">password</span>) &#123;</span><br><span class="line">          <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;两次输入密码不一致!&#x27;</span>))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">callback</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>prop 绑定校验规则</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item prop=<span class="string">&quot;username&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;formModel.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line">... </span><br><span class="line">(其他两个也要绑定prop)</span><br></pre></td></tr></table></figure><h3 id="注册前的预校验"><a href="#注册前的预校验" class="headerlink" title="注册前的预校验"></a>注册前的预校验</h3><p>需求：点击注册按钮，注册之前，需要先校验</p><ol><li>通过 ref 获取到 表单组件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;el-form ref=<span class="string">&quot;form&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>注册之前进行校验</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button</span><br><span class="line">  @click=<span class="string">&quot;register&quot;</span></span><br><span class="line">  <span class="keyword">class</span>=<span class="string">&quot;button&quot;</span></span><br><span class="line">  type=<span class="string">&quot;primary&quot;</span></span><br><span class="line">  auto-insert-space</span><br><span class="line">&gt;</span><br><span class="line">  注册</span><br><span class="line">&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始注册请求&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装-api-实现注册功能"><a href="#封装-api-实现注册功能" class="headerlink" title="封装 api 实现注册功能"></a>封装 api 实现注册功能</h3><p>需求：封装注册api，进行注册，注册成功切换到登录</p><ol><li>新建 api&#x2F;user.js 封装</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userRegisterService</span> = (<span class="params">&#123; username, password, repassword &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;/api/reg&#x27;</span>, &#123; username, password, repassword &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">userRegisterService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;注册成功&#x27;</span>)</span><br><span class="line">  <span class="comment">// 切换到登录</span></span><br><span class="line">  isRegister.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>eslintrc 中声明全局变量名,  解决 ElMessage 报错问题</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">globals</span>: &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>: <span class="string">&#x27;readonly&#x27;</span>,</span><br><span class="line">    <span class="title class_">ElMessageBox</span>: <span class="string">&#x27;readonly&#x27;</span>,</span><br><span class="line">    <span class="title class_">ElLoading</span>: <span class="string">&#x27;readonly&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h2><h3 id="实现登录校验"><a href="#实现登录校验" class="headerlink" title="实现登录校验"></a>实现登录校验</h3><p>【需求说明】给输入框添加表单校验</p><ol><li>用户名不能为空，用户名必须是5-10位的字符，失去焦点 和 修改内容时触发校验</li><li>密码不能为空，密码必须是6-15位的字符，失去焦点 和 修改内容时触发校验</li></ol><p>操作步骤：</p><ol><li>model 属性绑定 form 数据对象，直接绑定之前提供好的数据对象即可</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form :model=<span class="string">&quot;formModel&quot;</span> &gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>rules 配置校验规则，共用注册的规则即可</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form :rules=<span class="string">&quot;rules&quot;</span> &gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>v-model 绑定 form 数据对象的子属性</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">  v-model=<span class="string">&quot;formModel.username&quot;</span></span><br><span class="line">  :prefix-icon=<span class="string">&quot;User&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请输入用户名&quot;</span></span><br><span class="line">&gt;&lt;/el-input&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">v-model</span>=<span class="string">&quot;formModel.password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li>prop 绑定校验规则</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item prop=<span class="string">&quot;username&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;formModel.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line">... </span><br></pre></td></tr></table></figure><ol start="5"><li>切换的时候重置</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">watch</span>(isRegister, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  formModel.<span class="property">value</span> = &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">repassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="登录前的预校验-登录成功"><a href="#登录前的预校验-登录成功" class="headerlink" title="登录前的预校验 &amp; 登录成功"></a>登录前的预校验 &amp; 登录成功</h3><p>【需求说明1】登录之前的预校验</p><ul><li>登录请求之前，需要对用户的输入内容，进行校验</li><li>校验通过才发送请求</li></ul><p>【需求说明2】<strong>登录功能</strong></p><ol><li>封装登录API，点击按钮发送登录请求</li><li>登录成功存储token，存入pinia 和 持久化本地storage</li><li>跳转到首页，给提示</li></ol><p>【测试账号】</p><ul><li><p>登录的测试账号:  shuaipeng</p></li><li><p>登录测试密码:  123456</p></li></ul><p>PS: 每天账号会重置，如果被重置了，可以去注册页，注册一个新号</p><p>实现步骤：</p><ol><li>注册事件，进行登录前的预校验 (获取到组件调用方法)</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form ref=<span class="string">&quot;form&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始登录&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>封装接口 API</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userLoginService</span> = (<span class="params">&#123; username, password &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;api/login&#x27;</span>, &#123; username, password &#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>调用方法将 token 存入 pinia 并 自动持久化本地</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">userLoginService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  userStore.<span class="title function_">setToken</span>(res.<span class="property">data</span>.<span class="property">token</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">  router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="首页-layout-架子-element-plus-菜单"><a href="#首页-layout-架子-element-plus-菜单" class="headerlink" title="首页 layout 架子 [element-plus 菜单]"></a>首页 layout 架子 [element-plus 菜单]</h1><h2 id="基本架子拆解"><a href="#基本架子拆解" class="headerlink" title="基本架子拆解"></a>基本架子拆解</h2><p><strong>架子组件列表：</strong></p><p>el-container</p><ul><li><p>el-aside 左侧</p><ul><li>el-menu 左侧边栏菜单</li></ul></li><li><p>el-container  右侧</p><ul><li>el-header  右侧头部<ul><li>el-dropdown</li></ul></li><li>el-main  右侧主体<ul><li>router-view</li></ul></li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">Management</span>,</span><br><span class="line">  <span class="title class_">Promotion</span>,</span><br><span class="line">  <span class="title class_">UserFilled</span>,</span><br><span class="line">  <span class="title class_">User</span>,</span><br><span class="line">  <span class="title class_">Crop</span>,</span><br><span class="line">  <span class="title class_">EditPen</span>,</span><br><span class="line">  <span class="title class_">SwitchButton</span>,</span><br><span class="line">  <span class="title class_">CaretBottom</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;@/assets/default.png&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-container class=&quot;layout-container&quot;&gt;</span><br><span class="line">    &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;el-aside__logo&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;el-menu</span><br><span class="line">        active-text-color=&quot;#ffd04b&quot;</span><br><span class="line">        background-color=&quot;#232323&quot;</span><br><span class="line">        :default-active=&quot;$route.path&quot;</span><br><span class="line">        text-color=&quot;#fff&quot;</span><br><span class="line">        router</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;/article/channel&quot;&gt;</span><br><span class="line">          &lt;el-icon&gt;&lt;Management /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;span&gt;文章分类&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;/article/manage&quot;&gt;</span><br><span class="line">          &lt;el-icon&gt;&lt;Promotion /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;span&gt;文章管理&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-sub-menu index=&quot;/user&quot;&gt;</span><br><span class="line">          &lt;template #title&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;UserFilled /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人中心&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/profile&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;User /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;基本资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/avatar&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;Crop /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;更换头像&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/password&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;EditPen /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;重置密码&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-sub-menu&gt;</span><br><span class="line">      &lt;/el-menu&gt;</span><br><span class="line">    &lt;/el-aside&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-header&gt;</span><br><span class="line">        &lt;div&gt;黑马程序员：&lt;strong&gt;小帅鹏&lt;/strong&gt;&lt;/div&gt;</span><br><span class="line">        &lt;el-dropdown placement=&quot;bottom-end&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;el-dropdown__box&quot;&gt;</span><br><span class="line">            &lt;el-avatar :src=&quot;avatar&quot; /&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;CaretBottom /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;template #dropdown&gt;</span><br><span class="line">            &lt;el-dropdown-menu&gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;profile&quot; :icon=&quot;User&quot;</span><br><span class="line">                &gt;基本资料&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;avatar&quot; :icon=&quot;Crop&quot;</span><br><span class="line">                &gt;更换头像&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;password&quot; :icon=&quot;EditPen&quot;</span><br><span class="line">                &gt;重置密码&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;logout&quot; :icon=&quot;SwitchButton&quot;</span><br><span class="line">                &gt;退出登录&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/el-dropdown-menu&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-dropdown&gt;</span><br><span class="line">      &lt;/el-header&gt;</span><br><span class="line">      &lt;el-main&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">      &lt;/el-main&gt;</span><br><span class="line">      &lt;el-footer&gt;大事件 ©2023 Created by 黑马程序员&lt;/el-footer&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.layout-container &#123;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  .el-aside &#123;</span><br><span class="line">    background-color: #232323;</span><br><span class="line">    &amp;__logo &#123;</span><br><span class="line">      height: 120px;</span><br><span class="line">      background: url(&#x27;@/assets/logo.png&#x27;) no-repeat center / 120px auto;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-menu &#123;</span><br><span class="line">      border-right: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-header &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    .el-dropdown__box &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      .el-icon &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:active,</span><br><span class="line">      &amp;:focus &#123;</span><br><span class="line">        outline: none;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-footer &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="登录访问拦截"><a href="#登录访问拦截" class="headerlink" title="登录访问拦截"></a>登录访问拦截</h2><p>需求：只有登录页，可以未授权的时候访问，其他所有页面，都需要先登录再访问</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录访问拦截</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">  <span class="keyword">if</span> (!userStore.<span class="property">token</span> &amp;&amp; to.<span class="property">path</span> !== <span class="string">&#x27;/login&#x27;</span>) <span class="keyword">return</span> <span class="string">&#x27;/login&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="用户基本信息获取-渲染"><a href="#用户基本信息获取-渲染" class="headerlink" title="用户基本信息获取&amp;渲染"></a>用户基本信息获取&amp;渲染</h2><ol><li><code>api/user.js</code>封装接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userGetInfoService</span> = (<span class="params"></span>) =&gt; request.<span class="title function_">get</span>(<span class="string">&#x27;/my/userinfo&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>stores&#x2F;modules&#x2F;user.js 定义数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getUser</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">userGetInfoService</span>() <span class="comment">// 请求获取数据</span></span><br><span class="line">  user.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>layout/LayoutContainer</code>页面中调用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  userStore.<span class="title function_">getUser</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="4"><li>动态渲染</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  黑马程序员：&lt;strong&gt;&#123;&#123; userStore.<span class="property">user</span>.<span class="property">nickname</span> || userStore.<span class="property">user</span>.<span class="property">username</span> &#125;&#125;&lt;/strong&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-avatar</span> <span class="attr">:src</span>=<span class="string">&quot;userStore.user.user_pic || avatar&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="退出功能-element-plus-确认框"><a href="#退出功能-element-plus-确认框" class="headerlink" title="退出功能 [element-plus 确认框]"></a>退出功能 [element-plus 确认框]</h2><ol><li>注册点击事件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dropdown placement=<span class="string">&quot;bottom-end&quot;</span> @command=<span class="string">&quot;onCommand&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;User&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Crop&quot;</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;password&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;EditPen&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;logout&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;SwitchButton&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加退出功能</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onCommand</span> = <span class="keyword">async</span> (<span class="params">command</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (command === <span class="string">&#x27;logout&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认退出大事件吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">      <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">      <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    userStore.<span class="title function_">removeToken</span>()</span><br><span class="line">    userStore.<span class="title function_">setUser</span>(&#123;&#125;)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">`/login`</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">`/user/<span class="subst">$&#123;command&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>pinia  user.js 模块 提供 setUser 方法</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">setUser</span> = (<span class="params">obj</span>) =&gt; (user.<span class="property">value</span> = obj)</span><br></pre></td></tr></table></figure><h1 id="文章分类页面-element-plus-表格"><a href="#文章分类页面-element-plus-表格" class="headerlink" title="文章分类页面 - [element-plus 表格]"></a>文章分类页面 - [element-plus 表格]</h1><h2 id="基本架子-PageContainer"><a href="#基本架子-PageContainer" class="headerlink" title="基本架子 - PageContainer"></a>基本架子 - PageContainer</h2><ol><li>基本结构样式，用到了 el-card 组件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.page-container</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.header</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>考虑到多个页面复用，封装成组件<ul><li>props 定制标题</li><li>默认插槽 default 定制内容主体</li><li>具名插槽 extra  定制头部右侧额外的按钮</li></ul></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;extra&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.page-container</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.header</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面中直接使用测试 ( unplugin-vue-components 会自动注册)</li></ol><ul><li>文章分类测试：</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;文章分类&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">extra</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 添加分类 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    主体部分</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ul><li>文章管理测试：</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;文章管理&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">extra</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布文章<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    主体部分</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="文章分类渲染"><a href="#文章分类渲染" class="headerlink" title="文章分类渲染"></a>文章分类渲染</h2><h3 id="封装API-请求获取表格数据"><a href="#封装API-请求获取表格数据" class="headerlink" title="封装API - 请求获取表格数据"></a>封装API - 请求获取表格数据</h3><ol><li>新建 <code>api/article.js</code> 封装获取频道列表的接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetChannelsService</span> = (<span class="params"></span>) =&gt; request.<span class="title function_">get</span>(<span class="string">&#x27;/my/cate/list&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中调用接口，获取数据存储</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> channelList = <span class="title function_">ref</span>([])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="el-table-表格动态渲染"><a href="#el-table-表格动态渲染" class="headerlink" title="el-table 表格动态渲染"></a>el-table 表格动态渲染</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table :data=<span class="string">&quot;channelList&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_alias&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onEditChannel(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onDelChannel(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDelChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="el-table-表格-loading-效果"><a href="#el-table-表格-loading-效果" class="headerlink" title="el-table 表格 loading 效果"></a>el-table 表格 loading 效果</h3><ol><li>定义变量，v-loading绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&lt;el-table v-loading=<span class="string">&quot;loading&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>发送请求前开启，请求结束关闭</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章分类添加编辑-element-plus-弹层"><a href="#文章分类添加编辑-element-plus-弹层" class="headerlink" title="文章分类添加编辑 [element-plus 弹层]"></a>文章分类添加编辑 [element-plus 弹层]</h2><h3 id="点击显示弹层"><a href="#点击显示弹层" class="headerlink" title="点击显示弹层"></a>点击显示弹层</h3><ol><li>准备弹层</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&lt;el-dialog v-model=<span class="string">&quot;dialogVisible&quot;</span> title=<span class="string">&quot;添加弹层&quot;</span> width=<span class="string">&quot;30%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是内容部分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>点击事件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template #extra&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onAddChannel&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span>&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddChannel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装弹层组件-ChannelEdit"><a href="#封装弹层组件-ChannelEdit" class="headerlink" title="封装弹层组件 ChannelEdit"></a>封装弹层组件 ChannelEdit</h3><p>添加 和 编辑，可以共用一个弹层，所以可以将弹层封装成一个组件</p><p>组件对外暴露一个方法 open,  基于 open 的参数，初始化表单数据，并判断区分是添加 还是 编辑</p><ol><li>open({ })                   &#x3D;&gt;  添加操作，添加表单初始化无数据</li><li>open({ id: xx,  …  })  &#x3D;&gt;  编辑操作，编辑表单初始化需回显</li></ol><p>具体实现：</p><ol><li>封装组件 <code>article/components/ChannelEdit.vue</code></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  open</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">title</span>=<span class="string">&quot;添加弹层&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是内容部分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过 ref 绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dialog = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;!-- 弹窗 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">channel-edit</span> <span class="attr">ref</span>=<span class="string">&quot;dialog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">channel-edit</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>点击调用方法显示弹窗</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onAddChannel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  dialog.<span class="property">value</span>.<span class="title function_">open</span>(&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialog.<span class="property">value</span>.<span class="title function_">open</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="准备弹层表单"><a href="#准备弹层表单" class="headerlink" title="准备弹层表单"></a>准备弹层表单</h3><ol><li>准备数据 和 校验规则</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">cate_name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_alias</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">cate_name</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类名称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;1,10&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;分类名必须是1-10位的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">cate_alias</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类别名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^[a-zA-Z0-9]&#123;1,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;分类别名必须是1-15位的字母数字&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>准备表单</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form</span><br><span class="line">  :model=<span class="string">&quot;formModel&quot;</span></span><br><span class="line">  :rules=<span class="string">&quot;rules&quot;</span></span><br><span class="line">  label-width=<span class="string">&quot;100px&quot;</span></span><br><span class="line">  style=<span class="string">&quot;padding-right: 30px&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_alias&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_alias&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">maxlength</span>=<span class="string">&quot;15&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>编辑需要回显，表单数据需要初始化</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  formModel.<span class="property">value</span> = &#123; ...row &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>基于传过来的表单数据，进行标题控制，有 id 的是编辑</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:title=<span class="string">&quot;formModel.id ? &#x27;编辑分类&#x27; : &#x27;添加分类&#x27;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="确认提交"><a href="#确认提交" class="headerlink" title="确认提交"></a>确认提交</h3><ol><li><code>api/article.js  </code>  封装请求 API</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artAddChannelService</span> = (<span class="params">data</span>) =&gt; request.<span class="title function_">post</span>(<span class="string">&#x27;/my/cate/add&#x27;</span>, data)</span><br><span class="line"><span class="comment">// 编辑文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artEditChannelService</span> = (<span class="params">data</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">put</span>(<span class="string">&#x27;/my/cate/info&#x27;</span>, data)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中校验，判断，提交请求</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form ref=<span class="string">&quot;formRef&quot;</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">id</span></span><br><span class="line">    ? <span class="keyword">await</span> <span class="title function_">artEditChannelService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">    : <span class="keyword">await</span> <span class="title function_">artAddChannelService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: formModel.<span class="property">value</span>.<span class="property">id</span> ? <span class="string">&#x27;编辑成功&#x27;</span> : <span class="string">&#x27;添加成功&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>通知父组件进行回显</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;success&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>父组件监听 success 事件，进行调用回显</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;channel-edit ref=<span class="string">&quot;dialog&quot;</span> @success=<span class="string">&quot;onSuccess&quot;</span>&gt;&lt;/channel-edit&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSuccess</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">getChannelList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章分类删除"><a href="#文章分类删除" class="headerlink" title="文章分类删除"></a>文章分类删除</h2><ol><li><code>api/article.js</code>封装接口 api</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artDelChannelService</span> = (<span class="params">id</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">delete</span>(<span class="string">&#x27;/my/cate/del&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123; id &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中添加确认框，调用接口进行提示</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onDelChannel</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认删除该分类信息吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">artDelChannelService</span>(row.<span class="property">id</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">getChannelList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文章管理页面-element-plus-强化"><a href="#文章管理页面-element-plus-强化" class="headerlink" title="文章管理页面 - [element-plus 强化]"></a>文章管理页面 - [element-plus 强化]</h1><h2 id="文章列表渲染"><a href="#文章列表渲染" class="headerlink" title="文章列表渲染"></a>文章列表渲染</h2><h3 id="基本架子搭建"><a href="#基本架子搭建" class="headerlink" title="基本架子搭建"></a>基本架子搭建</h3><p><img src="/assets/image-20230724224754131.png" alt="image-20230724224754131"></p><ol><li>搜索表单</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form inline&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类：&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;新闻&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;体育&quot;</span> <span class="attr">value</span>=<span class="string">&quot;222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;发布状态：&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;已发布&quot;</span> <span class="attr">value</span>=<span class="string">&quot;已发布&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;草稿&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草稿&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>表格准备，模拟假数据渲染</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Delete</span>, <span class="title class_">Edit</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 假数据</span></span><br><span class="line"><span class="keyword">const</span> articleList = <span class="title function_">ref</span>([</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">5961</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;新的文章啊&#x27;</span>,</span><br><span class="line">    <span class="attr">pub_date</span>: <span class="string">&#x27;2022-07-10 14:53:52.604&#x27;</span>,</span><br><span class="line">    <span class="attr">state</span>: <span class="string">&#x27;已发布&#x27;</span>,</span><br><span class="line">    <span class="attr">cate_name</span>: <span class="string">&#x27;体育&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">5962</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;新的文章啊&#x27;</span>,</span><br><span class="line">    <span class="attr">pub_date</span>: <span class="string">&#x27;2022-07-10 14:54:30.904&#x27;</span>,</span><br><span class="line">    <span class="attr">state</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">cate_name</span>: <span class="string">&#x27;体育&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table :data=<span class="string">&quot;articleList&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123; row.title &#125;&#125;<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;发表时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;pub_date&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onEditArticle(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onDeleteArticle(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDeleteArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中英国际化处理"><a href="#中英国际化处理" class="headerlink" title="中英国际化处理"></a>中英国际化处理</h3><p>默认是英文的，由于这里不涉及切换， 所以在 App.vue 中直接导入设置成中文即可，</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">&#x27;element-plus/es/locale/lang/zh-cn.mjs&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 国际化处理 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-config-provider</span> <span class="attr">:locale</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-config-provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="文章分类选择"><a href="#文章分类选择" class="headerlink" title="文章分类选择"></a>文章分类选择</h3><p>为了便于维护，直接拆分成一个小组件 ChannelSelect.vue</p><ol><li>新建 article&#x2F;components&#x2F;ChannelSelect.vue</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;新闻&quot;</span> <span class="attr">value</span>=<span class="string">&quot;新闻&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;体育&quot;</span> <span class="attr">value</span>=<span class="string">&quot;体育&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中导入渲染</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import ChannelSelect from &#x27;./components/ChannelSelect.vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;el-form-item label=&quot;文章分类：&quot;&gt;</span><br><span class="line">  &lt;channel-select&gt;&lt;/channel-select&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>调用接口，动态渲染下拉分类，设计成 v-model 的使用方式</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; artGetChannelsService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/article&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">modelValue</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">Number</span>, <span class="title class_">String</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> channelList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getChannelList</span>()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:modelValue</span>=<span class="string">&quot;modelValue&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">update:modelValue</span>=<span class="string">&quot;emit(&#x27;update:modelValue&#x27;, $event)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-for</span>=<span class="string">&quot;channel in channelList&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:key</span>=<span class="string">&quot;channel.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:label</span>=<span class="string">&quot;channel.cate_name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:value</span>=<span class="string">&quot;channel.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li>父组件定义参数绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">pagenum</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">pagesize</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;channel-select v-model=<span class="string">&quot;params.cate_id&quot;</span>&gt;&lt;/channel-select&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>发布状态，也绑定一下，便于将来提交表单</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-select v-model=<span class="string">&quot;params.state&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;已发布&quot;</span> <span class="attr">value</span>=<span class="string">&quot;已发布&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;草稿&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草稿&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure><h3 id="封装-API-接口，请求渲染"><a href="#封装-API-接口，请求渲染" class="headerlink" title="封装 API 接口，请求渲染"></a>封装 API 接口，请求渲染</h3><p><strong>没有数据，可以登录已完成的系统，添加几条数据</strong></p><ol><li><code>api/article.js</code>封装接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetListService</span> = (<span class="params">params</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">get</span>(<span class="string">&#x27;/my/article/list&#x27;</span>, &#123; params &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中调用保存数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> articleList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">const</span> total = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArticleList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetListService</span>(params.<span class="property">value</span>)</span><br><span class="line">  articleList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  total.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">total</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticleList</span>()</span><br></pre></td></tr></table></figure><ol start="3"><li>新建 <code>utils/format.js</code> 封装格式化日期函数</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; dayjs &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">formatTime</span> = (<span class="params">time</span>) =&gt; <span class="title function_">dayjs</span>(time).<span class="title function_">format</span>(<span class="string">&#x27;YYYY年MM月DD日&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="4"><li>导入使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import &#123; formatTime &#125; from &#x27;@/utils/format&#x27;</span><br><span class="line"></span><br><span class="line">&lt;el-table-column label=&quot;发表时间&quot;&gt;</span><br><span class="line">  &lt;template #default=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; formatTime(row.pub_date) &#125;&#125;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><h3 id="分页渲染-element-plus-分页"><a href="#分页渲染-element-plus-分页" class="headerlink" title="分页渲染 [element-plus 分页]"></a>分页渲染 [element-plus 分页]</h3><ol><li>分页组件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-pagination</span><br><span class="line">  v-<span class="attr">model</span>:current-page=<span class="string">&quot;params.pagenum&quot;</span></span><br><span class="line">  v-<span class="attr">model</span>:page-size=<span class="string">&quot;params.pagesize&quot;</span></span><br><span class="line">  :page-sizes=<span class="string">&quot;[2, 3, 4, 5, 10]&quot;</span></span><br><span class="line">  layout=<span class="string">&quot;jumper, total, sizes, prev, pager, next&quot;</span></span><br><span class="line">  background</span><br><span class="line">  :total=<span class="string">&quot;total&quot;</span></span><br><span class="line">  @size-change=<span class="string">&quot;onSizeChange&quot;</span></span><br><span class="line">  @current-change=<span class="string">&quot;onCurrentChange&quot;</span></span><br><span class="line">  style=<span class="string">&quot;margin-top: 20px; justify-content: flex-end&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>提供分页修改逻辑</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onSizeChange</span> = (<span class="params">size</span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagesize</span> = size</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onCurrentChange</span> = (<span class="params">page</span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = page</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加-loading-处理"><a href="#添加-loading-处理" class="headerlink" title="添加 loading 处理"></a>添加 loading 处理</h3><ol><li>准备数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>el-table上面绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table v-loading=<span class="string">&quot;loading&quot;</span> &gt; ... &lt;/el-table&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>发送请求时添加 loading</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getArticleList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticleList</span>()</span><br></pre></td></tr></table></figure><h3 id="搜索-和-重置功能"><a href="#搜索-和-重置功能" class="headerlink" title="搜索 和 重置功能"></a>搜索 和 重置功能</h3><ol><li>注册事件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onSearch&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onReset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>绑定处理</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onSearch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onReset</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">cate_id</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">state</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章发布-修改-element-plus-抽屉"><a href="#文章发布-修改-element-plus-抽屉" class="headerlink" title="文章发布&amp;修改 [element-plus - 抽屉]"></a>文章发布&amp;修改 [element-plus - 抽屉]</h2><h3 id="点击显示抽屉"><a href="#点击显示抽屉" class="headerlink" title="点击显示抽屉"></a>点击显示抽屉</h3><ol><li>准备数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>准备抽屉容器</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-drawer</span><br><span class="line">  v-model=<span class="string">&quot;visibleDrawer&quot;</span></span><br><span class="line">  title=<span class="string">&quot;大标题&quot;</span></span><br><span class="line">  direction=<span class="string">&quot;rtl&quot;</span></span><br><span class="line">  size=<span class="string">&quot;50%&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Hi there!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/el-drawer&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>点击修改布尔值显示抽屉</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">&quot;primary&quot;</span> @click=<span class="string">&quot;onAddArticle&quot;</span>&gt;发布文章&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddArticle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装抽屉组件-ArticleEdit"><a href="#封装抽屉组件-ArticleEdit" class="headerlink" title="封装抽屉组件 ArticleEdit"></a>封装抽屉组件 ArticleEdit</h3><p>添加 和 编辑，可以共用一个抽屉，所以可以将抽屉封装成一个组件</p><p>组件对外暴露一个方法 open,  基于 open 的参数，初始化表单数据，并判断区分是添加 还是 编辑</p><ol><li>open({ })                   &#x3D;&gt;  添加操作，添加表单初始化无数据</li><li>open({ id: xx,  …  })  &#x3D;&gt;  编辑操作，编辑表单初始化需回显</li></ol><p>具体实现：</p><ol><li>封装组件 <code>article/components/ArticleEdit.vue</code></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  open</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 抽屉 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-drawer</span> <span class="attr">v-model</span>=<span class="string">&quot;visibleDrawer&quot;</span> <span class="attr">title</span>=<span class="string">&quot;大标题&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;rtl&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Hi there!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-drawer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过 ref 绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> articleEditRef = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;!-- 弹窗 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">article-edit</span> <span class="attr">ref</span>=<span class="string">&quot;articleEditRef&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">article-edit</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>点击调用方法显示弹窗</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编辑新增逻辑</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddArticle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  articleEditRef.<span class="property">value</span>.<span class="title function_">open</span>(&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  articleEditRef.<span class="property">value</span>.<span class="title function_">open</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完善抽屉表单结构"><a href="#完善抽屉表单结构" class="headerlink" title="完善抽屉表单结构"></a>完善抽屉表单结构</h3><ol><li>准备数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cover_img</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>准备 form 表单结构</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ChannelSelect</span> <span class="keyword">from</span> <span class="string">&#x27;./ChannelSelect.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-drawer</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;visibleDrawer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:title</span>=<span class="string">&quot;formModel.id ? &#x27;编辑文章&#x27; : &#x27;添加文章&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">direction</span>=<span class="string">&quot;rtl&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">size</span>=<span class="string">&quot;50%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 发表文章表单 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;formModel&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formModel.title&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入标题&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">channel-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span><span class="tag">&lt;/<span class="name">channel-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章封面&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cover_img&quot;</span>&gt;</span> 文件上传 <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章内容&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span>富文本编辑器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-drawer</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>一打开默认重置添加的 form 表单数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> defaultForm = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cover_img</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123; ...defaultForm &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">    formModel.<span class="property">value</span> = &#123; ...defaultForm &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>扩展 下拉菜单 width props</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">modelValue</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">Number</span>, <span class="title class_">String</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">width</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;el-select</span><br><span class="line"> ...</span><br><span class="line"> :style=<span class="string">&quot;&#123; width &#125;&quot;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="上传文件-element-plus-文件预览"><a href="#上传文件-element-plus-文件预览" class="headerlink" title="上传文件 [element-plus - 文件预览]"></a>上传文件 [element-plus - 文件预览]</h3><ol><li>关闭自动上传，准备结构</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;el-upload</span><br><span class="line">  <span class="keyword">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span><br><span class="line">  :auto-upload=<span class="string">&quot;false&quot;</span></span><br><span class="line">  :show-file-list=<span class="string">&quot;false&quot;</span></span><br><span class="line">  :on-change=<span class="string">&quot;onUploadFile&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader-icon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">Plus</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span></span><br><span class="line">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>准备数据 和 选择图片的处理逻辑</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">uploadFile</span>) =&gt; &#123;</span><br><span class="line">  imgUrl.<span class="property">value</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(uploadFile.<span class="property">raw</span>)</span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">cover_img</span> = uploadFile.<span class="property">raw</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>样式美化</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar-uploader</span> &#123;</span><br><span class="line">  :<span class="built_in">deep</span>() &#123;</span><br><span class="line">    <span class="selector-class">.avatar</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-upload</span> &#123;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="富文本编辑器-vue-quill"><a href="#富文本编辑器-vue-quill" class="headerlink" title="富文本编辑器 [ vue-quill ]"></a>富文本编辑器 [ vue-quill ]</h3><p>官网地址：<a href="https://vueup.github.io/vue-quill/">https://vueup.github.io/vue-quill/</a></p><ol><li>安装包</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add @vueup/vue-quill@latest</span><br></pre></td></tr></table></figure><ol start="2"><li>注册成局部组件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">QuillEditor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueup/vue-quill&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@vueup/vue-quill/dist/vue-quill.snow.css&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面中使用绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">quill-editor</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">theme</span>=<span class="string">&quot;snow&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model:content</span>=<span class="string">&quot;formModel.content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">contentType</span>=<span class="string">&quot;html&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>样式美化</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">editor</span> &#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="number">100</span>%;</span><br><span class="line">  :<span class="title function_">deep</span>(<span class="params">.ql-editor</span>) &#123;</span><br><span class="line">    min-<span class="attr">height</span>: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加文章功能"><a href="#添加文章功能" class="headerlink" title="添加文章功能"></a>添加文章功能</h3><ol><li>封装添加接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artPublishService</span> = (<span class="params">data</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;/my/article/add&#x27;</span>, data)</span><br></pre></td></tr></table></figure><ol start="2"><li>注册点击事件调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onPublish(&#x27;已发布&#x27;)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onPublish(&#x27;草稿&#x27;)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布文章</span></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;success&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onPublish</span> = <span class="keyword">async</span> (<span class="params">state</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 将已发布还是草稿状态，存入 state</span></span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">state</span> = state</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 转换 formData 数据</span></span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> formModel.<span class="property">value</span>) &#123;</span><br><span class="line">    fd.<span class="title function_">append</span>(key, formModel.<span class="property">value</span>[key])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (formModel.<span class="property">value</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑操作&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 添加请求</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">artPublishService</span>(fd)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;添加成功&#x27;</span>)</span><br><span class="line">    visibleDrawer.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;add&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父组件监听事件，重新渲染</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;article-edit ref=<span class="string">&quot;articleEditRef&quot;</span> @success=<span class="string">&quot;onSuccess&quot;</span>&gt;&lt;/article-edit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加修改成功</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSuccess</span> = (<span class="params">type</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果是添加，需要跳转渲染最后一页，编辑直接渲染当前页</span></span><br><span class="line">    <span class="keyword">const</span> lastPage = <span class="title class_">Math</span>.<span class="title function_">ceil</span>((total.<span class="property">value</span> + <span class="number">1</span>) / params.<span class="property">value</span>.<span class="property">pagesize</span>)</span><br><span class="line">    params.<span class="property">value</span>.<span class="property">pagenum</span> = lastPage</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加完成后的内容重置"><a href="#添加完成后的内容重置" class="headerlink" title="添加完成后的内容重置"></a>添加完成后的内容重置</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> editorRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    formModel.<span class="property">value</span> = &#123; ...defaultForm &#125;</span><br><span class="line">    imgUrl.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    editorRef.<span class="property">value</span>.<span class="title function_">setHTML</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编辑文章回显"><a href="#编辑文章回显" class="headerlink" title="编辑文章回显"></a>编辑文章回显</h3><p>如果是编辑操作，一打开抽屉，就需要发送请求，获取数据进行回显</p><ol><li>封装接口，根据 id 获取详情数据</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetDetailService</span> = (<span class="params">id</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">get</span>(<span class="string">&#x27;my/article/info&#x27;</span>, &#123; <span class="attr">params</span>: &#123; id &#125; &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中调用渲染</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetDetailService</span>(row.<span class="property">id</span>)</span><br><span class="line">    formModel.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">    imgUrl.<span class="property">value</span> = baseURL + formModel.<span class="property">value</span>.<span class="property">cover_img</span></span><br><span class="line">    <span class="comment">// 提交给后台，需要的是 file 格式的，将网络图片，转成 file 格式</span></span><br><span class="line">    <span class="comment">// 网络图片转成 file 对象, 需要转换一下</span></span><br><span class="line">    formModel.<span class="property">value</span>.<span class="property">cover_img</span> = <span class="keyword">await</span> <span class="title function_">imageUrlToFile</span>(imgUrl.<span class="property">value</span>, formModel.<span class="property">value</span>.<span class="property">cover_img</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>chatGPT prompt：封装一个函数，基于 axios， 网络图片地址，转 file 对象， 请注意：写中文注释</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将网络图片地址转换为File对象</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">imageUrlToFile</span>(<span class="params">url, fileName</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 第一步：使用axios获取网络图片数据</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> axios.<span class="title function_">get</span>(url, &#123; <span class="attr">responseType</span>: <span class="string">&#x27;arraybuffer&#x27;</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> imageData = response.<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二步：将图片数据转换为Blob对象</span></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([imageData], &#123; <span class="attr">type</span>: response.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>] &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第三步：创建一个新的File对象</span></span><br><span class="line">    <span class="keyword">const</span> file = <span class="keyword">new</span> <span class="title class_">File</span>([blob], fileName, &#123; <span class="attr">type</span>: blob.<span class="property">type</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;将图片转换为File对象时发生错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">throw</span> error;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编辑文章功能"><a href="#编辑文章功能" class="headerlink" title="编辑文章功能"></a>编辑文章功能</h3><ol><li>封装编辑接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artEditService</span> = (<span class="params">data</span>) =&gt; request.<span class="title function_">put</span>(<span class="string">&#x27;my/article/info&#x27;</span>, data)</span><br></pre></td></tr></table></figure><ol start="2"><li>提交时调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onPublish</span> = <span class="keyword">async</span> (<span class="params">state</span>) =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">if</span> (formModel.<span class="property">value</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">artEditService</span>(fd)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;编辑成功&#x27;</span>)</span><br><span class="line">    visibleDrawer.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;edit&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 添加请求</span></span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章删除"><a href="#文章删除" class="headerlink" title="文章删除"></a>文章删除</h2><ol><li>封装删除接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artDelService</span> = (<span class="params">id</span>) =&gt; request.<span class="title function_">delete</span>(<span class="string">&#x27;my/article/info&#x27;</span>, &#123; <span class="attr">params</span>: &#123; id &#125; &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中添加确认框调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onDeleteArticle</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认删除该文章信息吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">artDelService</span>(row.<span class="property">id</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ChatGPT-Copilot"><a href="#ChatGPT-Copilot" class="headerlink" title="ChatGPT &amp; Copilot"></a>ChatGPT &amp; Copilot</h1><h2 id="AI-的认知-讲解内容说明"><a href="#AI-的认知-讲解内容说明" class="headerlink" title="AI 的认知 &amp; 讲解内容说明"></a>AI 的认知 &amp; 讲解内容说明</h2><p>认知同步：</p><ol><li>AI 早已不是新事物 (接受)  &#x3D;&gt;  语音识别，人脸识别，无人驾驶，智能机器人…    (包括 ChatGPT 也是研发了多年的产物)</li><li>AI 本质是智能工具 (认识)  &#x3D;&gt;  人工智能辅助，可以提升效率，但不具备思想意识，无法从零到一取代人类工作</li><li>AI 一定会淘汰掉一部分人  &#x3D;&gt;  逆水行舟，不进则退；学会拥抱变化，尽早上车</li></ol><p>两个工具：</p><ol><li><p>ChatGPT 3.5 的使用   (4.0 使用方式一致，回答准确度更高，但付费，且每3小时，有次数限制)</p><ol><li><p>正常注册流程  (IP限制，手机号限制)</p></li><li><p>三方整合产品</p><ul><li><p>谷歌搜索：chatgpt 免费网站列表</p></li><li><p><a href="https://github.com/LiLittleCat/awesome-free-chatgpt">https://github.com/LiLittleCat/awesome-free-chatgpt</a></p></li></ul></li></ol></li><li><p>工具 Github Copilot 智能生成代码</p></li></ol><h2 id="ChatGPT-的基本使用-Prompt-优化"><a href="#ChatGPT-的基本使用-Prompt-优化" class="headerlink" title="ChatGPT 的基本使用 - Prompt 优化"></a>ChatGPT 的基本使用 - Prompt 优化</h2><p>AI 互动的过程中，容易出现的问题：</p><ul><li>AI未能理解问题的核心要点</li><li>AI的回答过于宽泛 或 过于具体</li><li>AI提供了错误的信息或观点</li><li>AI未能提供有价值的建议或解决方案</li></ul><p>在识别了问题所在之后，我们可以尝试以下策略来优化我们的Prompt：</p><ul><li><p><strong>明确提问</strong>：</p><p>确保问题表述清晰明确，关键字的准确度，决定了AI 对于需求的理解。</p></li><li><p><strong>细化需求：</strong></p><p>将问题拆分成多个小问题，可以帮助AI更具针对性地回答，也利于即时纠错。</p></li><li><p><strong>添加背景信息：</strong></p><p>提供有关问题背景的详细信息，也可以给 AI 预设一个角色，将有助于AI生成更具深度和价值的回答。</p></li><li><p><strong>适当引导：</strong></p><p>比如：“例如”、“请注意”、“请使用”等，来告诉模型你期望它做什么 或者 不做什么</p></li><li><p><strong>限制范围：</strong></p><p>通过限定回答的范围和长度，可以引导AI生成更精炼的回答</p></li></ul><p>​…</p><h3 id="案例-前端简历"><a href="#案例-前端简历" class="headerlink" title="案例 - 前端简历"></a>案例 - 前端简历</h3><h4 id="Prompt-优化前："><a href="#Prompt-优化前：" class="headerlink" title="Prompt 优化前："></a>Prompt 优化前：</h4><p>Prompt1:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前端简历</span><br></pre></td></tr></table></figure><h4 id="Prompt-优化后："><a href="#Prompt-优化后：" class="headerlink" title="Prompt 优化后："></a>Prompt 优化后：</h4><p>Prompt1:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">背景：你是一名【具有三年开发经验】的前端开发工程师，这三年期间，前两年，你做的【金融】相关四个项目，最后一年做的是【医疗】相关领域的两个项目，且有一定的管理 10人+ 团队的经验。主要的技术栈：【Vue】 和 【小程序】。由于你是计算机软件工程专业，所以你具备一些Java后台、Mysql数据库的知识，也掌握一些基础的算法。</span><br><span class="line"></span><br><span class="line">问题：你会如何编写你的简历个人技能介绍</span><br><span class="line"></span><br><span class="line">要求：8条技能介绍，请注意：你不会 angular。</span><br></pre></td></tr></table></figure><p>Prompt2：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基于上文情境，你会如何编写你的项目经验介绍</span><br></pre></td></tr></table></figure><p>Prompt3：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你刚才说的方向完全没有问题，但是我想看到更多的项目技术亮点，项目业务解决方案。</span><br><span class="line">请注意：每个项目<span class="number">3</span>个技术亮点，<span class="number">3</span>个业务解决方案。</span><br></pre></td></tr></table></figure><h2 id="工具-Github-Copilot-智能生成代码的使用"><a href="#工具-Github-Copilot-智能生成代码的使用" class="headerlink" title="工具 Github Copilot 智能生成代码的使用"></a>工具 Github Copilot 智能生成代码的使用</h2><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ul><li>登录 github，试用 Copilot</li><li>打开 vscode， 搜索并安装插件 Copilot</li></ul><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul><li>删除键：不接受</li><li>Tab键：接收</li><li>Ctrl + enter： 查看更多方案</li></ul><h2 id="个人中心项目实战-基本资料"><a href="#个人中心项目实战-基本资料" class="headerlink" title="个人中心项目实战 - 基本资料"></a>个人中心项目实战 - 基本资料</h2><h3 id="静态结构-校验处理"><a href="#静态结构-校验处理" class="headerlink" title="静态结构 + 校验处理"></a>静态结构 + 校验处理</h3><p>chatgpt prompt 提示词参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">请基于 elementPlus 和 Vue3 的语法，生成组件代码</span><br><span class="line">要求：</span><br><span class="line">一、表单结构要求</span><br><span class="line">1.  组件中包含一个el-form表单，有四行内容，前三行是输入框，第四行是按钮</span><br><span class="line">2. 第一行 label 登录名称，输入框禁用不可输入状态</span><br><span class="line">3. 第二行 label 用户昵称，输入框可输入</span><br><span class="line">4. 第三行 label 用户邮箱，输入框可输入</span><br><span class="line">5. 第四行按钮，提交修改</span><br><span class="line"></span><br><span class="line">二、校验需求</span><br><span class="line">给昵称 和 邮箱添加校验</span><br><span class="line">1. 昵称 nickname 必须是2-10位的非空字符串</span><br><span class="line">2. 邮箱 email 符合邮箱格式即可，且不能为空</span><br></pre></td></tr></table></figure><p>参考目标代码：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">user</span>: &#123; username, nickname, email, id &#125;</span><br><span class="line">&#125; = <span class="title function_">useUserStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123; username, nickname, email, id &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">nickname</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户昵称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;2,10&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;昵称必须是2-10位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">email</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户邮箱&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">type</span>: <span class="string">&#x27;email&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;邮箱格式不正确&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;基本资料&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:model</span>=<span class="string">&quot;userInfo&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;登录名称&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.username&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户昵称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.nickname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户邮箱&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>提交修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="封装接口，更新个人信息"><a href="#封装接口，更新个人信息" class="headerlink" title="封装接口，更新个人信息"></a>封装接口，更新个人信息</h3><ol><li>封装接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUpdateInfoService</span> = (<span class="params">&#123; id, nickname, email &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">put</span>(<span class="string">&#x27;/my/userinfo&#x27;</span>, &#123; id, nickname, email &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中校验后，封装调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> valid = <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">userUpdateInfoService</span>(userInfo.<span class="property">value</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getUser</span>()</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;修改成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人中心项目实战-更换头像"><a href="#个人中心项目实战-更换头像" class="headerlink" title="个人中心项目实战 - 更换头像"></a>个人中心项目实战 - 更换头像</h2><h3 id="静态结构"><a href="#静态结构" class="headerlink" title="静态结构"></a>静态结构</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Plus</span>, <span class="title class_">Upload</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(userStore.<span class="property">user</span>.<span class="property">user_pic</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">file</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(file)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;更换头像&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-upload</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;uploadRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:auto-upload</span>=<span class="string">&quot;false&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:on-change</span>=<span class="string">&quot;onUploadFile&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-else</span> <span class="attr">src</span>=<span class="string">&quot;@/assets/avatar.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;278&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          选择图片</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Upload&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          上传头像</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.avatar-uploader</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  :<span class="built_in">deep</span>() &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.avatar</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-upload</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="选择预览图片"><a href="#选择预览图片" class="headerlink" title="选择预览图片"></a>选择预览图片</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> uploadRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(userStore.<span class="property">user</span>.<span class="property">user_pic</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">file</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">  reader.<span class="title function_">readAsDataURL</span>(file.<span class="property">raw</span>)</span><br><span class="line">  reader.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    imgUrl.<span class="property">value</span> = reader.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;el-upload ref=<span class="string">&quot;uploadRef&quot;</span>&gt;&lt;/el-upload&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  @<span class="attr">click</span>=<span class="string">&quot;uploadRef.$el.querySelector(&#x27;input&#x27;).click()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span>选择图片&lt;/el-button</span></span><br><span class="line"><span class="language-xml">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="上传头像"><a href="#上传头像" class="headerlink" title="上传头像"></a>上传头像</h3><ol><li>封装接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUploadAvatarService</span> = (<span class="params">avatar</span>) =&gt; request.<span class="title function_">patch</span>(<span class="string">&#x27;/my/update/avatar&#x27;</span>, &#123; avatar &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>调用接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onUpdateAvatar</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">userUploadAvatarService</span>(imgUrl.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">await</span> userStore.<span class="title function_">getUser</span>()</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;更换头像成功&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人中心项目实战-重置密码"><a href="#个人中心项目实战-重置密码" class="headerlink" title="个人中心项目实战 - 重置密码"></a>个人中心项目实战 - 重置密码</h2><p>chatgpt  prompt</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">请基于 elementPlus 和 <span class="title class_">Vue3</span> 的语法，生成组件代码</span><br><span class="line">要求：</span><br><span class="line">一、表单结构要求</span><br><span class="line"><span class="number">1.</span> 组件中包含一个el-form表单，有四行内容，前三行是表单输入框，第四行是两个按钮</span><br><span class="line"><span class="number">2.</span> 第一行 label 原密码</span><br><span class="line"><span class="number">3.</span> 第二行 label 新密码</span><br><span class="line"><span class="number">4.</span> 第三行 label 确认密码</span><br><span class="line"><span class="number">5.</span> 第四行两个按钮，修改密码 和 重置</span><br><span class="line"></span><br><span class="line">二、form绑定字段如下：</span><br><span class="line"><span class="keyword">const</span> pwdForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">old_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">new_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">re_pwd</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">三、校验需求</span><br><span class="line">所有字段，都是 <span class="number">6</span>-<span class="number">15</span>位 非空</span><br><span class="line">自定义校验<span class="number">1</span>：原密码 和 新密码不能一样</span><br><span class="line">自定义校验<span class="number">2</span>：新密码 和 确认密码必须一样</span><br></pre></td></tr></table></figure><h3 id="静态结构-校验处理-1"><a href="#静态结构-校验处理-1" class="headerlink" title="静态结构 + 校验处理"></a>静态结构 + 校验处理</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pwdForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">old_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">new_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">re_pwd</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkOldSame</span> = (<span class="params">rule, value, cb</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value === pwdForm.<span class="property">value</span>.<span class="property">old_pwd</span>) &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;原密码和新密码不能一样!&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkNewSame</span> = (<span class="params">rule, value, cb</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value !== pwdForm.<span class="property">value</span>.<span class="property">new_pwd</span>) &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;新密码和确认再次输入的新密码不一样!&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="comment">// 原密码</span></span><br><span class="line">  <span class="attr">old_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 新密码</span></span><br><span class="line">  <span class="attr">new_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入新密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">validator</span>: checkOldSame, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 确认新密码</span></span><br><span class="line">  <span class="attr">re_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请再次确认新密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">validator</span>: checkNewSame, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;重置密码&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:model</span>=<span class="string">&quot;pwdForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;原密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;old_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.old_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;新密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;new_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.new_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;确认新密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;re_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.re_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>修改密码<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onReset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="封装接口，更新密码信息"><a href="#封装接口，更新密码信息" class="headerlink" title="封装接口，更新密码信息"></a>封装接口，更新密码信息</h3><ol><li>封装接口</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUpdatePassService</span> = (<span class="params">&#123; old_pwd, new_pwd, re_pwd &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">patch</span>(<span class="string">&#x27;/my/updatepwd&#x27;</span>, &#123; old_pwd, new_pwd, re_pwd &#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中调用</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> valid = <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">userUpdatePassService</span>(pwdForm.<span class="property">value</span>)</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;更换密码成功&#x27;</span> &#125;)</span><br><span class="line">    userStore.<span class="title function_">setToken</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    userStore.<span class="title function_">setUser</span>(&#123;&#125;)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onReset</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  formRef.<span class="property">value</span>.<span class="title function_">resetFields</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ajax&amp;Node.js&amp;Webpack学习！</title>
      <link href="/2024/09/12/Ajax&amp;Node.js&amp;Webpack/"/>
      <url>/2024/09/12/Ajax&amp;Node.js&amp;Webpack/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><p>引入CDN</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="第一个代码"><a href="#第一个代码" class="headerlink" title="第一个代码"></a>第一个代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;) <span class="comment">// 打印省份地址，result接管对象  </span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123; <span class="comment">// 查询参数，可以更方便，不采用?+值的方式</span></span><br><span class="line">        <span class="attr">pname</span>:<span class="string">&#x27;山西省&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">list</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;) <span class="comment">// 获取目标省份信息</span></span><br></pre></td></tr></table></figure><h2 id="主要结构"><a href="#主要结构" class="headerlink" title="主要结构"></a>主要结构</h2><p>本质上是返回一个promise</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>, <span class="comment">// 网址</span></span><br><span class="line">    <span class="attr">params</span>:&#123; <span class="comment">// 查询参数</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>, <span class="comment">// 请求方法，默认get获取数据，post提交数据，put修改全部数据，delete删除，patch修改部分数据</span></span><br><span class="line">    <span class="attr">data</span>:&#123; <span class="comment">// 提交数据</span></span><br><span class="line">        <span class="attr">username</span>:<span class="string">&#x27;dadwds2&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>:<span class="string">&#x27;21312&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123; <span class="comment">// 获取数据接管对象 </span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123; <span class="comment">// 捕获错误</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="URL（网址）"><a href="#URL（网址）" class="headerlink" title="URL（网址）"></a>URL（网址）</h2><p>协议;&#x2F;&#x2F;域名:端口号&#x2F;资源路径，如<a href="https://hmajax.itheima.net:80/api/province">https://hmajax.itheima.net:80/api/province</a></p><p>查询参数时：协议;&#x2F;&#x2F;域名:端口号&#x2F;资源路径？参数名1&#x3D;值1&amp;参数名2&#x3D;值2   每多一个参数就加一个&amp;和参数名，端口号默认80可不写</p><h2 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h2><p>规定了浏览器发送至服务器内容的格式，在网页开发工具里的网络里查看请求报文源码，可以帮助查看错误</p><ol><li>请求行：请求方法，URL，协议</li><li>请求头：以键值对的格式携带的附加信息，如Content-Type</li><li>空行：分隔请求头，空行之后的是发送给服务器的资源</li><li>请求体：发送的资源</li></ol><h2 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h2><p>规定了服务器返回内容的格式，主要作用是表明是否请求成功,1xx信息，2xx成功，3xx重定向消息，4xx失败，客户端错误，5xx服务端错误</p><ol><li>响应行（状态行）：协议、HTTP相应状态码、状态信息</li><li>响应头：以键值对的格式携带的附加信息，如Content-Type</li><li>空行：分隔响应头，空行之后是服务器返回的资源</li><li>响应体：返回的资源</li></ol><h2 id="form-serialize插件使用"><a href="#form-serialize插件使用" class="headerlink" title="form-serialize插件使用"></a>form-serialize插件使用</h2><p>主要用于一键收集所有表单信息作为对象，引入前需要导入代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;./form-serialize.js&quot;</span>&gt;&lt;<span class="regexp">/script&gt; /</span>/ 引入文件</span><br><span class="line"><span class="keyword">let</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>)  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">serialize</span>(n,&#123;<span class="attr">hash</span>:<span class="literal">true</span>,<span class="attr">empty</span>:<span class="literal">true</span>&#125;)) &#125;)</span><br><span class="line"><span class="comment">// hash代表是否转化为对象，empty表示是否收集空信息</span></span><br></pre></td></tr></table></figure><h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><p>引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例如modal，toast</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;.my-box&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span> // toggle用来转换，target用来指向目标</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal my-box&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span>&gt;</span> // 引入modal框</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span>Modal title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-close&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span> // dismiss用来关闭弹框</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>          </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Modal body text goes here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> &gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal my-box&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span>Modal title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-close&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Modal body text goes here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> modal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(box)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[type=button]&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    n.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        modal.<span class="title function_">show</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.upload&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> n = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        n.<span class="title function_">append</span>(<span class="string">&#x27;img&#x27;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">axios</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: n</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>).<span class="property">src</span> = res.<span class="property">data</span>.<span class="property">data</span>.<span class="property">url</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a><strong>XMLHttpRequest</strong></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>() <span class="comment">// 创建XHR对象</span></span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;https://hmajax.itheima.net/api/province&#x27;</span>) <span class="comment">// 给方法和url，需要给请求方法</span></span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;https://hmajax.itheima.net/api/city?pname=山西省&#x27;</span>) <span class="comment">// 现在查询需要自己拼</span></span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">&#125;) <span class="comment">// 监听加载完成事件，接受结果</span></span><br><span class="line">xhr.<span class="title function_">send</span>() <span class="comment">// 调用send发起请求</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">pname</span>:<span class="string">&#x27;山西省&#x27;</span>,</span><br><span class="line">    <span class="attr">cname</span>:<span class="string">&#x27;晋城市&#x27;</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> data = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(obj) <span class="comment">//  当有多个访问时可以借此转成查询参数</span></span><br><span class="line">data = data.<span class="title function_">toString</span>() <span class="comment">// 转成参数1&amp;参数2这种格式</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">`https://hmajax.itheima.net/api/area?<span class="subst">$&#123;data&#125;</span>`</span>)</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">    <span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>).<span class="property">innerHTML</span> = data.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br></pre></td></tr></table></figure><p>在XHR中post则需要自己写请求头以JSON形式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/json&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>Promise本身是同步任务，但是.then和.catch方法是回调函数，回调函数是异步任务。Promise有三种状态，pending，fulfilled-&gt;.then，rejected-&gt;.catch，状态改变后调用关联处理函数</p><p>同步异步：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;同步&#x27;</span>)</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;异步&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;) <span class="comment">// 结果为 ： 1 同步 2 异步</span></span><br></pre></td></tr></table></figure><p>代码使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="string">&#x27;模拟功&#x27;</span>) <span class="comment">// 成功调用这个</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;错误&#x27;</span>))  <span class="comment">// 失败调用这个</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function">(<span class="params">r</span>)=&gt;</span>&#123; <span class="comment">// resolve进入这个</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(r)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span>=&gt;</span>&#123; <span class="comment">// reject进入这个</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>实际用法捕获是否成功</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;https://hmajax.itheima.net/api/province&#x27;</span>)</span><br><span class="line">        xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">// console.log(xhr.response)</span></span><br><span class="line">            <span class="keyword">if</span>(xhr.<span class="property">status</span>&gt;=<span class="number">200</span>&amp;&amp;xhr.<span class="property">status</span>&lt;<span class="number">300</span>)&#123;</span><br><span class="line">                <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        xhr.<span class="title function_">send</span>()</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">list</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>).<span class="property">innerHTML</span> = res.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">dir</span>(e)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="解决回调函数地狱（可以使用async）"><a href="#解决回调函数地狱（可以使用async）" class="headerlink" title="解决回调函数地狱（可以使用async）"></a>解决回调函数地狱（可以使用async）</h3><p>因为.then返回一个Promise对象，所以可以将axios的嵌套改成链式，比如一层一层嵌套获得山西省-晋城市-城区的信息，这样里面的错误外卖catch不到，可以借用promise来分开写catch错误，并且避免一层错处处修改的情况</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="string">&#x27;success1&#x27;</span>)</span><br><span class="line">    &#125;,<span class="number">2000</span>)</span><br><span class="line">    <span class="comment">// reject(new Error())</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> p2 = p1.<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="string">&#x27;success2&#x27;</span>)</span><br><span class="line">        &#125;,<span class="number">1000</span>)</span><br><span class="line">        <span class="comment">// reject(new Error())</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">p2.<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all"></a>Promise.all</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="title class_">Promise</span>.<span class="title function_">all</span>([promise1,promise2,.....])</span><br></pre></td></tr></table></figure><p>.all内的所有promise都成功才返回成功，错一个就不会走.then走.catch，适用于需要所有都成功返回再使用的场景</p><h2 id="同步代码"><a href="#同步代码" class="headerlink" title="同步代码"></a>同步代码</h2><p>逐层执行，需要原地等待结果再继续往下执行</p><h2 id="异步代码"><a href="#异步代码" class="headerlink" title="异步代码"></a>异步代码</h2><p>调用后耗时，不阻塞代码继续执行，在将来完成时触发一个回调函数</p><h2 id="async-await"><a href="#async-await" class="headerlink" title="async&amp;await"></a>async&amp;await</h2><p>async写在函数声明前面，将其作为一个异步函数，await写在axios前面，取代then函数，等待promise对象成功状态的结果值；await必须存在于async中</p><h3 id="请求数据以及报错"><a href="#请求数据以及报错" class="headerlink" title="请求数据以及报错"></a>请求数据以及报错</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">gL</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> p = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>:<span class="string">&quot;http://hmajax.it1heima.net/api/province&quot;</span>&#125;)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(p)</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">dir</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="宏任务和微任务"><a href="#宏任务和微任务" class="headerlink" title="宏任务和微任务"></a>宏任务和微任务</h2><p>在同步代码执行完后先执行微任务，目前学到的微任务只有Promise的.then方法，因为更接近js引擎所以优先执行</p><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>require一个fs和绝对路径</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;./fuck.txt&#x27;</span>,<span class="string">&#x27;fuck&#x27;</span>,<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(error) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;失败&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">&#125;) <span class="comment">// </span></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./fuck.txt&#x27;</span>,<span class="function">(<span class="params">e,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e) <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="title function_">toString</span>())</span><br><span class="line">&#125;) <span class="comment">// 读出来是十六进制，我们需要改成字符</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;fuck.txt&#x27;</span>),<span class="function">(<span class="params">e,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e) <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="title function_">toString</span>())</span><br><span class="line">&#125;) <span class="comment">// 绝对路径path.join(__dirname,&#x27;fuck.txt&#x27;)来读取文件</span></span><br></pre></td></tr></table></figure><p>可以用于将html文件换行符去掉后压缩文本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)   </span><br><span class="line"><span class="keyword">let</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>) <span class="comment">// join只是简单的将路径片段用特定的路径分隔符（/ 或 \）连接起来，path.resolve会解析路径片段，并返回从当前工作目录开始到目标路径的绝对路径</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;../web/cyx1.html&#x27;</span>),<span class="function">(<span class="params">e,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e) <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> content = res.<span class="title function_">toString</span>()</span><br><span class="line">        content = content.<span class="title function_">replace</span>(<span class="regexp">/[\r\n]/g</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(content)</span><br><span class="line">        fs.<span class="title function_">writeFile</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;jilu.html&#x27;</span>),content,<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e) <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">            <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>)    </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="HTTP模块"><a href="#HTTP模块" class="headerlink" title="HTTP模块"></a>HTTP模块</h2><p>创建一个Web服务</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>();</span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 设置响应头-内容类型-普通文本以及中文编码格式</span></span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;text/plain;charset=utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">//设置响应体内容，结束本次请求与响应</span></span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;欢迎使用&#x27;</span>)</span><br><span class="line">&#125;) <span class="comment">// text/html也可以</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;启动成功&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Ctrl+C结束</p><p>样例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123; <span class="comment">// 首先是请求</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">url</span>) <span class="comment">// http://localhost:3000/jilu</span></span><br><span class="line">    <span class="keyword">if</span>(req.<span class="property">url</span> === <span class="string">&#x27;/jilu&#x27;</span>)&#123;  <span class="comment">// 后缀要符合查询才会成功访问</span></span><br><span class="line">        fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./jilu.html&#x27;</span>),<span class="function">(<span class="params">e,data</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e) <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>) <span class="comment">// 以html格式访问</span></span><br><span class="line">                res.<span class="title function_">end</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="string">&#x27;错误&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="模块化简介"><a href="#模块化简介" class="headerlink" title="模块化简介"></a>模块化简介</h2><p>每个文件当作一个模块，独立作用域，按需加载，使用特定语法导入导出进行使用</p><h3 id="CommenJS语法"><a href="#CommenJS语法" class="headerlink" title="CommenJS语法"></a>CommenJS语法</h3><p><strong>module.exports</strong>：在需要导出的包里写module.exports&#x3D;{对象1，对象2}</p><p>**require(‘路径’)**：在需要导入的文件里加这个导入</p><h3 id="ECMAScript语法"><a href="#ECMAScript语法" class="headerlink" title="ECMAScript语法"></a>ECMAScript语法</h3><p>如需使用需要在运行模块所在文件夹新建package.json文件，设置</p><blockquote><p>“type”:”module”</p></blockquote><p><strong>export.exports</strong>：在需要导出的包里写module.exports&#x3D;{对象1，对象2}，同样可以在声明时导出如：<strong>export let n</strong></p><p><strong>import 变量名 from ’模块名或路径‘</strong>：在需要导入的文件里加这个导入，也可以<strong>import {变量名1，变量名2} from ’模块名或路径‘</strong>按需导入</p><h2 id="包的简介"><a href="#包的简介" class="headerlink" title="包的简介"></a>包的简介</h2><p>将模块，代码，其他资源聚合的文件夹</p><p><img src="C:\Users\Baixi\Desktop\code\Markdown\json简述.jpg" alt="json简述"></p><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p>Node.js标准的软件包管理器</p><p><strong>npm init -y</strong>：初始化清单文件夹，得到package.json文件</p><p><strong>npm i 软件包名称</strong>：下载软件包</p><p><strong>安装依赖</strong>：当拿到别人的项目缺少<i>node_modules</i>时，在项目终端运行**npm i **会根据package.json下载记录中的所有软件包，属于本地软件包</p><p><strong>全局软件包</strong>：例如nodemon替代node命令，自动检测代码更改，自动重启。需要npm i nodemon <strong>-g</strong> -g是全局安装</p><h1 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h1><blockquote><p>分析项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Sass，TypeScript等），并将其转换和打包为合适的格式供浏览器使用，并且尽量优化代码（默认只识别JS文件）</p></blockquote><h2 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h2><p>在开发文件下添加命令</p><blockquote><p>npm i  webpack webpack-cli –save-dev</p></blockquote><p>并且在package.json文件中的script里添加**”build”:”webpack”**</p><p>webpack会打包极致压缩文件，<strong>npm run build</strong>打包</p><h2 id="webpack-config-cjs文件配置"><a href="#webpack-config-cjs文件配置" class="headerlink" title="webpack.config.cjs文件配置"></a>webpack.config.cjs文件配置</h2><p>在<strong>webpack.config.cjs</strong>文件下（没有就自己创建一个），</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>) <span class="comment">// 自动生成html文件插件：npm i html-webpack-plugin --save-dev</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>) <span class="comment">//这个插件会帮助生成一个CSS文件，加载时效率更高</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>) <span class="comment">// 这个插件是压缩CSS文件的</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;src/login/index.js&#x27;</span>), <span class="comment">// 修改入口</span></span><br><span class="line">        <span class="attr">output</span>:&#123;</span><br><span class="line">            <span class="attr">path</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;dist&#x27;</span>),  <span class="comment">// 修改出口文件</span></span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;./login/index.js&#x27;</span>, <span class="comment">// js出口文件相对路径</span></span><br><span class="line">            <span class="attr">clean</span>: <span class="literal">true</span> <span class="comment">// 清理上次文件</span></span><br><span class="line">        &#125; ,</span><br><span class="line">    <span class="attr">plugins</span>:[ <span class="comment">// 插件</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123; </span><br><span class="line">            <span class="attr">template</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;public/cyx1.html&#x27;</span>), <span class="comment">// 模板文件</span></span><br><span class="line">            <span class="attr">filename</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;dist/login/index.html&#x27;</span>) <span class="comment">// 导出文件路径</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(<span class="string">&#x27;filename:相对路径&#x27;</span>) <span class="comment">// new一个插件</span></span><br><span class="line">],</span><br><span class="line">    <span class="attr">module</span>:&#123; <span class="comment">// 加载器</span></span><br><span class="line">        <span class="attr">rules</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>:<span class="regexp">/\.css$/i</span>, <span class="comment">// test是匹配文件，打包css文件</span></span><br><span class="line">                <span class="attr">use</span>:[<span class="string">&quot;style-loader&quot;</span>,<span class="string">&quot;css-loader&quot;</span>] <span class="comment">// 使用对应加载器,用于将 CSS 样式直接注入到 DOM 的 &lt;style&gt; 标签,插件使用顺序是从后往前用</span></span><br><span class="line">                <span class="attr">use</span>:[<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,<span class="string">&quot;css-loader&quot;</span>] <span class="comment">// 使用插件提取生成一个css文件</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">optimization</span>: &#123; <span class="comment">// 优化</span></span><br><span class="line">        <span class="attr">minimizer</span>: [</span><br><span class="line">            <span class="string">`...`</span>, <span class="comment">// 用这个扩展现有的minimizer代码，保证js代码也可以压缩</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>()</span><br><span class="line">        ]</span><br><span class="line">    &#125;，</span><br><span class="line">    <span class="attr">devtool</span>:<span class="string">&#x27;inline-source-map&#x27;</span>， <span class="comment">// 开发环境调错,上线不建议使用</span></span><br><span class="line">    <span class="attr">resolve</span>:&#123; <span class="comment">// 解析</span></span><br><span class="line">        <span class="attr">alias</span>:&#123;</span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;src&#x27;</span>) <span class="comment">// 将当前文件路径改名为@</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>:&#123; <span class="comment">// 加载器</span></span><br><span class="line">        <span class="attr">rules</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>:<span class="regexp">/\.less$/i</span>, <span class="comment">// test是匹配文件，打包css文件</span></span><br><span class="line">                <span class="attr">use</span>:[<span class="string">&quot;style-loader&quot;</span>,<span class="string">&quot;css-loader&quot;</span>,<span class="string">&quot;less-lodaer&quot;</span>] <span class="comment">// 使用对应加载器,用于将 CSS 样式直接注入到 DOM 的 &lt;style&gt; 标签,插件使用顺序是从后往前用,并且安装less和less-loader</span></span><br><span class="line">                <span class="attr">use</span>:[<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,<span class="string">&quot;css-loader&quot;</span>] <span class="comment">// 使用插件提取生成一个css文件</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="图片打包"><a href="#图片打包" class="headerlink" title="图片打包"></a>图片打包</h3><p>**[hash]**：对模块内容算法计算得到映射的数字字母组成的字符串</p><p>**[ext]**：保留原本占位符如.png&#x2F;.jpg</p><p>**[query]**：保留引入文件时代码中的查询参数（只在URL下生效）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[</span><br><span class="line">        ...,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">test</span>:<span class="regexp">/\.(jpeg|jpg|gif|png)$/i</span>, </span><br><span class="line">            <span class="attr">type</span>:<span class="string">&#x27;asset&#x27;</span>, <span class="comment">// 控制打包类型</span></span><br><span class="line">            <span class="attr">generator</span>:&#123;</span><br><span class="line">                <span class="attr">filename</span>:<span class="string">&#x27;assets/[hash][ext][query]&#x27;</span></span><br><span class="line">            &#125; <span class="comment">// 输出到何处，如果图片大于8KB发送一个单独的文件并导出URL地址，小于8KB就回导出一个data URL（base64）字符串</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="搭建开发环境（持久）"><a href="#搭建开发环境（持久）" class="headerlink" title="搭建开发环境（持久）"></a>搭建开发环境（持久）</h3><p>首先下载<strong>webpack-dev-server</strong>软件包到当前项目，然后在webpack.config.js文件中设置开发模式：<strong>mode:”development”<strong>，并配置自定义命令在json中如：</strong>“dev”: “webpack serve –open”<strong>，最后</strong>npm run dev</strong>启动服务器测试热更新效果。</p><p>原理：webpack借助http模块创建8080默认Web服务，以public文件夹作为默认服务器的根目录，同时也根据配置，打包相关代码在内存中作为服务器根目录。</p><p>有两个根目录：1. 默认静态资源public；2. webpack.config.js中的out.path路径</p><h2 id="打包模式"><a href="#打包模式" class="headerlink" title="打包模式"></a>打包模式</h2><ol><li><strong>development</strong>，适用本地开发</li><li><strong>production</strong>，适用打包上线</li></ol><p>在webpack.config.js配置文件中设置mode选项：<strong>mode:”development”</strong></p><p>在package.json命令行设置mode参数,在build或者dev后面加：**–mode&#x3D;development<strong>如：</strong>“build”: “webpack –mode&#x3D;development”**</p><h3 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h3><p>首先打包下载<strong>npm i cross-env –save-dev</strong>，cross-env只在node.js环境下运行</p><p>在package.json中设置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=production webpack&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=development webpack serve --open&quot;</span></span><br></pre></td></tr></table></figure><p>对环境变量操作时用<strong>process.env</strong>；还有<strong>process.env.NODE_ENV&#x3D;xxx</strong>是 <code>process.env</code> 对象中的一个特定属性，通常用于指定当前 Node.js 应用程序的环境（如开发、生产或测试）</p><h2 id="注入环境变量"><a href="#注入环境变量" class="headerlink" title="注入环境变量"></a>注入环境变量</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">new</span> webpack.<span class="title class_">DefinePlugin</span>(&#123;</span><br><span class="line">    <span class="string">&quot;process.env.NODE_ENV&quot;</span>:<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(process.<span class="property">env</span>.<span class="property">NODE_ENV</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>当有些功能在上线时不需要的时候，可以借助这种方式禁止</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>)&#123;  <span class="variable language_">console</span>.<span class="property">log</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;  &#125;</span><br></pre></td></tr></table></figure><h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    ....,</span><br><span class="line">    <span class="attr">resolve</span>:&#123; <span class="comment">// 解析</span></span><br><span class="line">        <span class="attr">alias</span>:&#123;</span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;src&#x27;</span>) <span class="comment">// 将当前文件路径改名为@</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样在其它文件里就可以这样写成绝对路径</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> demo <span class="keyword">from</span> <span class="string">&#x27;@/....&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="CDN（存疑）"><a href="#CDN（存疑）" class="headerlink" title="CDN（存疑）"></a>CDN（存疑）</h2><p>内容分网络，指的是一组分布在各个地区的服务器，将静态资源文件放在CDN网络中各个服务器中供用户就近请求获取</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">externals</span>:&#123;<span class="comment">// 外部扩展（让webpack防止import的包被打包进来</span></span><br><span class="line">    <span class="comment">// key：import from语句后面的字符串</span></span><br><span class="line">    <span class="comment">// value：留在原地的全局变量（最好和cdn在全局暴露的变量一致）</span></span><br><span class="line">    <span class="string">&#x27;axios&#x27;</span>:<span class="string">&#x27;axios&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html文件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(htmlWebpackPlugin.options.useCdn)&#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/axios/1.7.2/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>在plugins下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">...,</span><br><span class="line">    <span class="attr">useCdn</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><h2 id="多页面打包"><a href="#多页面打包" class="headerlink" title="多页面打包"></a>多页面打包</h2><ol><li>首先<strong>entry</strong>内不再只有一个，改为多个对象，例如：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">entry</span>:&#123;</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;src/login/index.js&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;content:path.resolve(__dirname,&#x27;</span>src/content/index.<span class="property">js</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>改变<strong>plugin</strong>内容</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>:[</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">template</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;public/login.html&#x27;</span>), <span class="comment">// 模板</span></span><br><span class="line">        <span class="attr">filename</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;dist/login/index.html&#x27;</span>), <span class="comment">// 打包路径</span></span><br><span class="line">        <span class="attr">useCdn</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;login&#x27;</span>] <span class="comment">// 引入哪些打包后的模块（与entry的‘key‘相同）</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">template</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;public/content.html&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;dist/content/index.html&#x27;</span>),</span><br><span class="line">        <span class="attr">useCdn</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;content&#x27;</span>] <span class="comment">// 引入哪些打包后的模块（与entry的‘key‘相同）</span></span><br><span class="line">    &#125;)</span><br><span class="line">],</span><br></pre></td></tr></table></figure><ol start="3"><li>改变打包路径</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output</span>:&#123;</span><br><span class="line">    <span class="attr">path</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;./[name]/index.js&#x27;</span>, <span class="comment">// 每个js文件存的相对路径</span></span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分割公共代码（待看）"><a href="#分割公共代码（待看）" class="headerlink" title="分割公共代码（待看）"></a>分割公共代码（待看）</h2><p>会分隔出公共使用的CDN或者库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">splitChunks</span>:&#123;</span><br><span class="line">    <span class="attr">chunks</span>:<span class="string">&#x27;all&#x27;</span>,<span class="comment">//所有模块动态移入分割分析</span></span><br><span class="line">    <span class="attr">cacheGroups</span>:&#123; <span class="comment">// 分隔组</span></span><br><span class="line">        <span class="attr">commons</span>:&#123; <span class="comment">// 抽取公共模块</span></span><br><span class="line">            <span class="attr">minSize</span>:<span class="number">0</span>, <span class="comment">// 抽取的chunk最小大小字节</span></span><br><span class="line">            <span class="attr">minChunks</span>:<span class="number">2</span>,<span class="comment">// 最小引用数</span></span><br><span class="line">            <span class="attr">reuseExistingChunk</span>:<span class="literal">true</span>,<span class="comment">// 当前chunk包含已从主buddle中拆分出的模块，则他将被重用</span></span><br><span class="line">            <span class="title function_">name</span>(<span class="params"><span class="variable language_">module</span>,chunks,cacheGroupKey</span>)&#123;</span><br><span class="line">                <span class="keyword">const</span> allChunksNames = chunks.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>item.<span class="property">name</span>).<span class="title function_">join</span>(<span class="string">&#x27;~&#x27;</span>)<span class="comment">//模块名1~模块名2</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">`./js/<span class="subst">$&#123;allChunksNames&#125;</span>`</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Js速通~~~</title>
      <link href="/2024/09/12/JavaScript/"/>
      <url>/2024/09/12/JavaScript/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>在<strong>script</strong>标签内写js，一般放在body的最下面，方便用户体验。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;text.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p><img src="https://img-blog.csdnimg.cn/direct/bf0d1065782d4364858aa64f2ae7ec06.png#pic_center" alt="在这里插入图片描述"></p><p>打开网页源码，打一个断点刷新页面调试，</p><h2 id="基本输入输出语句"><a href="#基本输入输出语句" class="headerlink" title="基本输入输出语句"></a>基本输入输出语句</h2><p>console.log()在控制台输出，document.write()在页面内写内容，alert()弹窗；prompt()弹窗输入，会<strong>返回</strong>输入值，同时在前面加+，让返回值变为number型</p><h2 id="调试-1"><a href="#调试-1" class="headerlink" title="调试"></a>调试</h2><p>打开网页源码，打一个断点刷新页面调试，</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="number（不区分整数浮点数）；"><a href="#number（不区分整数浮点数）；" class="headerlink" title="number（不区分整数浮点数）；"></a><strong>number</strong>（不区分整数浮点数）；</h3><blockquote><p>123  123.1  1.123e3  NaN(Not a Number，进行任何操作都会返回NaN)  Infinity(无限大)   都是number</p><p>parseInt强转整数  parseFloat强转浮点数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="number">9.42</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="title function_">toFixed</span>(<span class="number">1</span>)) <span class="comment">// 9.4 toFixed()是几位小数</span></span><br></pre></td></tr></table></figure><h3 id="字符串（双引号单引号一般无所谓）’abc’-“abc”"><a href="#字符串（双引号单引号一般无所谓）’abc’-“abc”" class="headerlink" title="字符串（双引号单引号一般无所谓）’abc’  “abc”"></a><strong>字符串</strong>（双引号单引号一般无所谓）’abc’  “abc”</h3><ul><li>长字符串编写 &#96;  （esc下面的符号）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s=</span><br><span class="line"><span class="string">`hhh</span></span><br><span class="line"><span class="string">ass</span></span><br><span class="line"><span class="string">sad`</span></span><br></pre></td></tr></table></figure><ul><li>模板字符串（用 &#96;  反引号包裹，${} 里放需要输出的变量）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s=<span class="string">&#x27;zhendao&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`你好，<span class="subst">$&#123;person.age&#125;</span>的<span class="subst">$&#123;s&#125;</span>`</span>);</span><br><span class="line"><span class="comment">// 输出：你好，19岁的zhendao</span></span><br></pre></td></tr></table></figure><p>还有很多其他string的方法调用</p><h3 id="布尔值-true-false"><a href="#布尔值-true-false" class="headerlink" title="**布尔值 **true false"></a>**布尔值 **true false</h3><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a><strong>比较运算符</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>=  赋值</span><br><span class="line"><span class="number">2.</span>==  等于（例如数字<span class="number">1</span>和字符串<span class="number">1</span>在‘==’时是相等的）</span><br><span class="line"><span class="number">3.</span>===  绝对等于（类型和值必须全相同）</span><br></pre></td></tr></table></figure><p> NaN与所有值都不相同,其它运算符与C语言基本相同</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a><strong>逻辑运算</strong></h3><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a><strong>数组</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;da&#x27;</span>,<span class="literal">null</span>];</span><br><span class="line"><span class="number">2.</span> <span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>();a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;da&#x27;</span>,<span class="literal">null</span>];</span><br><span class="line"><span class="number">3.</span> <span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;da&#x27;</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>如下标越界会undefined；也可以一次返回多个值<code>return [min,max]</code></p><p>例如：push是往后插入，pop弹出最后一个；unshift是往前插入，shift弹出第一个；splice（p,n）从当前p位置开始删，删n个</p><p><em>补：检测数据类型<code>typeof x</code>;强转类型通常类似于：Number(…)</em></p><h3 id="对象：对象是大括号；"><a href="#对象：对象是大括号；" class="headerlink" title="对象：对象是大括号；"></a><strong>对象</strong>：对象是大括号；</h3><blockquote><p>每个属性之间使用逗号隔开，最后一个不需要；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 对象名 = &#123;</span><br><span class="line">    属性名：属性值，</span><br><span class="line">    属性名：属性值，</span><br><span class="line">    属性名：属性值</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(对象名.属性名);</span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">age</span>:<span class="number">19</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;li&quot;</span>,</span><br><span class="line">    <span class="attr">height</span>:<span class="number">186</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">age</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(person))   <span class="comment">// 可以取到所有的key </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(person)) <span class="comment">// 可以取到所有的value</span></span><br></pre></td></tr></table></figure><p>删除用delete，添加直接：对象名.属性名&#x3D;属性值</p><p>判断一个属性是否是自身拥有：：hasOwnProperty </p><p>两种查，1 . 对象名.属性名; 2 . 对象名[‘属性名’];当属性名加引号时应该采用这种</p><p>遍历对象，forin语句：for(let k in arr)；因为k是字符串，相当于’name’，需要用第二种查的方法</p><p><strong>随机函数</strong> *Math.random()*（向下取整版）：Math.<strong>floor</strong>(Math.<strong>random</strong>() * (N-m+1))从0到N随机抽取；   随机函数本身范围是[0,1)；</p><h4 id="例：日期对象"><a href="#例：日期对象" class="headerlink" title="例：日期对象"></a>例：日期对象</h4><p><strong>实例化</strong>：new一般都是实例化某个东西</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = <span class="keyword">new</span> <span class="title class_">Date</span>()<span class="comment">//获得时间</span></span><br><span class="line"><span class="keyword">const</span> data1 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2022 5 20 5:05:50&#x27;</span>)<span class="comment">//获得指定的时间</span></span><br><span class="line"><span class="comment">//日期对象的常见方法，首先获得对象</span></span><br><span class="line">data.<span class="title function_">getDate</span>();<span class="comment">//得到日期</span></span><br><span class="line">data.<span class="title function_">getDay</span>();<span class="comment">//得到星期，范围0-6</span></span><br><span class="line">data.<span class="title function_">getMonth</span>();<span class="comment">//得到月份，范围0-11</span></span><br><span class="line">data.<span class="title function_">getFullYear</span>();<span class="comment">//得到年份</span></span><br><span class="line">data.<span class="title function_">getHours</span>();<span class="comment">//得到小时</span></span><br><span class="line">data.<span class="title function_">toLocaleString</span>()<span class="comment">//直接获得所有时间</span></span><br></pre></td></tr></table></figure><p><strong>时间戳</strong>：从1970年开始到当前时间的毫秒数</p><p>获得时间戳</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data.<span class="title function_">getTime</span>()</span><br><span class="line">+<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br></pre></td></tr></table></figure><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mp=<span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&#x27;tom&#x27;</span>,<span class="number">100</span>],[<span class="string">&#x27;jack&#x27;</span>,<span class="number">90</span>],[<span class="string">&#x27;zhendao&#x27;</span>,<span class="number">80</span>]]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mp.<span class="title function_">get</span>(<span class="string">&#x27;jack&#x27;</span>));</span><br><span class="line">mp.<span class="title function_">set</span>(<span class="string">&#x27;sb&#x27;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mp.<span class="title function_">get</span>(<span class="string">&#x27;sb&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p>无序不重复的集合</p><p>遍历：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> st)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br></pre></td></tr></table></figure><p>用 for of遍历</p><h2 id="严格检查模式"><a href="#严格检查模式" class="headerlink" title="严格检查模式"></a>严格检查模式</h2><p>‘use strict’ 预防js的随意性导致的一些问题 必须写在第一行</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote><p>定义方法1</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">typeof</span>(x)!=<span class="string">&#x27;number&#x27;</span>||<span class="title function_">typeof</span>(y)!=<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;异常&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>定义方法2</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> add= <span class="keyword">function</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">typeof</span>(x)!=<span class="string">&#x27;number&#x27;</span>||<span class="title function_">typeof</span>(y)!=<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;异常&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>立即执行函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)();<span class="comment">//一定要加分号</span></span><br></pre></td></tr></table></figure><p>用throw抛出异常</p><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><p>arguments是伪数组，动态获取实参。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">he</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i ++)</span><br><span class="line">        sum += <span class="variable language_">arguments</span>[i]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">he</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">2</span>) <span class="comment">// 26</span></span><br></pre></td></tr></table></figure><h3 id="剩余参数（提倡）"><a href="#剩余参数（提倡）" class="headerlink" title="剩余参数（提倡）"></a>剩余参数（提倡）</h3><p>…rest 只存超出的数的数组，是一个真数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> add= <span class="keyword">function</span>(<span class="params">x,y,...rest</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(y);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>回调函数</strong>：将A函数作为参数传给B函数，则A函数被称为回调函数</p><p><strong>自执行函数</strong>：(function() { 函数体 })();</p><h2 id="变量以及变量作用域"><a href="#变量以及变量作用域" class="headerlink" title="变量以及变量作用域"></a>变量以及变量作用域</h2><p>默认全局变量自动绑定在window对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> y=<span class="number">2</span>;</span><br><span class="line"><span class="title function_">alert</span>(x); <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">window</span>.<span class="property">x</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">window</span>.<span class="property">y</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>其他作用域与其他语言基本一致：</p><p>使用var，let，const，无需考虑类型，</p><ol><li><code>var</code> 声明的变量是函数作用域或全局作用域，</li><li><code>let</code> 声明的变量是块级作用域.</li><li><code>const</code>不可修改</li></ol><p>推荐使用let</p><h2 id="方法的调用"><a href="#方法的调用" class="headerlink" title="方法的调用"></a>方法的调用</h2><blockquote><p>第一个方法（建议这么写）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhendao&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2005</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">        <span class="keyword">return</span> now-<span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="title function_">age</span>());</span><br></pre></td></tr></table></figure><blockquote><p>第二个方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getage</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> now-<span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhendao&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2004</span>,</span><br><span class="line">    <span class="attr">age</span>:getage</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="title function_">age</span>());</span><br></pre></td></tr></table></figure><blockquote><p>第三个方法，通常上文的this指向不明，调用apply来让this指向目标属性值</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getage</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> now-<span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhendao&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2005</span>,</span><br><span class="line">    <span class="attr">age</span>:getage</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getage.<span class="title function_">apply</span>(person,[]));</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">greet</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello, <span class="subst">$&#123;name&#125;</span>! I&#x27;m <span class="subst">$&#123;<span class="variable language_">this</span>.title&#125;</span>.`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;Mr.&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line">greet.<span class="title function_">apply</span>(person, [<span class="string">&#x27;Smith&#x27;</span>]);</span><br><span class="line"><span class="comment">//输出：Hello, Smith! I&#x27;m Mr..</span></span><br></pre></td></tr></table></figure><p>获取时间：可以用时间戳：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">now.<span class="title function_">getTime</span>();</span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><p><strong>JSON</strong>（JavaScript 对象表示法）是用于将结构化数据表示为 JavaScript 对象的标准格式，通常用于在网站上表示和传输数据（例如从服务器向客户端发送一些数据，因此可以将其显示在网页上）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhendao&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2005</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对象转化json字符串&#123;&quot;name&quot;:&quot;zhendao&quot;,&quot;birth&quot;:2005&#125;</span></span><br><span class="line"><span class="keyword">let</span> j=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(person);</span><br><span class="line"><span class="comment">// json字符串转化为对象 参数为json字符串</span></span><br><span class="line"><span class="keyword">let</span> s=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;zhendao&quot;,&quot;birth&quot;:2005&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>JSON和js的区别</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">a</span>:<span class="string">&quot;hellob&quot;</span>,<span class="attr">b</span>:<span class="string">&quot;hellob&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">JSON</span> = <span class="string">&#x27;&#123;&quot;a&quot;:&quot;hellob&quot;,&quot;b&quot;:&quot;hellob&quot;&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="面向对象的继承"><a href="#面向对象的继承" class="headerlink" title="面向对象的继承"></a>面向对象的继承</h2><blockquote><p>第一个原型继承</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> student = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhendao&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2005</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">        <span class="keyword">return</span> now-<span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>:<span class="number">2010</span></span><br><span class="line">&#125;</span><br><span class="line">xiaoming.<span class="property">__proto__</span>=student;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(xiaoming.<span class="title function_">age</span>())  <span class="comment">// 14</span></span><br></pre></td></tr></table></figure><blockquote><p>原始继承</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">student</span>(<span class="params">name</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line">student.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hello</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title function_">student</span>(<span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line">s.<span class="title function_">hello</span>();</span><br></pre></td></tr></table></figure><blockquote><p>第二种class继承</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">student</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> xiaoming = <span class="keyword">new</span> <span class="title function_">student</span>(<span class="string">&#x27;xiaoming&#x27;</span>)</span><br></pre></td></tr></table></figure><p>比如在constructor内定义属性</p><h2 id="操作DOM"><a href="#操作DOM" class="headerlink" title="操作DOM"></a>操作DOM</h2><blockquote><p>核心</p></blockquote><p>浏览器网页是一个Dom树形结构</p><ul><li><p>更新Dom节点</p></li><li><p>遍历Dom节点</p></li><li><p>删除Dom节点</p></li><li><p>添加Dom节点</p></li></ul><blockquote><p>document.write()在页面内写内容</p></blockquote><p>获得节点，获得之后它就变成对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;fr&quot;</span>&gt;</span>fr<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;se&quot;</span>&gt;</span>se<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="得到节点"><a href="#得到节点" class="headerlink" title="得到节点"></a>得到节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;#fr&quot;</span>)</span><br><span class="line">doc.<span class="title function_">getAttribute</span>()<span class="comment">//获得某个属性</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;css选择器&#x27;</span>) <span class="comment">//选择匹配的 第一个 元素，引号内和css选择器一样</span></span><br><span class="line">n = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;css选择器&#x27;</span>)<span class="comment">//选择匹配的所有元素，返回一个类数组</span></span><br><span class="line">m = n.<span class="property">nextElementSibling</span> <span class="comment">// 指获取n的下一个兄弟元素</span></span><br><span class="line">n.<span class="property">parentNode</span> <span class="comment">// 是指父节点</span></span><br></pre></td></tr></table></figure><h3 id="修改节点"><a href="#修改节点" class="headerlink" title="修改节点"></a>修改节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">father.<span class="property">innerText</span>=<span class="string">&quot;&lt;strong&gt;haha&lt;/strong&gt;&quot;</span> <span class="comment">//不解析标签</span></span><br><span class="line">father.<span class="property">innerHTML</span>=<span class="string">&quot;&lt;strong&gt;haha&lt;/strong&gt;&quot;</span> <span class="comment">//解析标签</span></span><br><span class="line">father.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&#x27;red&#x27;</span><span class="comment">// 基本遵循驼峰命名，对象.属性 = 值</span></span><br><span class="line"><span class="comment">//修改样式 对象.style.属性 = 值 比如要修改背景</span></span><br><span class="line">box.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;black&#x27;</span> <span class="comment">//background-color改成backgroundColor采用小驼峰命名</span></span><br><span class="line">se.<span class="property">className</span> = <span class="string">&#x27;box&#x27;</span><span class="comment">//某种情况下要使其变成另一个类样式，直接改其class的name就行，并列则写&#x27;se box&#x27;;</span></span><br><span class="line">se.<span class="property">classList</span>.<span class="title function_">add</span>()<span class="comment">//se.classList更方便，添加某个类样式，remove删除，toggle切换，有就删除，无就添加，contains()是看是否包含这个类</span></span><br></pre></td></tr></table></figure><p>得到表单的checked值，只有true和false用来选取是否选上</p><h3 id="删除节点（先获取父节点，通过父节点删除子节点）"><a href="#删除节点（先获取父节点，通过父节点删除子节点）" class="headerlink" title="删除节点（先获取父节点，通过父节点删除子节点）"></a>删除节点（先获取父节点，通过父节点删除子节点）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fr = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fr&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> se = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;se&#x27;</span>);</span><br><span class="line">father.<span class="title function_">removeChild</span>(fr); </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; se.<span class="property">length</span>; i++) &#123;father.<span class="title function_">removeChild</span>(se[i]);&#125;</span><br><span class="line"><span class="comment">//或者   由于是动态的，所以下标一直在变化</span></span><br><span class="line">father.<span class="title function_">removeChild</span>(father.<span class="property">children</span>[<span class="number">0</span>]);</span><br><span class="line">father.<span class="title function_">removeChild</span>(father.<span class="property">children</span>[<span class="number">1</span>])</span><br><span class="line"><span class="comment">// 找父节点</span></span><br><span class="line">fr.<span class="property">parentElement</span>；</span><br></pre></td></tr></table></figure><h3 id="插入节点-（仅仅是innertext会删除原来的内容）"><a href="#插入节点-（仅仅是innertext会删除原来的内容）" class="headerlink" title="插入节点 （仅仅是innertext会删除原来的内容）"></a>插入节点 （仅仅是innertext会删除原来的内容）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;top&#x27;</span>);</span><br><span class="line">father.<span class="title function_">append</span>(x);</span><br><span class="line"><span class="comment">// 创建一个新节点插入</span></span><br><span class="line"><span class="keyword">let</span> newh = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">newh.<span class="property">id</span> = <span class="string">&#x27;new&#x27;</span>;<span class="comment">// 设置属性也可以：newh.setAttribute(&#x27;id&#x27;,&#x27;new&#x27;)</span></span><br><span class="line">newh.<span class="property">innerText</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">father.<span class="title function_">append</span>(newh)</span><br><span class="line"><span class="comment">//下面返回的是数组</span></span><br><span class="line"><span class="keyword">let</span> y = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;body&#x27;</span>);</span><br><span class="line">y[<span class="number">0</span>].<span class="title function_">setAttribute</span>(<span class="string">&#x27;style&#x27;</span>,<span class="string">&#x27;background-color:red&#x27;</span>)</span><br><span class="line"><span class="comment">//插入到前面</span></span><br><span class="line">father.<span class="title function_">insertBefore</span>(t,se[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>还有很多比如从后插。。。</p><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><p>在dom对象上一律以dataset方式获取，标签上一律以data-开头</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;fr&quot;</span> data-id=<span class="string">&quot;new&quot;</span> data-ipm=<span class="string">&quot;se&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="property">dataset</span>)</span><br></pre></td></tr></table></figure><h2 id="定时器-间歇函数"><a href="#定时器-间歇函数" class="headerlink" title="定时器-间歇函数"></a>定时器-间歇函数</h2><p>开关定时器基本：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="comment">//开定时器 setInterval(函数名，时间(ms))</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;hahha&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;,<span class="number">2000</span>)</span><br><span class="line"><span class="built_in">clearInterval</span>(n) <span class="comment">// 关闭定时器</span></span><br></pre></td></tr></table></figure><h2 id="结点操作（增删改查）"><a href="#结点操作（增删改查）" class="headerlink" title="结点操作（增删改查）"></a>结点操作（增删改查）</h2><p><strong>查找结点</strong>：直接通过父子关系找最近一级的关系</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n.<span class="property">parentNode</span><span class="comment">//直接找到最近的父节点</span></span><br><span class="line">m.<span class="property">children</span><span class="comment">//得到一个伪数组，存所有的儿子元素节点</span></span><br><span class="line">n.<span class="property">nextElementSibling</span><span class="comment">//下一个兄弟</span></span><br><span class="line">n.<span class="property">previousElementSibling</span><span class="comment">//上一个兄弟</span></span><br></pre></td></tr></table></figure><p><strong>增加节点</strong>：一般先创建，再放入父节点（变量不加引号！！！）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> m = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>)<span class="comment">//document.createElement(&#x27;&#x27;)，创建一个新的div</span></span><br><span class="line">n.<span class="title function_">appendChild</span>(m)<span class="comment">//在n(父元素)最后插入m节点</span></span><br><span class="line">n.<span class="title function_">insertBefore</span>(m,n.<span class="property">children</span>[<span class="number">0</span>])<span class="comment">//将m插入到父元素的第一个孩子前面</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>克隆节点</strong>：值为true则包含后代一起克隆，false只克隆原标签一样的元素，需要自己放进目标元素内</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n.<span class="title function_">cloneNode</span>()</span><br></pre></td></tr></table></figure><p><strong>删除元素</strong>：只能父亲删儿子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素.<span class="title function_">removeChild</span>(要删除的元素)</span><br></pre></td></tr></table></figure><h2 id="M端事件"><a href="#M端事件" class="headerlink" title="M端事件"></a>M端事件</h2><ol><li>touchstart 手指触摸到一个DOM元素时触发</li><li>touchmove 手指在一个DOM元素上滑动触发</li><li>touchend手指离开一个DOM元素时触发</li></ol><h2 id="swiper插件（重要插件！！）"><a href="#swiper插件（重要插件！！）" class="headerlink" title="swiper插件（重要插件！！）"></a>swiper插件（重要插件！！）</h2><p>网址：<a href="https://www.swiper.com.cn/%EF%BC%8C%E6%96%B9%E4%BE%BF%E5%BC%80%E5%8F%91">https://www.swiper.com.cn/，方便开发</a></p><p>先下载引入swiper-bundle.min.js 和 swiper-bundle.min.css 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./swiper-bundle.min.css&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./swiper-bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="事件操作"><a href="#事件操作" class="headerlink" title="事件操作"></a>事件操作</h2><blockquote><p>事件监听</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;草泥马&#x27;</span>)</span><br><span class="line">&#125;)<span class="comment">//事件源.addEventListener(&#x27;事件类型&#x27;，要执行的函数)</span></span><br></pre></td></tr></table></figure><p>事件：</p><p><img src="https://pic.imgdb.cn/item/668f7772d9c307b7e9cff034.png" alt="image-20240319184023947"></p><blockquote><p>事件对象（也是对象，有事件触发时的相关信息）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>，<span class="keyword">function</span>(<span class="params">e</span>)&#123;&#125;)<span class="comment">//事件里的第一个参数(通常为e/event)就是事件对象</span></span><br></pre></td></tr></table></figure><p> 例如：console.log(e.key)：获得键盘的值</p><p>补两个方法：</p><ol><li>去除字符串前后的空格，使其美观，对象.trim()；</li><li>e.preventDefault() 阻止默认事件，给表单form加这个；</li><li>change 事件内容发生了变化。如在验证是否输入正确时不需要每次验证，只需要在改变时验证即可。</li></ol><p>解绑事件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匿名函数无法解绑，必须在外面声明函数名</span></span><br><span class="line">ck[i].<span class="title function_">removeEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>,函数名)</span><br></pre></td></tr></table></figure><h3 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h3><p><strong>事件捕获</strong>：从最外层再到最里层逐渐捕获事件，Document，html，body等等逐级递减</p><blockquote><p>DOM.addEventListener(时间类型，处理函数，是否使用捕获机制（true）)</p></blockquote><p><strong>事件冒泡</strong>：与事件捕获相反，默认发生,从子到父，只会冒泡同名事件</p><p><strong>取消事件流动</strong>：<em>事件对象(e).stopPropagation()</em></p><p><strong>阻止事件默认行为</strong>：      <em>事件对象(e).preventDefault()</em></p><h3 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h3><p>抽象的说就是当ul里有许多li时，我们可以采取对ul加监听来改变li的style</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>), m</span><br><span class="line">n.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;LI&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m)   m.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">        m = e.<span class="property">target</span>           </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)<span class="comment">//改变点到的li的颜色</span></span><br></pre></td></tr></table></figure><p>以此来优化性能</p><h3 id="事件加载"><a href="#事件加载" class="headerlink" title="事件加载"></a>事件加载</h3><p>等待页面或某个元素加载完成后在执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">window</span>(或者img等元素).<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;...&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;...&#125;)<span class="comment">//DOMContentLoaded只需要文档加载完毕即可，不需要等待样式表、图像加载</span></span><br></pre></td></tr></table></figure><h3 id="事件滚动"><a href="#事件滚动" class="headerlink" title="事件滚动"></a>事件滚动</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span></span><br><span class="line">    <span class="keyword">if</span>(n &gt;= <span class="number">100</span>) t.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>  t.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;)<span class="comment">//表示页面滚动超过100px时的时候啊让t显示，否则隐藏</span></span><br></pre></td></tr></table></figure><p>首先<strong>scroll</strong>为滚动事件，<strong>scrollTop</strong>为页面卷去的像素，同样还有<strong>scrollLeft</strong></p><p><strong>document.documentElement</strong>表示卷去的整个html页面的高度，说可读写的，也可以赋值</p><p>补：当窗口重置大小时用resize事件，可得</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>); &#125;)</span><br></pre></td></tr></table></figure><h3 id="client和offset"><a href="#client和offset" class="headerlink" title="client和offset"></a>client和offset</h3><p>同样有Width和Height，但不同的是，client不包括边框，而offset包含边框</p><p>同时<strong>offsetLeft</strong>，<strong>offsetTop</strong>都是检测盒子的位置，与最近一级带有定位的相关</p><p><strong>k.getBoundingClientRect()<strong>是相对当前</strong>视口</strong>的位置</p><p>e.pageX和e.pageY是鼠标的位置</p><h2 id="环境对象this"><a href="#环境对象this" class="headerlink" title="环境对象this"></a>环境对象this</h2><p>谁调用这个函数，则函数里的this指向谁</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">&#125;)<span class="comment">//这个函数的this指向它的调用者btn，而普通函数则指向window</span></span><br></pre></td></tr></table></figure><h2 id="操作表单"><a href="#操作表单" class="headerlink" title="操作表单"></a>操作表单</h2><p>获得输入值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> t= <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>);</span><br><span class="line">t.<span class="property">value</span>;<span class="comment">//得到输入值</span></span><br></pre></td></tr></table></figure><p>当判断选项是否获取时</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名.<span class="property">checked</span></span><br></pre></td></tr></table></figure><p>当获取完value后，可以使用reset清空表单</p><h2 id="表单提交验证"><a href="#表单提交验证" class="headerlink" title="表单提交验证"></a>表单提交验证</h2><p>如何前端获取密码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;t&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pw&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;bt&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;a()&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> t = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;t&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> pw = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pw&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(t.<span class="property">value</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(pw.<span class="property">value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>密码加密</strong>用md5，在head引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">//再让</span></span><br><span class="line">pw.<span class="property">value</span>=<span class="title function_">md5</span>(pw.<span class="property">value</span>);</span><br></pre></td></tr></table></figure><p>同时要再network里接收的话要使input里有name</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;t&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&gt;</span></span></span><br></pre></td></tr></table></figure><p>为了安全可以加一行 <input type="hidden" id="pw-password" name="md-password"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;t&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pw-password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;md-password&quot;</span>&gt;</span></span><br><span class="line">//js</span><br><span class="line">let md5pw=md5(pw.value);</span><br></pre></td></tr></table></figure><p>校验表单，return true或者false</p><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>jQuery 是一个 JavaScript 函数库。<a href="https://www.bootcdn.cn/jquery/">https://www.bootcdn.cn/jquery/</a>  打开后随便引入一个就可以用了。</p><p><strong>公式</strong>： $(selector).action()   </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> &gt;</span>点我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#a&#x27;</span>).<span class="title function_">click</span>( <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="title function_">alert</span>(<span class="number">1</span>); &#125; )</span><br></pre></td></tr></table></figure><p>文档工具站：<a href="https://jquery.cuishifeng.cn/css.html">https://jquery.cuishifeng.cn/css.html</a></p><blockquote><p>事件：鼠标，键盘等  如：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mouse</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mouse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    $(<span class="string">&#x27;document&#x27;</span>).<span class="title function_">mousemove</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        $(<span class="string">&#x27;#aa&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;x&#x27;</span>+e.<span class="property">pageX</span>+<span class="string">&#x27;y&#x27;</span>+e.<span class="property">pageY</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>操作Dom元素</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;fr&quot;</span>&gt;</span>fr<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span>se<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="string">&#x27;#fr&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;111&#x27;</span>); <span class="comment">//修改元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="string">&#x27;.father:eq(0) li[id=fr]&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;111&#x27;</span>); </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="string">&#x27;#fr&#x27;</span>).<span class="title function_">css</span>(&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;font-size&#x27;</span>:<span class="string">&#x27;50px&#x27;</span>&#125;);<span class="comment">//修改颜色</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="string">&#x27;.father li[id=se]&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="string">&#x27;.father li[id=se]&#x27;</span>).<span class="title function_">hide</span>();<span class="comment">//隐藏</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   $(<span class="variable language_">window</span>).<span class="title function_">width</span>()<span class="comment">//获取宽高</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><h3 id="定时器-延时函数"><a href="#定时器-延时函数" class="headerlink" title="定时器-延时函数"></a>定时器-延时函数</h3><p>开关定时器基本，此处为<strong>仅执行一次</strong>的定时器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="comment">//开定时器 setInterval(函数名，时间(ms)),返回</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;hahha&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;,<span class="number">2000</span>)</span><br><span class="line"><span class="built_in">clearTimeout</span>(n) <span class="comment">// 关闭定时器</span></span><br></pre></td></tr></table></figure><h3 id="JS执行机制"><a href="#JS执行机制" class="headerlink" title="JS执行机制"></a>JS执行机制</h3><p><strong>同步任务</strong>：再主线程上执行，形成一个执行栈；</p><p><strong>异步任务</strong>：1. 普通事件如click，resize等；2. 资源加载如load，error等；3.定时器如setInterval,setTimeout等，</p><p><strong>事件循环</strong>：同步任务放在执行栈中，异步任务放在任务队列中，当同步任务执行完再去异步任务里寻找有没有可执行的任务。</p><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><ol><li><p>location.href可以获取完整的url地址，location.href &#x3D; ‘目标地址’，可以用于跳转网页，例如五秒后自动跳转，</p></li><li><p>location.search 可以得到表单的值</p></li><li><p>location.hash 获取地址中的哈希值，符号#后面部分</p></li><li><p>location.reload() 刷新页面 true强制刷新</p></li></ol><h3 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h3><p>用于得到浏览器自身的相关信息。</p><p>主要用来判断是不是安卓或者苹果设备，跳转至移动站点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> userAgent = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line"><span class="comment">// 验证是否为Android或iPhone</span></span><br><span class="line"><span class="keyword">const</span> android = userAgent.<span class="title function_">includes</span>(<span class="string">&#x27;android&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> iphone = userAgent.<span class="title function_">includes</span>(<span class="string">&#x27;iphone&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(android || iphone) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 跳转到指定网页</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="history"><a href="#history" class="headerlink" title="history"></a>history</h3><p>go(1)代表前进，go(-1)代表后退，通常用于切换网页</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">n[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    history.<span class="title function_">go</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line">n[<span class="number">1</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    history.<span class="title function_">go</span>(-<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h2><ol><li>localStorage 用于当地存储，即使浏览器关了也还在</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;chang&#x27;</span>)</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;18&#x27;</span>)</span><br><span class="line"><span class="comment">// 查</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;name&#x27;</span>));</span><br><span class="line"><span class="comment">// 删</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>()</span><br></pre></td></tr></table></figure><ol start="2"><li><p>与local不同的是浏览器关了即数据丢失</p></li><li><p>存储复杂数据类型时不能直接使用</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;cyx&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;女&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 需要先将其转化成JSON字符串存储</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;love&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(person))</span><br><span class="line"><span class="comment">// 再将其转化成对象</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;love&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(p));</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>()</span><br><span class="line"><span class="comment">//一定记得删除，别一直存在硬盘里</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组map、join、forEach、filter、reduce等使用"><a href="#数组map、join、forEach、filter、reduce等使用" class="headerlink" title="数组map、join、forEach、filter、reduce等使用"></a>数组map、join、forEach、filter、reduce等使用</h2><p>map可以返回一个新数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> n = [<span class="string">&#x27;purple&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;black&#x27;</span>]</span><br><span class="line"><span class="keyword">const</span> newn = n.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">ele,index</span>)&#123;</span><br><span class="line">    <span class="comment">// index是下标，ele元素</span></span><br><span class="line">    <span class="keyword">return</span> ele + <span class="string">&#x27;颜色&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newn)<span class="comment">// [&#x27;purple颜色&#x27;, &#x27;blue颜色&#x27;, &#x27;black颜色&#x27;]</span></span><br></pre></td></tr></table></figure><p>join 以引号的字符为分隔符来分隔每个元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newn.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>)) <span class="comment">// purple颜色-blue颜色-black颜色</span></span><br></pre></td></tr></table></figure><p>forEach相当于加强版的for循环，无返回值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;black&#x27;</span>]</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">ele</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ele)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>filter过滤器，返回新数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]</span><br><span class="line"><span class="keyword">let</span> newarr = arr.<span class="title function_">filter</span>(<span class="function"><span class="params">ele</span> =&gt;</span> ele &gt;= <span class="number">15</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newarr) <span class="comment">// [20, 30]</span></span><br></pre></td></tr></table></figure><p>reduce可用于求和reduce((sum,ele)&#x3D;&gt;{}，init)，如果用init需要将最终值加init</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">85</span>,<span class="number">3</span>]  </span><br><span class="line"><span class="keyword">let</span> n = a.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum,ele</span>)=&gt;</span> sum + ele , <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n) <span class="comment">// 97</span></span><br></pre></td></tr></table></figure><p>还有很多,可以查文档</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/">MDN Web Docs (mozilla.org)</a></p></blockquote><h2 id="正则表达式（用于匹配字符串中字符组合的模式）"><a href="#正则表达式（用于匹配字符串中字符组合的模式）" class="headerlink" title="正则表达式（用于匹配字符串中字符组合的模式）"></a>正则表达式（用于匹配字符串中字符组合的模式）</h2><p>在线正则表达式测试网站 (oschina.net)(<a href="https://tool.oschina.net/regex">https://tool.oschina.net/regex</a>)</p><p>作用：1. 表单验证（匹配） 2. 过滤敏感词（替换） 3. 提取想要的部分（提取）</p><p>第一种表示：在**&#x2F; &#x2F;**中间写规则并用 <strong>test</strong>检测</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="string">&#x27;ssjavasssjavassssssssssssss&#x27;</span><span class="comment">// 要检查的字符串</span></span><br><span class="line"><span class="keyword">let</span> m = <span class="regexp">/java/</span> <span class="comment">// 定义正则表达式检测规则</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m.<span class="title function_">test</span>(n)) <span class="comment">// 判断 true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m.<span class="title function_">exec</span>(n)) <span class="comment">// 返回一个数组表示第一个规则的下标，否则返回NULL</span></span><br></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><ol><li>边界符：用来提示字符所处的位置，主要有两个字符</li></ol><blockquote><p>^ 表示匹配行首的文本，$ 表示匹配行尾的文本</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/哈$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;二哈哦耶哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哦耶&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// true 如果^ $在一起，表示必须精确匹配</span></span><br></pre></td></tr></table></figure><ol start="2"><li>量词:</li></ol><p>（1）’ * ‘ 表示出现0次或更多次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈*$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈*$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈*$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a哈&#x27;</span>)) <span class="comment">// false       </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈*$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈*$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈a哈&#x27;</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>（2）’ + ‘表示1次或更多次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈+$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈+$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈+$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a哈&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈+$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈+$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈a哈&#x27;</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>（3）’ ? ‘表示零次或1次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈a哈&#x27;</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>（4）{n}表示必须是n位，{n,}表示必须是n位及以上,{n,m}表示必须是&gt;&#x3D;n&amp;&amp;&lt;&#x3D;m;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈&#123;3,&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈&#123;3,4&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈哈哈&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈&#123;3,4&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈a哈&#x27;</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ol start="3"><li>字符类：在中括号’ [] ‘里加限定想要什么就在里面加，’ . ‘则是匹配除换行符以外的任意一个字符，</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z]&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;avs&#x27;</span>)) <span class="comment">// true 匹配小写字母</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z0-9]&#123;4&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;as1X&#x27;</span>)) <span class="comment">// true 匹配小写字母大写字母和数字</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z][A-Z][0-9]&#123;4&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a1X222&#x27;</span>)) <span class="comment">// false  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z][A-Z][0-9]&#123;4&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aX1222&#x27;</span>)) <span class="comment">// true  在括号分开时需要注意顺序相同，没有括号则无需注意</span></span><br><span class="line"><span class="comment">// [^a-zA-Z]则是除了字母以外所有字符，^放在最前面取反</span></span><br></pre></td></tr></table></figure><p>字符类有预定义</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d -&gt; [<span class="number">0</span>-<span class="number">9</span>] , \D -&gt;[^<span class="number">0</span>-<span class="number">9</span>]取反 , \w- &gt; [a-zA-<span class="variable constant_">Z0</span>-9_] , \W [^A-<span class="title class_">Za</span>-z0-9_]  取反 </span><br></pre></td></tr></table></figure><p>同时我们有i和g，i（ignore）是不区分大小写了，g（global）是全局搜索用来替换一些敏感字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/java/i</span>.<span class="title function_">test</span>(<span class="string">&#x27;是谁那么Java江河湖海&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="keyword">let</span> n = s.<span class="title function_">replace</span>(<span class="regexp">/java/gi</span>,<span class="string">&#x27;替换&#x27;</span>) <span class="comment">// &#x27;是谁那么替换江河湖海&#x27;</span></span><br></pre></td></tr></table></figure><p>阶段性结束咯，接下来是高阶，建议实践完成一两个登陆网站并做一个黑盒子放大效果</p><hr><h2 id="闭包（内部函数-外部函数的变量）"><a href="#闭包（内部函数-外部函数的变量）" class="headerlink" title="闭包（内部函数+外部函数的变量）"></a>闭包（内部函数+外部函数的变量）</h2><p>闭包的作用就是可以让外部也访问到函数内部的变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">out</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">10</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fn</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> n = <span class="title function_">out</span>()</span><br><span class="line"><span class="title function_">n</span>() <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>可能有内存泄漏的风险</p><h2 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m) <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> m = <span class="number">10</span></span><br></pre></td></tr></table></figure><p>在此处并不会报错，因为在代码执行前会将所有的var的声明提前如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m) <span class="comment">// undefined</span></span><br><span class="line">m = <span class="number">10</span> <span class="comment">// 只提升声明，不提升赋值</span></span><br></pre></td></tr></table></figure><h2 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h2><p>类似于函数的剩余参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>]</span><br><span class="line"><span class="keyword">let</span> b = [<span class="number">3</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">let</span> c = [...a,...b]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c) <span class="comment">// [1, 8, 5, 2, 3, 1, 9, 0] 可以使合并数组更方便</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...a) <span class="comment">// 1 8 5 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(...a)) <span class="comment">// 8 找最大数，Math.max由于无法直接在数组中寻找最大值需要展开</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(...b)) <span class="comment">// 0 找最小数</span></span><br></pre></td></tr></table></figure><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><ol><li>普通写法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params">x, y</span>) =&gt; &#123; </span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>)) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><ol start="2"><li>只有一个形参时可以省略括号，无参数不可省略</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = x =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> x </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(<span class="number">1</span>)) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><ol start="3"><li>从2可以缩写成3这样只有返回</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = x =&gt; x</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(<span class="number">3</span>)) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><ol start="4"><li>如果只有一行代码可以写成</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = x =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(x*<span class="number">3</span>)</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">3</span>) <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><ol start="5"><li>也可以返回对象字面量表达式，外面一定要加括号</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params">uname,age</span>) =&gt; (&#123;</span><br><span class="line">    <span class="attr">name</span>:uname,</span><br><span class="line">    <span class="attr">age</span>:age</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(<span class="string">&#x27;常雨轩&#x27;</span>,<span class="number">18</span>));</span><br></pre></td></tr></table></figure><p>箭头函数没有<strong>动态参数arguments</strong>这个伪数组</p><p>箭头函数没有this，只从上一级沿用this，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;ss&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">s</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">s</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fn.<span class="title function_">fn</span>() <span class="comment">//&#123;name: &#x27;ss&#x27;, fn: ƒ&#125;</span></span><br><span class="line"><span class="keyword">let</span> fn = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;ss&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>:<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">fn.<span class="title function_">fn</span>() <span class="comment">// window</span></span><br></pre></td></tr></table></figure><h2 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h2><h3 id="数组解构（允许嵌套）"><a href="#数组解构（允许嵌套）" class="headerlink" title="数组解构（允许嵌套）"></a>数组解构（允许嵌套）</h3><p>作用：把数组的单元快速批量的赋值给一系列变量的简洁语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">10</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">12</span>]</span><br><span class="line"><span class="keyword">let</span> [mx,mn,av] = arr </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mx) <span class="comment">// 10, mn = 6, av = 8; 按顺序传入</span></span><br><span class="line">;[mx,mn] = [mn,mx] <span class="comment">// 交换两值非常方便 mx = 6，mn = 10,记住一定要在前面加分号，因为有可能代码误以为数组和前面语句是相连的。</span></span><br><span class="line"><span class="keyword">let</span> [mx,mn,...av] = arr</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(av) <span class="comment">// [8, 11, 12] 接收剩余元素</span></span><br><span class="line"><span class="keyword">let</span> [mx,mn,,av] = arr <span class="comment">// 按需导入</span></span><br></pre></td></tr></table></figure><h3 id="对象解构（允许嵌套）"><a href="#对象解构（允许嵌套）" class="headerlink" title="对象解构（允许嵌套）"></a>对象解构（允许嵌套）</h3><p>属性名和变量名<strong>必须一致</strong>！！！！因为无序</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&#x27;lzd&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">19</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;uname, age&#125; = obj</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uname, age) <span class="comment">// lzd 19</span></span><br></pre></td></tr></table></figure><p>可以这样写，“什么值：赋值给谁”</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;<span class="attr">uname</span>:name, <span class="attr">age</span>:age1&#125; = obj</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name, age1) <span class="comment">// lzd 19</span></span><br></pre></td></tr></table></figure><p>obj对象嵌套family对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;<span class="attr">uname</span>:name, <span class="attr">family</span>:&#123;......&#125;&#125; = obj <span class="comment">// 需要明确指出是某个对象内的对象如 family:&#123;......&#125;</span></span><br></pre></td></tr></table></figure><p>渲染的时候可以这样写更简洁获取data（顺手的事）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">render = <span class="function">(<span class="params">&#123;age:data&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">&#125;    </span><br><span class="line"><span class="title function_">render</span>(obj)</span><br></pre></td></tr></table></figure><h2 id="构造函数实例化"><a href="#构造函数实例化" class="headerlink" title="构造函数实例化"></a>构造函数实例化</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">uname, age</span>)&#123; <span class="comment">//构造函数默认首字母大写</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = uname</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age </span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property">sayHi</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fr = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;lzd&#x27;</span>,<span class="number">19</span>) <span class="comment">// 实例化</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">sayHi</span>() <span class="comment">// hi 静态成员只有构造函数自己能访问，this指向构造函数</span></span><br><span class="line"><span class="comment">// 先是创建空对象，再执行函数赋给指向对象的this值，再返回对象</span></span><br></pre></td></tr></table></figure><h2 id="原型对象prototype"><a href="#原型对象prototype" class="headerlink" title="原型对象prototype"></a>原型对象prototype</h2><p>是构造函数的原型对象，公共属性写在构造函数上，公共方法写在原型对象上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">uname</span> = name</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">&#125;    </span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayhi</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">uname</span>)</span><br><span class="line">&#125; <span class="comment">// Person.prototype 也是一个对象，在这里写函数可以省内存</span></span><br></pre></td></tr></table></figure><p>例如reduce累计时不方便可以自己扩展函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sum</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">pre,ele</span>)=&gt;</span>pre+ele,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">2</span>,<span class="number">4</span>,<span class="number">32</span>,<span class="number">4</span>].<span class="title function_">sum</span>()) <span class="comment">// 42</span></span><br></pre></td></tr></table></figure><h2 id="constructor属性"><a href="#constructor属性" class="headerlink" title="constructor属性"></a>constructor属性</h2><p>原型对象的构造函数，类比于构造函数是爹，原型对象是儿子，prototype和constructor是互相指向的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> === <span class="title class_">Array</span>) <span class="comment">// true</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">uname</span> = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">constructor</span>:<span class="title class_">Person</span>,</span><br><span class="line">    <span class="attr">n</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125; <span class="comment">// 追加时不需要，但是在赋值的时候一定要把constructor:Person加上，因为赋值会丢掉这个构造函数</span></span><br></pre></td></tr></table></figure><h2 id="proto-对象原型"><a href="#proto-对象原型" class="headerlink" title="__proto__对象原型"></a>__proto__对象原型</h2><p>对象原型指向原型对象，对象原型的constructor指向构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">uname</span> = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> n = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;kzd&#x27;</span>) <span class="comment">// n.__proto__是对象的原型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="property">__proto__</span> === <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="property">__proto__</span>.<span class="property">constructor</span> === <span class="title class_">Person</span>)<span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n.<span class="property">constructor</span> === <span class="title class_">Person</span>)<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="对象继承"><a href="#对象继承" class="headerlink" title="对象继承"></a>对象继承</h2><p>如果继承的对象是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Person</span>=&#123; <span class="attr">eyes</span>: <span class="number">2</span>,<span class="attr">head</span>: <span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure><p>就会出现在Woman的原型对象新增函数时，Man的原型对象也出现了这个函数，是错误的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>)&#123; <span class="comment">// 要继承的对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">head</span> = <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Woman</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Man</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"><span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>() <span class="comment">// 两个都是人继承Person</span></span><br><span class="line"><span class="title class_">Man</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>()</span><br><span class="line"><span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Woman</span> <span class="comment">// 原型一定要指回去</span></span><br><span class="line"><span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">baby</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(<span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(<span class="title class_">Man</span>.<span class="property"><span class="keyword">prototype</span></span>)</span><br></pre></td></tr></table></figure><p>而原型对象是new出来的话则不出现这种情况，因为此时每个new出来的对象互相不相等</p><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p>在当前不可以用的函数可以通过原型链找到object来使用</p><p><img src="https://pic.imgdb.cn/item/668e4888d9c307b7e9898c83.png"></p><h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><p>Object.assign用于浅拷贝，只拷贝第一层，第二层对象依然是直接给地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> P = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;lzd&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">19</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">msg</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = &#123;&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(p,P)</span><br><span class="line">p.<span class="property">age</span>=<span class="number">10</span> <span class="comment">// 第一层不影响</span></span><br><span class="line">p.<span class="property">data</span>.<span class="property">msg</span> = <span class="number">20</span> <span class="comment">// 第二场影响</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(P) <span class="comment">// age: 19 msg: 20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p) <span class="comment">// age: 10 msg: 20</span></span><br></pre></td></tr></table></figure><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p>深拷贝不会影响原对象</p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">newo,oldo</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> oldo) &#123;</span><br><span class="line">        <span class="keyword">if</span>(oldo[key] <span class="keyword">instanceof</span> <span class="title class_">Array</span>)&#123;</span><br><span class="line">            newo[key] = []</span><br><span class="line">            <span class="title function_">fn</span>(newo[key],oldo[key])</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(oldo[key] <span class="keyword">instanceof</span> <span class="title class_">Object</span>)&#123;</span><br><span class="line">            newo[key] = &#123;&#125;</span><br><span class="line">            <span class="title function_">fn</span>(newo[key],oldo[key])</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            newo[key] = oldo[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// Array一定要在Object之前</span></span><br><span class="line"><span class="title function_">fn</span>(p,P)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(P)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p)</span><br></pre></td></tr></table></figure><h3 id="lodash库-cloneDeep"><a href="#lodash库-cloneDeep" class="headerlink" title="lodash库&#x2F;cloneDeep"></a>lodash库&#x2F;cloneDeep</h3><p>引入在线地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js&quot;</span> integrity=<span class="string">&quot;sha256-qXBd/EfAdjOA2FGrGAG+b3YBn2tn5A6bhz+LSgYD96k=&quot;</span> crossorigin=<span class="string">&quot;anonymous&quot;</span>&gt;&lt;<span class="regexp">/script&gt;  /</span>/ 在线地址</span><br><span class="line"><span class="keyword">let</span> p = _.<span class="title function_">cloneDeep</span>(P) <span class="comment">// 用_.cloneDeep来深拷贝</span></span><br></pre></td></tr></table></figure><h3 id="通过JSON-stringify-实现"><a href="#通过JSON-stringify-实现" class="headerlink" title="通过JSON.stringify()实现"></a>通过JSON.stringify()实现</h3><p>通过JSON字符串修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(P))</span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ol><li>throw</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x||!y)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;操你妈怎么不传参&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>try catch</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>).<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123; <span class="comment">// e是错误</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123; <span class="comment">// 最终一定会执行的代码</span></span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="改变this指向"><a href="#改变this指向" class="headerlink" title="改变this指向"></a>改变this指向</h2><ol><li>call() 使用频率最低</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y)</span><br><span class="line">&#125;</span><br><span class="line">fn.<span class="title function_">call</span>(fn,<span class="number">1</span>,<span class="number">2</span>) <span class="comment">// fn，3 会调用函数</span></span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>) <span class="comment">// window ，3</span></span><br></pre></td></tr></table></figure><ol start="2"><li>apply()</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y)</span><br><span class="line">&#125;</span><br><span class="line">fn.<span class="title function_">apply</span>(fn,[<span class="number">1</span>,<span class="number">2</span>]) <span class="comment">// 传参是用数组传参，其它和call相似</span></span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">2</span>,<span class="number">31</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">234</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">86</span>,<span class="number">456</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,arr)) <span class="comment">// 可以借此使用一些Math方法</span></span><br></pre></td></tr></table></figure><ol start="3"><li>bind</li></ol><p>bind用来修改指向，返回值是一个拷贝过并且改变指向的方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;lzd&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)&#125;</span><br><span class="line"><span class="title function_">n</span>() <span class="comment">// window</span></span><br><span class="line"><span class="keyword">let</span> m = n.<span class="title function_">bind</span>(obj)</span><br><span class="line"><span class="title function_">m</span>() <span class="comment">// obj</span></span><br></pre></td></tr></table></figure><p>案例：让按钮两秒后恢复</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">true</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>),<span class="number">2000</span>)&#125;)</span><br></pre></td></tr></table></figure><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><p>防抖是单位时间内频繁触发事件只执行最后一次，防止过度的计算消耗</p><ol><li>lodash库防抖</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">en</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span><br><span class="line">&#125;</span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, _.<span class="title function_">debounce</span>(<span class="function">()=&gt;</span><span class="title function_">en</span>(<span class="number">1</span>,<span class="number">2</span>),<span class="number">500</span>));</span><br></pre></td></tr></table></figure><ol start="2"><li>手写防抖函数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">en</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn,time</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(timer) <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span><span class="title function_">en</span>(<span class="number">1</span>,<span class="number">2</span>),time)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="title function_">debounce</span>(en,<span class="number">500</span>));</span><br></pre></td></tr></table></figure><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><p>单位时间内频繁触发时间只执行一次，完整的第一次执行完执行下一次</p><ol><li>lodash库节流</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, _.<span class="title function_">throttle</span>(en, <span class="number">1000</span>,&#123; <span class="attr">trailing</span>: <span class="literal">true</span> ,<span class="attr">leading</span>:<span class="literal">false</span>&#125;)); <span class="comment">// trailing节流后，leading节流前</span></span><br></pre></td></tr></table></figure><ol start="2"><li>手写节流</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">en</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn,time</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!timer)&#123;</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="title function_">en</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">                timer = <span class="literal">null</span></span><br><span class="line">            &#125;,time)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="title function_">throttle</span>(en,<span class="number">1000</span>));</span><br></pre></td></tr></table></figure><ol start="3"><li>节流小案例，让视频在页面刷新后也保持这个进度</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> video = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;video&#x27;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ud</span>(<span class="params"></span>)&#123;  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;currentTime&#x27;</span>,video.<span class="property">currentTime</span>) &#125;</span><br><span class="line">video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;timeupdate&#x27;</span>,_.<span class="title function_">throttle</span>(ud,<span class="number">500</span>))</span><br><span class="line">video.<span class="property">onloadeddata</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> time = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;currentTime&#x27;</span>)</span><br><span class="line">    video.<span class="property">currentTime</span> = time  &#125;</span><br></pre></td></tr></table></figure><h2 id="获取设备类型"><a href="#获取设备类型" class="headerlink" title="获取设备类型"></a>获取设备类型</h2><p>跳转：<a href="https://www.jianshu.com/p/3ca470ce8066">如何判断页面是通过PC端还是移动端访问？ - 简书 (jianshu.com)</a></p><p>例如：<strong>window.orientation</strong> 检测屏幕方向，桌面设备没有这种属性，只有移动设备才有这个属性，桌面设备会返回undefined。</p><hr>~~好枯燥~~蛮有意思的，巩固的话一定要多看源码，对应修改]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简简单单的H5学习~~~</title>
      <link href="/2024/09/12/Git/"/>
      <url>/2024/09/12/Git/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="1-初始化本地git仓库"><a href="#1-初始化本地git仓库" class="headerlink" title="1. 初始化本地git仓库"></a>1. 初始化本地git仓库</h2><blockquote><p>git init</p></blockquote><p>会出现一个**.git**隐藏文件，记录文件状态内容和历史记录</p><h2 id="2-三个区域"><a href="#2-三个区域" class="headerlink" title="2. 三个区域"></a>2. 三个区域</h2><ol><li>工作区：实际开发时操作的文件夹，查询列表<code>git ls-files</code></li><li>暂存区：保存之前的准备区域（暂存改动过的文件），<code>git add 文件名</code>暂存指定文件或<code>git add .</code>暂存所有，<code>git ls-files</code>查询暂存文件</li><li>版本库：提交并保存暂存区中的内容，产生一个版本快照，<code>git commit -m &quot;注释&quot;</code>提交并保存</li></ol><h2 id="3-文件状态"><a href="#3-文件状态" class="headerlink" title="3. 文件状态"></a>3. 文件状态</h2><ol><li>未跟踪：未被git管理过</li><li>已跟踪：已被git知道和管理</li></ol><p>查询状态：<strong>git status</strong> ；未跟踪（U）；第一次内git暂存（A）；已修改（M）；未修改（‘’）三个区域统一；删除（D）。</p><h2 id="4-暂存区使用"><a href="#4-暂存区使用" class="headerlink" title="4. 暂存区使用"></a>4. 暂存区使用</h2><ol><li>从暂存区恢复文件<code>git restore .</code>恢复所有，也可以写文件路径</li><li>从暂存区恢复文件<code>git rm --cached .</code>删除所有，也可以写文件路径</li></ol><h2 id="5-回退版本"><a href="#5-回退版本" class="headerlink" title="5. 回退版本"></a>5. 回退版本</h2><p> <strong>git log</strong>查看仓库中当前所有的版本，<strong>git reflog</strong>查看全部的版本，<strong>git log –oneline</strong>简要查看版本号。</p><p>三种回退命令：</p><ol><li><code>git reset --soft 版本号</code>回退时不删除原来的文件</li><li><code>git reset --hard 版本号</code>回退时删除原来的文件</li><li><code>git reset 版本号</code>回退时在暂存区删除原来的文件，工作区保留</li></ol><p>版本号是哈希值！！！</p><h2 id="6-忽略文件"><a href="#6-忽略文件" class="headerlink" title="6. 忽略文件"></a>6. 忽略文件</h2><p>我们常需要忽略的文件，在**.gitignore**文件内加入所有需要忽视的文件，例如以下是通常要忽略的文件</p><p><img src="https://pic.imgdb.cn/item/66a452c3d9c307b7e9340141.png" alt="1722007310024"></p><h2 id="7-分支"><a href="#7-分支" class="headerlink" title="7. 分支"></a>7. 分支</h2><ol><li><p>创建分支：<code>git branch 分支名</code>，<strong>git branch</strong>查询现在head是指向哪个分支</p></li><li><p>切换分支：<code>git checkout 分支名</code></p></li></ol><h2 id="8-合并分支"><a href="#8-合并分支" class="headerlink" title="8. 合并分支"></a>8. 合并分支</h2><ol><li>进入主分支，然后合并：<code>git merge 分支名</code></li><li>合并后不需要就删除：<code>git branch -d 分支名</code></li></ol><h2 id="9-合并冲突"><a href="#9-合并冲突" class="headerlink" title="9. 合并冲突"></a>9. 合并冲突</h2><p>当分支之间相同的文件出现不同的修改时会出现合并冲突，不知道要按照哪个合并，需要手动修改一致再去合并</p><h2 id="10-远程仓库"><a href="#10-远程仓库" class="headerlink" title="10. 远程仓库"></a>10. 远程仓库</h2><ol><li><p>给本地Git仓库添加远程仓库原点地址：<code>git remote add 远程仓库别名 远程仓库地址</code> </p></li><li><p>删除地址：<code>git remote remove 远程仓库别名 远程仓库地址</code></p></li><li><p>推送版本记录到远程仓库，<code>git push -u 远程仓库别名 本地和远程分知名</code>，建立关系后就可以只用git push传了</p></li></ol><h2 id="11-克隆远程仓库"><a href="#11-克隆远程仓库" class="headerlink" title="11. 克隆远程仓库"></a>11. 克隆远程仓库</h2><p>拷贝一个仓库到本地：<code>git clone 远程仓库地址</code>，自动建立本地与远程的链接</p><h2 id="12-从远程拉取"><a href="#12-从远程拉取" class="headerlink" title="12. 从远程拉取"></a>12. 从远程拉取</h2><p>在远程仓库有新提交时用<code>git pull</code>拉取远程分支，不影响本地工作区</p><h2 id="13-常用命令"><a href="#13-常用命令" class="headerlink" title="13. 常用命令"></a>13. 常用命令</h2><p><img src="https://pic.imgdb.cn/item/66a45270d9c307b7e933c793.png" alt="1722009208717"></p><p><img src="https://pic.imgdb.cn/item/66a4527fd9c307b7e933d1ec.png" alt="1722009254044"></p><p><img src="https://pic.imgdb.cn/item/66a4528ed9c307b7e933dc9a.png" alt="1722044929903"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简简单单的H5学习~~~</title>
      <link href="/2024/09/12/Html5/"/>
      <url>/2024/09/12/Html5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="html5"><a href="#html5" class="headerlink" title="html5"></a>html5</h1><h2 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h2><p>h1 …  h6 标题标签，字体大小递减（应写闭合标签）</p><p> p 段落标签,自带换行（应写闭合标签）</p><p><em><!--  ...  --></em>  注释</p><p>&lt;font *size*&#x3D;”1…6”&gt;  字体大小递增（应写闭合标签）</p><p>br 换行</p><p>hr 分割线</p><h2 id="文本格式化（应写闭合标签）"><a href="#文本格式化（应写闭合标签）" class="headerlink" title="文本格式化（应写闭合标签）"></a>文本格式化（应写闭合标签）</h2><ol><li>strong    b   都是加粗；</li><li>em    i    都是斜体；</li><li>sub 是下标：H<sub>2</sub>O             sup  是上标：2<sup>3</sup></li><li>pre （我还不知道用处hhh）可以将文本里的空格和换行直接实现在网页内</li><li>code  codeforces这种传展示代码应该会用到</li><li>abbr  缩略语~~</li><li>del  定义删除字</li><li>ins 定义插入字</li></ol><h2 id="超链接："><a href="#超链接：" class="headerlink" title="超链接："></a>超链接：</h2><p>a 标签 要在 href 后加地址:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.luogu.com.cn/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>若是想跳到同一页的某个位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#5&quot;</span>&gt;</span>跳<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;5&quot;</span>&gt;</span>hahha<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>若是想点击下载则</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;test.pdf&quot;</span> <span class="attr">download</span>&gt;</span>下载文档<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>target属性问题：</p><ol><li><p>target&#x3D;”_blank”:在新窗口中浏览新的页面。</p></li><li><p>target&#x3D;”_self”:在同一个窗口打开新的页面。</p></li><li><p>target&#x3D;”_parent”:在父窗口中打开新的页面。（页面中使用框架才有用）</p></li><li><p>target&#x3D;”_top” :以整个浏览器作为窗口显示新页面。（突破了页面框架的限制）</p></li></ol><link *rel*="icon" *href*=""> 给title加图片啦！~~]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuey（补充而已~~~）</title>
      <link href="/2024/09/12/jQuery/"/>
      <url>/2024/09/12/jQuery/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>jQuery对象全部是数组，与dom对象可以互相转换</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = $(<span class="string">&#x27;.question&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><ol start="2"><li>可以用css来改变css属性</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;purple&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>$(‘:type属性值’)</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;:text&#x27;</span>) <span class="comment">// 选取所有的单行文本框</span></span><br><span class="line">$(<span class="string">&#x27;:password&#x27;</span>) </span><br><span class="line">$(<span class="string">&#x27;父亲&gt;option:selected&#x27;</span>)  <span class="comment">// 这个父亲下的selected的option</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vite（还没看完~~~....）</title>
      <link href="/2024/09/12/Vite/"/>
      <url>/2024/09/12/Vite/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a>Vite</h1><h2 id="开发文档"><a href="#开发文档" class="headerlink" title="开发文档"></a>开发文档</h2><p><a href="https://vitejs.cn/vite3-cn/guide/">开始 | Vite 官方中文文档 (vitejs.cn)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue精讲~~~！</title>
      <link href="/2024/09/12/Vue/"/>
      <url>/2024/09/12/Vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vue2"><a href="#Vue2" class="headerlink" title="Vue2"></a>Vue2</h1><p>首先引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="1-主要结构"><a href="#1-主要结构" class="headerlink" title="1. 主要结构"></a>1. 主要结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">let v = new Vue(&#123;</span><br><span class="line">    el: &#x27;#root&#x27;, // 第一种关联方法</span><br><span class="line">    data: &#123; // 第一种写法对象式</span><br><span class="line">        message:&#x27;hello,world&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    data()&#123;// 第二种函数式子 this是实例对象，不可以用箭头函数</span><br><span class="line">        console.log(this)</span><br><span class="line">        return &#123;</span><br><span class="line">            message:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    methods: &#123; // 在methods里写方法</span><br><span class="line">        click1()&#123;</span><br><span class="line">            alert(1)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    computed:&#123;</span><br><span class="line">        计算属性名()&#123;</span><br><span class="line">            基于现有数据编写求职逻辑</span><br><span class="line">            return 结果</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     created() &#123; // 生命周期函数直接写进去</span><br><span class="line">        console.log(&#x27;created&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">    updated() &#123;</span><br><span class="line">        console.log(&#x27;updated&#x27;)</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">v.$mount(&#x27;#root&#x27;) // 另一种方式绑定， 第二种关联方法（挂在上面）</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>补充：</p><ol><li><strong>export default</strong></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router; <span class="comment">// 用default在一个模块中只能用一次，并且导入的时候不需要大括号</span></span><br><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>; <span class="comment">// 导入的时候不需要大括号</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>export</strong></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123; ... &#125;) </span><br><span class="line"><span class="keyword">export</span> &#123; router &#125;; <span class="comment">// 两者都可以，export可以多次使用</span></span><br><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">import</span> &#123; router &#125; <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>; <span class="comment">//导入的时候需要大括号</span></span><br></pre></td></tr></table></figure><h3 id="2-2-指令语法"><a href="#2-2-指令语法" class="headerlink" title="2.2 指令语法"></a>2.2 指令语法</h3><p>用于解析<strong>标签</strong>，同样是需要些表达式</p><h4 id="v-html"><a href="#v-html" class="headerlink" title="* v-html"></a>* v-html</h4><p>动态的修改innerhtml</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;root&quot;</span> v-html=<span class="string">&quot;msg&quot;</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; <span class="comment">//必须实例化，有配置对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>, <span class="comment">// 第一种关联方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">msg</span>: <span class="string">&#x27;dadas&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br></pre></td></tr></table></figure><h4 id="v-bind"><a href="#v-bind" class="headerlink" title="* v-bind"></a>* v-bind</h4><p>将Vue实例中的数据和方法与HTML元素的属性进行绑定，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;href.toUpperCase()&quot;</span>&gt;</span>悬浮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;href&quot;</span>&gt;</span>悬浮<span class="tag">&lt;/<span class="name">a</span>&gt;</span> //  v-bind可简写为:</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;.fr&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">href</span>:<span class="string">&#x27;https://www.baidu.com/&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-bind对于样式控制增强</p><ol><li>:class&#x3D;“{类名1：布尔值，类名2：布尔值}” 适用于一个类名来回切换</li><li>:class&#x3D;“[类名1，类名2]” 适用于批量添加或删除类</li><li>:style&#x3D;”{CSS属性名1：CSS属性值，CSS属性名2：CSS属性值}”</li></ol><p>补：在js中background-color这种带横杠的属性名不支持，有两种写法，一个是加引号‘background-color’，另一个是驼峰写法backgroundColor</p><h4 id="v-model"><a href="#v-model" class="headerlink" title="* v-model"></a>* v-model</h4><p>将表单输入框的内容同步给 JavaScript 中相应的变量，<strong>双向绑定</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;fr&quot;&gt;</span><br><span class="line">输入：&lt;input type=&quot;text&quot;  v-model=&quot;message&quot; &gt; &#123;&#123;message&#125;&#125;</span><br><span class="line">输入：&lt;input type=&quot;text&quot; v-model:value=&quot;message&quot; &gt; &#123;&#123;message&#125;&#125;   </span><br><span class="line">&lt;/div&gt; // 由于v-model:value本身就是为了获取值，可以缩写为v-model</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   let v = new Vue(&#123;</span><br><span class="line">        el: &#x27;#fr&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:&#x27;1&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;fr&quot;&gt;</span><br><span class="line">性别：</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;message&quot; value=&quot;男&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;message&quot; value=&quot;女&quot;&gt;女</span><br><span class="line">&lt;br&gt;</span><br><span class="line">我选择的是：&#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   let v = new Vue(&#123;</span><br><span class="line">        el: &#x27;#fr&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>不仅是输入框，复选框，文本域，下拉菜单都可以，但都要设定value值，本质是在获取value</p><h4 id="v-on"><a href="#v-on" class="headerlink" title="* v-on"></a>* v-on</h4><p>事件处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @mouseover=<span class="string">&quot;count--&quot;</span> @mouseleave=<span class="string">&quot;count--&quot;</span>&gt;-&lt;/button&gt;</span><br><span class="line">       <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">mouseenter</span>=<span class="string">&quot;count++&quot;</span> @<span class="attr">mouseleave</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span> <span class="comment">// 也可以直接写内联语句在里面</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;click1(66)&quot;</span>&gt;</span>点击1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span> <span class="comment">// 第一种写法 66 如果只写click1函数则默认有一个点击事件</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;click2($event,5)&quot;</span>&gt;</span>点击2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span> <span class="comment">// 第二种写法v-on-&gt;@  同时$event为点击事件的占位符</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;clk(flag)&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>lzd<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">flag</span>:<span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">click1</span>(<span class="params">num</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">alert</span>(num)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">click2</span>(<span class="params">e,num</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">innerHTML</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">clk</span>:<span class="keyword">function</span>(<span class="params">flag</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">flag</span> = !<span class="variable language_">this</span>.<span class="property">flag</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="v-if"><a href="#v-if" class="headerlink" title="* v-if"></a>* v-if</h4><p>条件渲染，本质上是在创建和销毁</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>yes<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>no<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;.fr&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">ok</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>else if</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;a&#x27;&quot;</span>&gt;</span>a<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;b&#x27;&quot;</span>&gt;</span>b<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;c&#x27;&quot;</span>&gt;</span>c<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>other<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;.fr&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:<span class="string">&#x27;d&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-show"><a href="#v-show" class="headerlink" title="* v-show"></a>* v-show</h4><p>与v-if基本一直但是本质上修改display: none;</p><h4 id="v-for"><a href="#v-for" class="headerlink" title="* v-for"></a>* v-for</h4><p>一定要绑定上key，并且要用<strong>唯一</strong>的<strong>id</strong>，不能用<strong>index</strong>下标值，否则会出现奇怪bug</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;ele in fruits&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;ele.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;ele.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;ele.author&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;clk(ele.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&#x27;.fr&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">flag</span>:<span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">fruits</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;《红楼梦》&#x27;</span>,<span class="attr">author</span>:<span class="string">&#x27;曹雪芹&#x27;</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;《西游记》&#x27;</span>,<span class="attr">author</span>:<span class="string">&#x27;吴承恩&#x27;</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;<span class="attr">id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&#x27;《水浒传》&#x27;</span>,<span class="attr">author</span>:<span class="string">&#x27;施耐庵&#x27;</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;<span class="attr">id</span>:<span class="number">4</span>,<span class="attr">name</span>:<span class="string">&#x27;《三国演义》&#x27;</span>,<span class="attr">author</span>:<span class="string">&#x27;罗贯中&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">clk</span>:<span class="keyword">function</span>(<span class="params">id</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">fruits</span> = <span class="variable language_">this</span>.<span class="property">fruits</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">ele</span>=&gt;</span>ele.<span class="property">id</span>!==id)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-3-指令的修饰符"><a href="#2-3-指令的修饰符" class="headerlink" title="2.3 指令的修饰符"></a>2.3 指令的修饰符</h3><ol><li>按键修饰符：@keyup.enter指键盘回车监听</li><li>v-model修饰符：v-model.trim 指去除首尾空格  v-model.number 转化为数字</li><li>事件修饰符：@事件名.stop 阻止冒泡  @事件名.prevent 阻止默认行为</li></ol><h2 id="3-computed计算属性"><a href="#3-computed计算属性" class="headerlink" title="3. computed计算属性"></a>3. computed计算属性</h2><p>性能更佳，有缓存机制，除非现有数据改变会存下数据，在多次使用时比methods性能更优，不需要声明在data对象中</p><p>普通写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    计算属性名()&#123;</span><br><span class="line">        基于现有数据编写求职逻辑</span><br><span class="line">        return 结果</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">这是一个属性，在调用时只需要&#123;&#123;计算属性名&#125;&#125;即可</span><br></pre></td></tr></table></figure><p>完整写法，当直接修改绑定的值时才这样写，一般用不到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;root&quot;&gt;</span><br><span class="line">    姓：&lt;input type=&quot;text&quot; name=&quot;&quot; v-model=&quot;fr&quot;&gt;</span><br><span class="line">    名：&lt;input type=&quot;text&quot; name=&quot;&quot; v-model=&quot;se&quot;&gt;</span><br><span class="line">    =&#123;&#123;res&#125;&#125;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;change&quot;&gt;change&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let vm = new Vue(&#123;</span><br><span class="line">        el:&#x27;.root&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            fr:&#x27;&#x27;,</span><br><span class="line">            se:&#x27;&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            change:function()&#123;</span><br><span class="line">                this.res = &#x27;常雨轩&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line">            res:&#123; </span><br><span class="line">                get()&#123;  // 可以接收值</span><br><span class="line">                    return this.fr+this.se</span><br><span class="line">                &#125;,</span><br><span class="line">                set(value)&#123; // 直接修改时则需要set</span><br><span class="line">                    this.fr = value.slice(0,1)</span><br><span class="line">                    this.se = value.slice(1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-watch监听"><a href="#4-watch监听" class="headerlink" title="4. watch监听"></a>4. watch监听</h2><p>如果原值发生变化则会触发，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div <span class="keyword">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;obj.fr&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    =&#123;&#123;obj.fr&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&#x27;.root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">obj</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">fr</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">watch</span>:&#123; <span class="comment">// </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="string">&#x27;obj.fr&#x27;</span>(newv,oldv)&#123; <span class="comment">// 或者写成objFr</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">console</span>.<span class="title function_">log</span>(newv,oldv)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当在data中定义简单的数据属性不需要引号，Vue 默认将其作为响应式数据处理；定义对象时访问嵌套属性要使用字符串形式来表示属性路径，Vue 2.x 默认使用的是 <code>Object.defineProperty</code> 来实现响应式系统，它要求属性名必须是一个字符串。</p><p>完整的写法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;root&quot;&gt;</span><br><span class="line">    &lt;select v-model=&quot;obj.lang&quot;&gt;</span><br><span class="line">        &lt;option value=&quot;意大利&quot;&gt;意大利&lt;/option&gt;</span><br><span class="line">        &lt;option value=&quot;英语&quot;&gt;英语&lt;/option&gt;</span><br><span class="line">        &lt;option value=&quot;汉语&quot;&gt;汉语&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;obj.fr&quot;&gt;</span><br><span class="line">    =&#123;&#123;ans&#125;&#125;&lt;br&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let vm = new Vue(&#123;</span><br><span class="line">        el:&#x27;.root&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            obj:&#123;</span><br><span class="line">                fr:&#x27;adw&#x27;,</span><br><span class="line">                lang:&#x27;意大利&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            ans:&#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123; </span><br><span class="line">            obj:&#123; // 以对象作为监视对象</span><br><span class="line">                deep:true, // 表示是否深度监视，当出现多个对象的时候则需要深度监视</span><br><span class="line">                immediate:true, // 是否在页面刷新时立即执行一次</span><br><span class="line">                handler(newv)&#123;</span><br><span class="line">                    clearTimeout(this.time)</span><br><span class="line">                    this.time = setTimeout(()=&gt;&#123;</span><br><span class="line">                        axios(&#123;</span><br><span class="line">                            url:&#x27;https://applet-base-api-t.itheima.net/api/translate&#x27;,</span><br><span class="line">                            params:newv</span><br><span class="line">                        &#125;).then(result=&gt;&#123;</span><br><span class="line">                            let res = result.data.data</span><br><span class="line">                            this.ans = res</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;,300)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-生命周期函数"><a href="#5-生命周期函数" class="headerlink" title="5. 生命周期函数"></a>5. 生命周期函数</h2><p><img src="https://pic.imgdb.cn/item/66a384a7d9c307b7e98fe911.png" alt="生命周期函数"></p><p>生命周期函数直接写入vue对象，首先是created，mounted，是固定的，结束后就是update在频繁更新，最后是destroy</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>&#123;&#123;res&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&#x27;.root&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">res</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">change</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">res</span> = <span class="string">&#x27;常雨轩&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;created&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;updated&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>实际应用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;.root&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">res</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">list</span>:[]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">created</span>(<span class="params"></span>) &#123; <span class="comment">// 在网页初始时请求数据</span></span><br><span class="line">      <span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">      xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;http://hmajax.itheima.net/api/news&#x27;</span>)</span><br><span class="line">      xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>));</span><br><span class="line">      &#125;)</span><br><span class="line">      xhr.<span class="title function_">send</span>()</span><br><span class="line">     &#125;,</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123; <span class="comment">// 在dom元素加载好后便在输入框自动获取焦点</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=text]&#x27;</span>).<span class="title function_">focus</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="6-工程化开发-脚手架"><a href="#6-工程化开发-脚手架" class="headerlink" title="6 工程化开发&amp;脚手架"></a>6 工程化开发&amp;脚手架</h2><p>首先配置环境变量</p><blockquote><p>npm install -g @vue&#x2F;cli</p></blockquote><p>查看版本号</p><blockquote><p>vue –version</p></blockquote><p>创建项目</p><blockquote><p>vue create project-name</p></blockquote><p>启动</p><blockquote><p>npm run serve</p></blockquote><p>主要包含</p><p><img src="https://pic.imgdb.cn/item/66a384c5d9c307b7e98ffd3a.png" alt="项目运行流程"></p><h3 id="组件（自定义元素）"><a href="#组件（自定义元素）" class="headerlink" title="* 组件（自定义元素）"></a>* 组件（自定义元素）</h3><p>局部注册：需要在component文件下写组件，并且在App.vue导入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;root&quot;&gt;</span><br><span class="line">        &lt;PageHeader&gt;&lt;/PageHeader&gt; // 以标签的形式写入</span><br><span class="line">        &lt;PageBody&gt;&lt;/PageBody&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import PageHeader from &#x27;./components/PageHeader.vue&#x27; // 导入组件</span><br><span class="line">import PageBody from &#x27;./components/PageBody.vue&#x27;</span><br><span class="line">export default&#123;</span><br><span class="line">    components:&#123; // 加入组件</span><br><span class="line">        PageHeader,</span><br><span class="line">        PageBody</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>全局注册：需要在component文件下写组件，并且在main.js导入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">PageButton</span> <span class="keyword">from</span> <span class="string">&#x27;./components/PageButton.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;PageButton&#x27;</span>,<span class="title class_">PageButton</span>)</span><br></pre></td></tr></table></figure><p><strong>注意：两者分别是components和component，区分开</strong></p><h2 id="7-样式冲突"><a href="#7-样式冲突" class="headerlink" title="7. 样式冲突"></a>7. 样式冲突</h2><p><strong>scoped</strong>：本质上是给不用的组件内的元素加了一个哈希值，data-v-hash，并且自动加了div[data-v-hash]属性选择器，以防止不同组件之间的互相影响：</p><style scoped> </style><h2 id="8-data函数"><a href="#8-data函数" class="headerlink" title="8. data函数"></a>8. data函数</h2><p>在脚手架下写data需要将其作为一个函数，每个实例可以维护一份被返回对象的独立的拷贝，如果 <code>data</code> 是一个对象，则它的引用会在所有组件实例之间共享，这会导致如果一个组件实例更改了这个对象，所有其他组件实例的状态也会受到影响，从而导致数据污染。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">return&#123;</span><br><span class="line"> count:999</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-组件通信"><a href="#9-组件通信" class="headerlink" title="9. 组件通信"></a>9. 组件通信</h2><h3 id="9-1-父子关系"><a href="#9-1-父子关系" class="headerlink" title="9.1 父子关系"></a>9.1 父子关系</h3><ul><li>传入data用props，</li></ul><p>父传子，在组件上加入对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyButton</span> :title=<span class="string">&quot;mytitle&quot;</span>&gt;&lt;<span class="regexp">/MyButton&gt; /</span>/ 传对象</span><br></pre></td></tr></table></figure><p>子接收</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&#x27;title&#x27;</span>],<span class="comment">// 获取对象</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>传出修改父亲data，用$emit( event（自定义事件）, arg )，允许多参数传入</li></ul><p>子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;change(&#x27;cyx&#x27;)&quot;</span>&gt;改变&lt;/button&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">change</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;changetitle&#x27;</span>,name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><p>父：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyButton</span> :title=<span class="string">&quot;mytitle&quot;</span> @changetitle=<span class="string">&quot;changet&quot;</span>&gt;&lt;/<span class="title class_">MyButton</span>&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">changet</span>(<span class="params">newt</span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">mytitle</span> = newt</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="props"><a href="#props" class="headerlink" title="* props"></a>* props</h4><p>props是组件上的自定义属性，用于向子组件传递信息，可以传递任意数量任意类型的属性。子不能直接修改爹的数据。</p><p>简朴写法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">title</span>:<span class="title class_">String</span>, <span class="comment">// 校验的属性名:类型,如Number String Boolean</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂写法（写成对象来校验）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">title</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span>, <span class="comment">// 类型</span></span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span>, <span class="comment">// 是否必填</span></span><br><span class="line">        <span class="attr">default</span>: <span class="string">&#x27;lzd&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line">        <span class="title function_">default</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">        &#125; <span class="comment">// 如果是对象就return回去</span></span><br><span class="line">        <span class="title function_">validator</span>(<span class="params">value</span>)&#123; <span class="comment">// 自定义校验，返回true或false</span></span><br><span class="line">            <span class="keyword">return</span> ...</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="9-2-兄弟关系"><a href="#9-2-兄弟关系" class="headerlink" title="9.2 兄弟关系"></a>9.2 兄弟关系</h3><p>简易消息传递Event bus总线（复杂场景–&gt;Vuex）</p><ul><li>首先创建一个vue空实例（在util功能目录下）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span> <span class="comment">// 导入包</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Bus</span> = <span class="keyword">new</span> <span class="title class_">Vue</span>() <span class="comment">// 创建空实例</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Bus</span> <span class="comment">// 导出包</span></span><br></pre></td></tr></table></figure><ul><li>给要修改的组件内添加监听这个空实例（订阅消息）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Bus</span> <span class="keyword">from</span> <span class="string">&#x27;../utils/EventBus.js&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">created</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Bus</span>.$on(<span class="string">&#x27;sendMsg&#x27;</span>,<span class="function">(<span class="params">msg</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">msg</span> = msg</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加发送触发事件，传参</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Bus</span> <span class="keyword">from</span> <span class="string">&#x27;../utils/EventBus.js&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">   <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">changeMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Bus</span>.$emit(<span class="string">&#x27;sendMsg&#x27;</span>,<span class="string">&#x27;快来找我玩ssssssss&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-3-provide-inject方法"><a href="#9-3-provide-inject方法" class="headerlink" title="9.3 provide-inject方法"></a>9.3 provide-inject方法</h3><p>实现跨层级共享数据（当我们想让一个父级下的所有子孙都使用这些属性）</p><ul><li>在父级填写</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="title function_">provide</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="attr">color</span>:<span class="variable language_">this</span>.<span class="property">color</span>, <span class="comment">// 普通类型非响应式</span></span><br><span class="line">      <span class="attr">object</span>:<span class="variable language_">this</span>.<span class="property">object</span> <span class="comment">// 复杂类型响应式（推荐）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>在子孙直接使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    ...,</span><br><span class="line">    <span class="attr">inject</span>:[<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;object&#x27;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-4-v-model（固定传值value）"><a href="#9-4-v-model（固定传值value）" class="headerlink" title="9.4 v-model（固定传值value）"></a>9.4 v-model（固定传值value）</h3><p>原理：v-model本质就是v-bind绑定后，通过事件监听封装后的双向绑定</p><p>我们可以借此来进行子组件和父组件的双向绑定</p><ul><li>父级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyB</span> :msg=<span class="string">&quot;msg&quot;</span> @click=<span class="string">&quot;msg=$event&quot;</span>&gt;&lt;/<span class="title class_">MyB</span>&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">MyB</span> <span class="attr">:msg</span>=<span class="string">&quot;msg&quot;</span> @<span class="attr">cg</span>=<span class="string">&quot;msg=$event&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">MyB</span>&gt;</span></span> <span class="comment">// 两个含义相同</span></span><br></pre></td></tr></table></figure><ul><li>子级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;changeMsg&quot;</span>&gt;改变&#123;&#123;msg&#125;&#125;&lt;/button&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&#x27;msg&#x27;</span>],</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title function_">changeMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.$emit(<span class="string">&#x27;cg&#x27;</span>,<span class="string">&#x27;lzd&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（目前形参只能传一个适用）</p><p>简单写法有限制需要监听事件是<strong>input</strong>，因为<code>v-model</code>默认会监听组件触发的<code>input</code>事件，并将传递给该事件的数据作为新值赋给绑定的属性。这是Vue.js的约定。</p><ul><li>父级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyB</span> v-model=<span class="string">&quot;msg&quot;</span>&gt;&lt;/<span class="title class_">MyB</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>子级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&#x27;msg&#x27;</span>],</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title function_">changeMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;lzd&#x27;</span>); <span class="comment">// 使用input事件</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-5-sync修饰符（非固定value）"><a href="#9-5-sync修饰符（非固定value）" class="headerlink" title="9.5 sync修饰符（非固定value）"></a>9.5 sync修饰符（非固定value）</h3><ul><li>父级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyB</span> :msg=<span class="string">&quot;msg&quot;</span> @<span class="attr">update</span>:msg=<span class="string">&quot;msg=$event&quot;</span>&gt;&lt;/<span class="title class_">MyB</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">MyB</span> <span class="attr">:msg</span>=<span class="string">&quot;msg&quot;</span> @<span class="attr">update:msg</span>=<span class="string">&quot;newm=&gt;msg=newm&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">MyB</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">MyB</span> <span class="attr">:msg.sync</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">MyB</span>&gt;</span></span> <span class="comment">// 三个含义相同</span></span><br></pre></td></tr></table></figure><ul><li>子级</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">props</span>:[<span class="string">&#x27;msg&#x27;</span>],</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title function_">changeMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.$emit(<span class="string">&#x27;update:msg&#x27;</span>, <span class="string">&#x27;lzd&#x27;</span>); <span class="comment">// 使用input事件</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-ref-refs"><a href="#10-ref-refs" class="headerlink" title="10. ref&amp;&amp;refs"></a>10. ref&amp;&amp;refs</h2><p>可以用于获取dom元素或者组件实例</p><ol><li>目标组件添加ref属性</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">MyB</span> ref=<span class="string">&quot;My&quot;</span>&gt;&lt;/<span class="title class_">MyB</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;clk&quot;</span>&gt;</span>输出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>恰当时机，通过调用<strong>this.$refs.ref属性名</strong>，获取目标组件，可以调用组件对象里面的方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  ...,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">clk</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">My</span>.<span class="title function_">changeMsg</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样可以取代**document.querySelector()**直接用this.$refs.ref属性名得到dom元素</p><h2 id="11-nextTick函数"><a href="#11-nextTick函数" class="headerlink" title="11. $nextTick函数"></a>11. $nextTick函数</h2><p>当我们要让输入框显示的时候实际上它在队列里等待更新，不会立即渲染出来，所以常规下接<strong>this.$refs.inp.focus()<strong>并不会获取焦点，这是因为异步更新。但是我们可以让他等一下异步更新则用</strong>$nextTick</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-show=<span class="string">&quot;isshow&quot;</span> ref=<span class="string">&quot;ref&quot;</span> @click=<span class="string">&quot;clk&quot;</span>&gt; 输出 &lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;!isshow&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inp&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">export default &#123;</span></span><br><span class="line"><span class="language-xml">  data()&#123;</span></span><br><span class="line"><span class="language-xml">    return&#123;</span></span><br><span class="line"><span class="language-xml">      isshow:true,</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml">  &#125;,</span></span><br><span class="line"><span class="language-xml">  methods: &#123;</span></span><br><span class="line"><span class="language-xml">    clk()&#123;</span></span><br><span class="line"><span class="language-xml">      this.isshow = !this.isshow</span></span><br><span class="line"><span class="language-xml">      this.$nextTick(()=&gt;&#123; // $nextTick</span></span><br><span class="line"><span class="language-xml">        console.log(this)</span></span><br><span class="line"><span class="language-xml">        this.$refs.inp.focus()</span></span><br><span class="line"><span class="language-xml">      &#125;)</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml">  &#125;,</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="12-自定义指令"><a href="#12-自定义指令" class="headerlink" title="12. 自定义指令"></a>12. 自定义指令</h2><h3 id="12-1-全局注册"><a href="#12-1-全局注册" class="headerlink" title="12.1 全局注册"></a>12.1 全局注册</h3><p>在<strong>main.js</strong>中全局注册，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;focus&#x27;</span>,&#123;</span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">el</span>)&#123;</span><br><span class="line">    el.<span class="title function_">focus</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="12-2-局部注册"><a href="#12-2-局部注册" class="headerlink" title="12.2 局部注册"></a>12.2 局部注册</h3><p>在组件中注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  ...,</span><br><span class="line">  <span class="attr">directives</span>:&#123;</span><br><span class="line">    <span class="attr">focus</span>:&#123;</span><br><span class="line">      <span class="title function_">inserted</span>(<span class="params">el</span>)&#123;</span><br><span class="line">        el.<span class="title function_">focus</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>当值修改的时候，仅仅是<strong>inserted</strong>无法更新视图，需要<strong>update</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">color1</span>:<span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">      <span class="attr">color2</span>:<span class="string">&#x27;blue&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">directives</span>:&#123;</span><br><span class="line">    <span class="attr">color</span>:&#123;</span><br><span class="line">      <span class="comment">// 仅仅是提供元素被添加到页面中时的逻辑</span></span><br><span class="line">      <span class="title function_">inserted</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">        el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// update 提供当值变化后，dom更新的逻辑</span></span><br><span class="line">      <span class="title function_">update</span> (el,binding) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;修改！&#x27;</span>)</span><br><span class="line">        el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-插槽"><a href="#13-插槽" class="headerlink" title="13. 插槽"></a>13. 插槽</h2><ul><li>子组件内用<strong>slot</strong>占位，有时候并不需要在插槽中填值，我们可以在<strong>slot</strong>中填入内容将作为<strong>默认值</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;Son1&quot;</span>&gt;</span></span><br><span class="line">        我是头</span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;head&quot;</span> <span class="attr">num</span>=<span class="string">&quot;10&quot;</span> <span class="attr">msg</span>=<span class="string">&quot;测试文本&quot;</span>&gt;</span>我是头和中间<span class="tag">&lt;/<span class="name">slot</span>&gt;</span> 传值时在slot里添加，像是在添加属性名一样</span><br><span class="line">        我是中间</span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;foot&quot;</span>&gt;</span>我是中间和尾巴<span class="tag">&lt;/<span class="name">slot</span>&gt;</span> // 当有多个slot时用name属性区分</span><br><span class="line">        我是尾巴</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>父组件就可以直接使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">MySon1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;<span class="name">template</span> #<span class="attr">head</span>=<span class="string">&quot;content&quot;</span>&gt;</span> // 对应占位名字，直接可以获得内容，content是形参，随便定义，一个slot时为default</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head&quot;</span> &gt;</span>&#123;&#123;content.num&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;<span class="name">template</span> #<span class="attr">foot</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot&quot;</span>&gt;</span>foot<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">MySon1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>组件之间需要传值</p><h2 id="14-Router路由-Vue2"><a href="#14-Router路由-Vue2" class="headerlink" title="14. Router路由(Vue2)"></a>14. Router路由(Vue2)</h2><h3 id="14-1-路由基础"><a href="#14-1-路由基础" class="headerlink" title="14.1 路由基础"></a>14.1 路由基础</h3><p>路径和组件的映射关系</p><h4 id="基础步骤"><a href="#基础步骤" class="headerlink" title="* 基础步骤"></a>* 基础步骤</h4><p>首先在项目里配置，vue3将用router4版本</p><blockquote><p>npm add <a href="mailto:&#x76;&#117;&#101;&#x2d;&#114;&#x6f;&#117;&#116;&#x65;&#114;&#64;&#51;&#46;&#54;&#x2e;&#x35;">&#x76;&#117;&#101;&#x2d;&#114;&#x6f;&#117;&#116;&#x65;&#114;&#64;&#51;&#46;&#54;&#x2e;&#x35;</a></p></blockquote><p>然后在main.js里配置插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span> <span class="comment">// 引入</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>) <span class="comment">// 安装注册</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>() <span class="comment">// 创建路由对象</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router <span class="comment">// 注入建立关联</span></span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>url出现&#x2F;#&#x2F;则表示成功</p><h4 id="核心步骤"><a href="#核心步骤" class="headerlink" title="* 核心步骤"></a>* 核心步骤</h4><p>创建<strong>views</strong>目录在里面添加路由组件，然后再<strong>main.js</strong>中配规则</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Find</span> <span class="keyword">from</span> <span class="string">&#x27;./views/Find.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">My</span> <span class="keyword">from</span> <span class="string">&#x27;./views/My.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Friend</span> <span class="keyword">from</span> <span class="string">&#x27;./views/Friend.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>:[ <span class="comment">//路由规则们</span></span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/find&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Find</span>&#125;, <span class="comment">// route一条规则有路径path和组件component</span></span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/My&#x27;</span>,<span class="attr">component</span>: <span class="title class_">My</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/Friend&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Friend</span>&#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>准备导航链接，配置路由出口（匹配的组件展示的位置）</p><p>在需要切换的组件页面类似于：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer_wrap&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#/find&quot;</span>&gt;</span>发现音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="comment">&lt;!-- 配置路径 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#/my&quot;</span>&gt;</span>我的音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  <span class="comment">&lt;!-- 配置路径 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#/friend&quot;</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  <span class="comment">&lt;!-- 配置路径 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="comment">&lt;!-- 路由出口,想在哪里显示就放在哪里 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组件分类问题</p><ul><li><strong>src&#x2F;views</strong>：页面组件 – 页面展示 – 配合路由用</li><li><strong>src&#x2F;components</strong>：复用组件 – 展示数据 – 常用于复用</li></ul><h3 id="14-2-路由进阶"><a href="#14-2-路由进阶" class="headerlink" title="14.2 路由进阶"></a>14.2 路由进阶</h3><p>为了便于维护，新建一个<strong>router</strong>文件夹里存<strong>index.js</strong>，同时可以使<strong>main.js</strong>变得更加干净整洁，只需要导入就行</p><ul><li><strong>router&#x2F;index.js</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Find</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Find.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">My</span> <span class="keyword">from</span> <span class="string">&#x27;../views/My.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Friend</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Friend.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>:[</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/find&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Find</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/My&#x27;</span>,<span class="attr">component</span>: <span class="title class_">My</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">&#x27;/Friend&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Friend</span>&#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// export &#123; router &#125;</span></span><br><span class="line"><span class="comment">// export default router</span></span><br></pre></td></tr></table></figure><ul><li><strong>main.js</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;router&#125; <span class="keyword">from</span> <span class="string">&#x27;./router/index.js&#x27;</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="router-link声明式导航"><a href="#router-link声明式导航" class="headerlink" title="* router-link声明式导航"></a>* router-link声明式导航</h4><p><strong>&lt;router-link *to*&#x3D;””&gt;<strong>来代替a标签，用to来接收路径并且可以省去#，最大</strong>优点</strong>是自动添加一个激活类名，可以帮助高亮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer_wrap&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/find&quot;</span>&gt;</span>发现音乐<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/my&quot;</span>&gt;</span>我的音乐<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/friend&quot;</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.footer_wrap</span> <span class="selector-tag">a</span><span class="selector-class">.router-link-exact-active</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#654ba4</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125; // router-link-exact-active 自动给一个类</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>有两个类名：</p><ol><li><p><strong>router-link-exact-active</strong>：精确匹配，&#x2F;find会高亮，在二级嵌套时&#x2F;find&#x2F;one则不会高亮</p></li><li><p><strong>router-link-active</strong>：模糊匹配，&#x2F;find会高亮，在二级嵌套时&#x2F;find&#x2F;one也会高亮</p></li><li><p>当然我们可以自定义</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[...],</span><br><span class="line">    <span class="attr">linkActiveClass</span>:<span class="string">&#x27;active&#x27;</span>, <span class="comment">// 自定义模糊</span></span><br><span class="line">    <span class="attr">linkExactActiveClass</span>:<span class="string">&#x27;exactactive&#x27;</span> <span class="comment">// 自定义精确</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="* 嵌套路由"></a>* 嵌套路由</h4><ol><li><p>编写<code>News</code>的子路由：<code>Detail.vue</code></p></li><li><p>配置路由规则，使用<code>children</code>配置项：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">        ....,</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li></li></ol><h4 id="声明式导航，传参"><a href="#声明式导航，传参" class="headerlink" title="* 声明式导航，传参"></a>* 声明式导航，传参</h4><ol><li><strong>查询参数传参</strong>（适合多个参数传参）：在链接后面加查询参数，</li></ol><ul><li>语法格式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=<span class="string">&quot;/friend?key=我的朋友&quot;</span>&gt;我的朋友&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><ul><li>查询：**$route.query.参数名**</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;&#123;&#123;$route.<span class="property">query</span>.<span class="property">key</span>&#125;&#125;&lt;<span class="regexp">/span&gt; /</span>/ 直接用</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;FindMusic&#x27;</span>,</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">key</span>) <span class="comment">// js中需要用this</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>动态路由传参</strong>（适合单个参数传参）：是必选的，如果不传就不会匹配到，可以选择在跳转路由后面加空格&#x2F; ，也可以在**&#x2F;:参数名？**后面加？</li></ol><ul><li><strong>配置路由</strong>：设置为**&#x2F;:words**</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        &#123;<span class="attr">path</span>:<span class="string">&#x27;/find/:key&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Find</span>&#125;,</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> &#123; router &#125;</span><br></pre></td></tr></table></figure><ul><li>跳转语法格式，直接写&#x2F;</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/find/发现音乐&quot;&gt;发现音乐&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><ul><li>查询：**$route.params.参数名**</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;&#123;&#123;$route.<span class="property">params</span>.<span class="property">key</span>&#125;&#125;&lt;/span&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;FindMusic&#x27;</span>,</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">key</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="重定向"><a href="#重定向" class="headerlink" title="* 重定向"></a>* 重定向</h4><p>当一开始进入页面时也有可能是空的，需要自动跳转到某一页，可以使用重定向<strong>redirect</strong>，配置路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,<span class="attr">redirect</span>:<span class="string">&#x27;/find/我的发现&#x27;</span>&#125;,</span><br></pre></td></tr></table></figure><h4 id="404"><a href="#404" class="headerlink" title="* 404"></a>* 404</h4><p>在所有的路径后配这个，在搜索不到时会有这个页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;path:&#x27;*&#x27;,component: NotFind&#125;,</span><br></pre></td></tr></table></figure><h4 id="模式设置"><a href="#模式设置" class="headerlink" title="* 模式设置"></a>* 模式设置</h4><p><strong>hash路由</strong>（默认）：<a href="http://localhost:8080/#/find">http://localhost:8080/#/find</a></p><p><strong>history路由</strong>（常用）：<a href="http://localhost:8080/find">http://localhost:8080/find</a></p><p>在配置中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[...],</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;history&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="路由跳转方式（router！！！）"><a href="#路由跳转方式（router！！！）" class="headerlink" title="* 路由跳转方式（router！！！）"></a>* 路由跳转方式（router！！！）</h4><ol><li><strong>路径跳转</strong>：</li></ol><p></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">goother</span>(<span class="params"></span>)&#123; <span class="comment">// 添加点击事件</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/my/我的音乐&#x27;</span>) <span class="comment">//跳向对应的路由，在此页面不可重复跳转</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="comment">// 查询参数传参</span></span><br><span class="line">          <span class="attr">url</span>:<span class="string">&#x27;/my/我的音乐&#x27;</span> </span><br><span class="line">          <span class="attr">query</span>:&#123;</span><br><span class="line">          参数<span class="number">1</span>:value1,</span><br><span class="line">          参数<span class="number">2</span>:value2,</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;) </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/my/$&#123;value1&#125;/$&#123;value2&#125;&#x27;</span>)  <span class="comment">// 动态传参</span></span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>名字跳转</strong>（适合路径名长的场景）：</li></ol><ul><li>添加名字</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">name</span>:<span class="string">&#x27;hahah&#x27;</span>,<span class="attr">path</span>:<span class="string">&#x27;/find/:key?&#x27;</span>,<span class="attr">component</span>: <span class="title class_">Find</span>&#125;,</span><br></pre></td></tr></table></figure><ul><li>跳转</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">goother</span>(<span class="params"></span>)&#123; <span class="comment">// 添加点击事件</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="comment">// 查询参数传参</span></span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;hahah&#x27;</span> </span><br><span class="line">          <span class="attr">query</span>:&#123;</span><br><span class="line">          参数<span class="number">1</span>:value1,</span><br><span class="line">          参数<span class="number">2</span>:value2,</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;)  </span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="comment">// 查询参数传参</span></span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;hahah&#x27;</span> </span><br><span class="line">          <span class="attr">params</span>:&#123;</span><br><span class="line">          参数<span class="number">1</span>:value1,</span><br><span class="line">          参数<span class="number">2</span>:value2,</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;) </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="路由守卫"><a href="#路由守卫" class="headerlink" title="* 路由守卫"></a>* 路由守卫</h4><ul><li><strong>全局</strong></li></ul><ol><li><strong>beforeEach</strong>（全局前置）：每一个路由跳转前都需要经过这个，当我们需要满足某些情况时才访问这个路由，比如对应的学校才能访问这个路由时需要。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123; <span class="comment">// to是到哪个路由，to是来自哪个路由，next()函数表示通行，满足条件则通行</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(to,<span class="keyword">from</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">from</span>.<span class="property">path</span> === <span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>补充：我们也可以给每个路由<strong>meta</strong>属性里添加对象，用来判断这个路由是不是需要<strong>beforeEach</strong>，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [&#123;..., <span class="attr">meta</span>:&#123;<span class="attr">istrue</span>:<span class="literal">true</span>&#125;  &#125;]   </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>afterEach</strong>没有<strong>next</strong>，直接跳转走了，用处不多，例如只有在跳转后才改变<strong>document.title</strong>时适用这个</li></ol><ul><li><strong>独享</strong></li></ul><p>前置独享守卫：<strong>beforeEnter</strong>；没有后置独享守卫</p><ul><li><strong>组件</strong></li></ul><p>前置组件守卫：<strong>beforeRouteEnter</strong>，后置组件守卫<strong>beforeRouteLeave</strong></p><h4 id="路由缓存（vue3）"><a href="#路由缓存（vue3）" class="headerlink" title="* 路由缓存（vue3）"></a>* 路由缓存（vue3）</h4><p>基本使用，会保留原来的数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">KeepAlive</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;activeComponent&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">KeepAlive</span>&gt;</span><br></pre></td></tr></table></figure><p>如果想要条件性地被 <strong>KeepAlive</strong>&#96;缓存，就必须显式声明一个 <strong>name</strong> 选项。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 以英文逗号分隔的字符串 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">KeepAlive</span> <span class="attr">include</span>=<span class="string">&quot;a,b&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;view&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">KeepAlive</span>&gt;</span></span></span><br><span class="line">&lt;!-- 数组 (需使用 <span class="string">`v-bind`</span>) --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">KeepAlive</span> <span class="attr">:include</span>=<span class="string">&quot;[&#x27;a&#x27;, &#x27;b&#x27;]&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;view&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">KeepAlive</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="15-Vuex状态管理"><a href="#15-Vuex状态管理" class="headerlink" title="15. Vuex状态管理"></a>15. Vuex状态管理</h2><p>受不了了真勾吧多，建议直接去看最下面的<strong>pinia</strong></p><hr><hr><h1 id="Vue3（组合式api）"><a href="#Vue3（组合式api）" class="headerlink" title="Vue3（组合式api）"></a>Vue3（组合式api）</h1><p>更容易维护，更快速度，更小体积，更优数据响应</p><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h2><blockquote><p>npm init vue@latest</p></blockquote><blockquote><p>pnpm create vue</p></blockquote><h2 id="2-template小操作"><a href="#2-template小操作" class="headerlink" title="2. template小操作"></a>2. template小操作</h2><p>比如这种操作，为了防止<strong>ul</strong>和<strong>li</strong>布局打乱，可以使用<strong>template</strong>，在循环之后<strong>template</strong>并不会显示会消失</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;item.msg&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;&#123;item.msg&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h2 id="3-Set-up"><a href="#3-Set-up" class="headerlink" title="3. Set up"></a>3. Set up</h2><p>也是生命周期函数，在beforeCreate钩子之前自动执行，也要定义函数setup()，然后以对象方式return数据从而使其能被调用，但是太麻烦了这样</p><p>所以我们语法糖封装更好使用，之后则不能使用this因为时间线太早还未创建Vue对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt; &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-ref-reactive"><a href="#4-ref-reactive" class="headerlink" title="4. ref&amp;reactive"></a>4. ref&amp;reactive</h2><h3 id="4-1-生成响应式数据"><a href="#4-1-生成响应式数据" class="headerlink" title="4.1 生成响应式数据"></a>4.1 生成响应式数据</h3><p>在vue中本身都不是响应式的，需要生成响应式数据</p><ol><li>ref函数可以返回简单或复杂类型的数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">let</span> obj = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">count</span>:<span class="number">100</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">10</span></span><br><span class="line">&#125;) <span class="comment">// 返回的是一个响应式对象，会在外面“包一层”，所以脚本里要用count.value获取值</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">getc</span> = (<span class="params"></span>) =&gt; &#123;  obj.<span class="property">value</span>.<span class="property">count</span>++  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  &#123;&#123;count&#125;&#125; // 注意在模板中自动脱一层，可以直接写count</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getc&quot;</span>&gt;</span>佳佳<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>reactive函数只可以用于返回复杂类型</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">count</span>:<span class="number">100</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">10</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">getc</span> = (<span class="params"></span>) =&gt; &#123; obj.<span class="property">count</span>++ &#125;<span class="comment">// 不需要写成obj.value.count</span></span><br></pre></td></tr></table></figure><p>推荐使用ref，既可以用于简单也可以用于复杂类型</p><h3 id="4-2-defineExpose借用ref"><a href="#4-2-defineExpose借用ref" class="headerlink" title="4.2 defineExpose借用ref"></a>4.2 <strong>defineExpose</strong>借用ref</h3><p>子属性暴露给父的元素</p><ul><li>子，要调用<strong>defineExpose</strong>来让自己的属性暴露，才能让父访问到这个数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">const</span> b = <span class="title function_">ref</span>(<span class="number">2</span>)</span><br><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  a,</span><br><span class="line">  b</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>父，因为setup时间非常早，所以要在mounted后使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Son</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/Son.vue&#x27;</span></span><br><span class="line"><span class="keyword">let</span> son = <span class="title function_">ref</span>(<span class="literal">null</span>) <span class="comment">// 要先声明</span></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(son.<span class="property">value</span>.<span class="property">a</span>) &#125;)  <span class="comment">// 用子元素的暴露的属性</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">Son</span> <span class="attr">ref</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Son</span>&gt;</span>&#123;&#123;cnt&#125;&#125; // 要给传进来的组件一个ref变量值，才能用子元素的暴露的属性</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="5-computed计算属性"><a href="#5-computed计算属性" class="headerlink" title="5. computed计算属性"></a>5. computed计算属性</h2><p>导入后改写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;computed&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> plusOne = <span class="title function_">computed</span>(&#123;</span><br><span class="line">  <span class="attr">get</span>: <span class="function">() =&gt;</span> count.<span class="property">value</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="attr">set</span>: <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">    count.<span class="property">value</span> = val - <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">plusOne.<span class="property">value</span> = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(count.<span class="property">value</span>) <span class="comment">// 0</span></span><br></pre></td></tr></table></figure><h2 id="6-watch监听"><a href="#6-watch监听" class="headerlink" title="6. watch监听"></a>6. watch监听</h2><p>简朴写法，直接传不需要.value，就是传ref对象的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">watch</span>([num,name],<span class="function">(<span class="params">[newnum,newname],[oldnum,oldname]</span>)=&gt;</span>&#123; <span class="comment">// 也可以写成 (newn,oldn)  [1, &#x27;lzd&#x27;] ，[0, &#x27;lzd&#x27;]</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(newnum,oldnum) <span class="comment">// 新</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(newname,oldname) <span class="comment">// 旧  分开输出</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>复杂写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = <span class="title function_">ref</span>(&#123; <span class="attr">num</span>:<span class="number">0</span>, <span class="attr">name</span>:<span class="string">&#x27;lzd&#x27;</span>&#125;)</span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>obj.<span class="property">value</span>.<span class="property">name</span>,<span class="function">(<span class="params">newn,oldn</span>)=&gt;</span>&#123; <span class="comment">// 如果只想监视对象里的某个值需要这样写return那个值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(newn,oldn)</span><br><span class="line">&#125;,&#123; <span class="comment">// 再加个括号里写属性</span></span><br><span class="line">  <span class="attr">deep</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="7-生命周期函数"><a href="#7-生命周期函数" class="headerlink" title="7. 生命周期函数"></a>7. 生命周期函数</h2><p>组合式API的生命周期函数：<strong>setup</strong>，<strong>onBeforeMount</strong>，<strong>onMounted</strong>，<strong>onBeforeUpdate</strong>，<strong>onUpdated</strong>，<strong>onBeforeUnmount</strong>，<strong>onUnmounted</strong>（销毁Unmounted）</p><h2 id="8-组件通信"><a href="#8-组件通信" class="headerlink" title="8. 组件通信"></a>8. 组件通信</h2><p>组合式API下，不需要写components就可以直接调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Son</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/Son.vue&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="8-1-父子关系"><a href="#8-1-父子关系" class="headerlink" title="8.1 父子关系"></a>8.1 父子关系</h3><ol><li>父传子</li></ol><ul><li>父亲不变</li><li>子需要用<strong>defineProps</strong>（不需要导入）编译器宏，</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="title class_">String</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(props.<span class="property">name</span>) <span class="comment">// 在脚本中应该这样写</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        儿子：&#123;&#123;name&#125;&#125; // 模板中不需要写props</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>子传父</li></ol><ul><li>父不变</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">change1</span> = (<span class="params">newn</span>) =&gt; &#123; obj.<span class="property">value</span>.<span class="property">name</span> = newn &#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change2</span> = (<span class="params">newn</span>) =&gt; &#123; obj.<span class="property">value</span>.<span class="property">name</span> = newn &#125;</span><br><span class="line">&lt;template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  父亲：&#123;&#123;obj.name&#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">Son</span> <span class="attr">:name</span>=<span class="string">&quot;obj.name&quot;</span> @<span class="attr">change1</span>=<span class="string">&quot;change1&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  @<span class="attr">change2</span>=<span class="string">&quot;change2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Son</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ul><li>子，需要用到：<strong>defineEmits</strong>（不需要导入）声明</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;change1&#x27;</span>,<span class="string">&#x27;change2&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change1</span> = (<span class="params"></span>) =&gt; &#123; <span class="title function_">emit</span>(<span class="string">&#x27;change1&#x27;</span>,<span class="string">&#x27;lzd&#x27;</span>) &#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change2</span> = (<span class="params"></span>) =&gt; &#123; <span class="title function_">emit</span>(<span class="string">&#x27;change2&#x27;</span>,<span class="string">&#x27;hhh&#x27;</span>) &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 儿子：&#123;&#123;name&#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change1&quot;</span>&gt;</span>change1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change2&quot;</span>&gt;</span>change2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="8-2-provide-inject方法"><a href="#8-2-provide-inject方法" class="headerlink" title="8.2 provide-inject方法"></a>8.2 provide-inject方法</h3><ol><li>爷传孙</li></ol><ul><li>爷用provide（‘key‘，顶层数据）一次只能提供一个数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> cnt = <span class="title function_">ref</span>(<span class="number">10</span>)</span><br><span class="line"><span class="title function_">provide</span>(</span><br><span class="line">  <span class="string">&#x27;cnt&#x27;</span>,cnt</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>子，key值必须相同</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="title function_">inject</span>(<span class="string">&#x27;cnt&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="property">value</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>孙传爷</li></ol><ul><li>爷用provide（‘key‘，顶层数据）传递一个函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">provide</span>(<span class="string">&#x27;changecnt&#x27;</span>,<span class="function">(<span class="params">newcnt</span>)=&gt;</span>&#123; cnt.<span class="property">value</span> = newcnt &#125;)</span><br></pre></td></tr></table></figure><ul><li>子用爷的函数改爷的数据，实际控制权还是爷</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> changenum = <span class="title function_">inject</span>(<span class="string">&#x27;changecnt&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">change2</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="property">value</span>)</span><br><span class="line">    <span class="title function_">changenum</span>(<span class="number">1000</span>) </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="property">value</span>) &#125;</span><br></pre></td></tr></table></figure><h2 id="9-defineOptions"><a href="#9-defineOptions" class="headerlink" title="9. defineOptions"></a>9. defineOptions</h2><p>用了<script setup>之后，平级的props、emits等都没法添加，虽然添加了宏，但是name或其他自定义属性就没法用，得回归原始写法再加个script标签</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineOptions</span>(&#123; <span class="attr">name</span>:<span class="string">&#x27;registerindex&#x27;</span> &#125;)</span><br></pre></td></tr></table></figure><h2 id="10-v-model"><a href="#10-v-model" class="headerlink" title="10. v-model"></a>10. v-model</h2><p>仅使用一次在一个组件内</p><ul><li>父</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Son</span> v-model=<span class="string">&quot;cnt&quot;</span> &gt;&lt;/<span class="title class_">Son</span>&gt;&#123;&#123;cnt&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>子，引入<strong>defineModel</strong>，补上代码后，则可以任意修改<br><strong>”这个元素“</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> model = <span class="title function_">defineModel</span>()</span><br></pre></td></tr></table></figure><h2 id="11-Pinia状态管理"><a href="#11-Pinia状态管理" class="headerlink" title="11. Pinia状态管理"></a>11. Pinia状态管理</h2><p>手动添加时： <strong>npm install pinia</strong>，然后再main.js文件中加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createPinia&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(pinia).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>) <span class="comment">// 将其挂载上去</span></span><br></pre></td></tr></table></figure><p>都需要先新建一个store文件夹管理，导入**import {defineStore} from 'pinia'**，并且暴露所有的内容（return）</p><h3 id="11-1-同步管理"><a href="#11-1-同步管理" class="headerlink" title="11.1 同步管理"></a>11.1 同步管理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;ref,computed&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>,<span class="function">()=&gt;</span>&#123; <span class="comment">//(仓库的唯一表示不可乱写，()=&gt;&#123;&#125;)</span></span><br><span class="line">    <span class="keyword">const</span> cnt = <span class="title function_">ref</span>(<span class="number">10</span>)</span><br><span class="line">    <span class="comment">// 声明操作数据的方法action函数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">addcnt</span> = (<span class="params"></span>) =&gt; cnt.<span class="property">value</span>++</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">subcnt</span> = (<span class="params"></span>) =&gt; cnt.<span class="property">value</span>--</span><br><span class="line">    <span class="comment">// 声明基于数据派生的计算属性 getters（computed）</span></span><br><span class="line">    <span class="keyword">const</span> double = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> cnt.<span class="property">value</span> * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">        cnt,</span><br><span class="line">        subcnt,</span><br><span class="line">        addcnt,</span><br><span class="line">        double</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在App.vue中需要引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Son1</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/Son1.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useCounterStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/counter.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> counterStore = <span class="title function_">useCounterStore</span>()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    我是父亲：&#123;&#123;counterStore.cnt&#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Son1</span>&gt;</span><span class="tag">&lt;/<span class="name">Son1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>组件Son1.vue中需要引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useCounterStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/counter.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> counterStore = <span class="title function_">useCounterStore</span>()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    我是Son1:&#123;&#123;counterStore.cnt&#125;&#125; - &#123;&#123;counterStore.double&#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;counterStore.addcnt&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;counterStore.subcnt&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="11-2-异步操作（action也接受异步）"><a href="#11-2-异步操作（action也接受异步）" class="headerlink" title="11.2 异步操作（action也接受异步）"></a>11.2 异步操作（action也接受异步）</h3><ul><li>pinia中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useChannelStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;channel&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="title function_">ref</span>([])</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">getList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;<span class="attr">data</span>:&#123;data&#125;&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://geek.itheima.net/v1_0/channels&#x27;</span>)</span><br><span class="line">        list.<span class="property">value</span> = data.<span class="property">channels</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(list.<span class="property">value</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">        list,</span><br><span class="line">        getList</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>App.vue中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Son1</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/Son1.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;useChannelStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/channel.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> channelStore = <span class="title function_">useChannelStore</span>()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    我是父亲：&#123;&#123;counterStore.cnt&#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Son1</span>&gt;</span><span class="tag">&lt;/<span class="name">Son1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;channelStore.getList&quot;</span>&gt;</span>得到属性<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in channelStore.list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;-&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：虽然useChannelStore这些都是对象，但是不能直接解构，会丢失响应性，这就好像是对props解构，代表仅仅是声明了值。并且store是用reactive包装的对象，不需要在getters后面写value</p><p>所以我们需要使用<strong>storeToRefs</strong>借助解构来添加响应式的引用来包装，而函数不需要<strong>storeToRefs</strong>，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;storeToRefs&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;useCounterStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/counter.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> counterStore = <span class="title function_">useCounterStore</span>()</span><br><span class="line"><span class="keyword">let</span> &#123;cnt&#125; = <span class="title function_">storeToRefs</span>(counterStore)</span><br></pre></td></tr></table></figure><p>（两种写法取决于实际场景）</p><h2 id="12-Router路由-Vue3"><a href="#12-Router路由-Vue3" class="headerlink" title="12. Router路由(Vue3)"></a>12. Router路由(Vue3)</h2><p>在vue3中采用router4，配置时：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>), <span class="comment">// createWebHistory就是曾经的mode=history，没有#；import.meta.env.BASE_URL是vite.config.js中的base配置项,可以自己配置路径变量</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>在页面中用时：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoute,useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>() <span class="comment">// useRouter路由对象</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>() <span class="comment">// useRoute路由参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="13-pinia-plugin-persistedstate持久化插件！！！"><a href="#13-pinia-plugin-persistedstate持久化插件！！！" class="headerlink" title="13. pinia-plugin-persistedstate持久化插件！！！"></a>13. pinia-plugin-persistedstate持久化插件！！！</h2><p>先安装到本地</p><blockquote><p>npm i pinia-plugin-persistedstate</p></blockquote><p>再配置到main.js里配置全局</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;createPinia&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> persist <span class="keyword">from</span> <span class="string">&#x27;pinia-plugin-persistedstate&#x27;</span> <span class="comment">// 插件</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(pinia.<span class="title function_">use</span>(persist)).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>基础在需要store文件夹里需要持久化的数据里，在下一项里写</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>,<span class="function">() =&gt;</span> &#123; ..., &#125;, &#123; <span class="attr">persist</span>:<span class="literal">true</span> <span class="comment">// 开启持久化 &#125;)</span></span><br></pre></td></tr></table></figure><p>可以补充</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>,<span class="function">() =&gt;</span> &#123; ..., &#125;, &#123; <span class="attr">persist</span>:&#123;</span><br><span class="line">    <span class="attr">key</span>:<span class="string">&#x27;cyx&#x27;</span>, <span class="comment">// 改变存储名字key</span></span><br><span class="line">    <span class="attr">paths</span>:[<span class="string">&#x27;cnt&#x27;</span>] <span class="comment">// 表示需要存储的值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;) <span class="comment">// 默认存储到localstorage</span></span><br></pre></td></tr></table></figure><p>还有很多可以到官网看<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/</a></p><h2 id="14-unplugin-auto-import自动导入插件"><a href="#14-unplugin-auto-import自动导入插件" class="headerlink" title="14. unplugin-auto-import自动导入插件"></a>14. unplugin-auto-import自动导入插件</h2><p>安装</p><blockquote><p>pnpm install unplugin-auto-import</p></blockquote><p>然后在<strong>vite-config.js</strong>文件中配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span>; <span class="comment">// 自动导入插件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123; <span class="comment">// 自动导入插件</span></span><br><span class="line">      <span class="attr">imports</span>:[</span><br><span class="line">        <span class="string">&#x27;vue&#x27;</span>, <span class="comment">//导入vue</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;)  </span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="15-基于husky的代码检查工作流"><a href="#15-基于husky的代码检查工作流" class="headerlink" title="15. 基于husky的代码检查工作流"></a>15. 基于husky的代码检查工作流</h2><p>husky是一个git hooks的工具</p><p><strong>husky配置</strong></p><ol><li>初始化husky工具配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pnpm add --save-dev husky // 安装</span><br><span class="line">pnpm exec husky init // 更新 package.json 中的 prepare 脚本</span><br></pre></td></tr></table></figure><ol start="2"><li>修改.husky/pre-commit文件，将<code>npm test</code>换成<code>pnpm list</code></li></ol><h2 id="16-Element-Plus组件库"><a href="#16-Element-Plus组件库" class="headerlink" title="16. Element-Plus组件库"></a>16. Element-Plus组件库</h2><p>网页<a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></p><p>建议查看文档按需导入，可以实现自动导入组件的效果</p><h2 id="17-富文本编辑器-vue-quill"><a href="#17-富文本编辑器-vue-quill" class="headerlink" title="17. 富文本编辑器 [ vue-quill ]"></a>17. 富文本编辑器 [ vue-quill ]</h2><p>官网地址：<a href="https://vueup.github.io/vue-quill/">https://vueup.github.io/vue-quill/</a></p><ol><li>安装包</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add @vueup/vue-quill@latest</span><br></pre></td></tr></table></figure><ol start="2"><li>注册成局部组件</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">QuillEditor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueup/vue-quill&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@vueup/vue-quill/dist/vue-quill.snow.css&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面中使用绑定</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">quill-editor</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">theme</span>=<span class="string">&quot;snow&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model:content</span>=<span class="string">&quot;formModel.content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">contentType</span>=<span class="string">&quot;html&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>样式美化</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">editor</span> &#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="number">100</span>%;</span><br><span class="line">  :<span class="title function_">deep</span>(<span class="params">.ql-editor</span>) &#123;</span><br><span class="line">    min-<span class="attr">height</span>: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初入Uni-app！！！</title>
      <link href="/2024/09/12/Uni-app/"/>
      <url>/2024/09/12/Uni-app/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Uni-app"><a href="#Uni-app" class="headerlink" title="Uni-app"></a>Uni-app</h1><p><a href="https://uniapp.dcloud.net.cn/%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E4%BC%9A%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8E%BB%E5%AE%98%E7%BD%91%E6%9F%A5">https://uniapp.dcloud.net.cn/有什么不会一定要去官网查</a></p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><ol><li><p><strong>view</strong>类似于<strong>div</strong></p></li><li><p><strong>text</strong>类似于<strong>span</strong></p></li><li><p><strong>scroll-view</strong>：表示一个可滚动区域</p></li></ol><ul><li><strong>scroll-y</strong>则代表可以上下滚动</li><li><strong>scroll-x</strong>则代表可以左右滚动，需要view变成行内块元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view scroll-x <span class="keyword">class</span>=<span class="string">&quot;scrollView&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>ssssssss<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span> <span class="comment">//乘15个</span></span><br><span class="line">&lt;/scroll-view&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.box</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">background-color</span>: <span class="number">#6c4fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">display</span>: inline-block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.scrollView</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">height</span>: <span class="number">200px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">white-space</span>: nowrap; // 不换行，控制空白部分的布局</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>swiper</strong>用于轮播图，<a href="https://www.swiper.com.cn/%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E4%B9%9F%E5%8F%AF%E7%94%A8%E4%BA%8E%E5%86%99%E8%BD%AE%E6%92%AD%E5%9B%BE">https://www.swiper.com.cn/这个网站也可用于写轮播图</a></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span> <span class="attr">changing-class</span> <span class="attr">autoplay</span> <span class="attr">indicator-color</span>=<span class="string">&#x27;#ff9c23&#x27;</span> <span class="attr">indicator-active-color</span>=<span class="string">&#x27;#0055ff&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span>33333<span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">swiper-item&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">width</span>: <span class="number">100vw</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">height</span>: <span class="number">40vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">background-color</span>: <span class="number">#b2ff82</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n)&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="attribute">background-color</span>: <span class="number">#478eff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="5"><li><strong>image</strong>用来上传图片，主要是mode属性，<a href="https://uniapp.dcloud.net.cn/component/image.html#image%EF%BC%8C%E5%8E%BB%E5%AE%98%E7%BD%91%E6%9F%A5%E6%80%8E%E4%B9%88%E7%94%A8">https://uniapp.dcloud.net.cn/component/image.html#image，去官网查怎么用</a></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;../../static/logo.png&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;heightFix&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li><strong>navigator</strong>用来路由和页面跳转</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;navigator url=<span class="string">&#x27;/pages/demo1/demo1&#x27;</span> open-type=<span class="string">&#x27;reLaunch&#x27;</span>&gt;hahh&lt;/navigator&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li><p><strong>button</strong>和<strong>input</strong>都基本与js一致，在手机app上还可以设置confirm-type 来表示弹出软键盘的右下角按钮的文字。</p></li><li><p><strong>checkbox</strong>要添加属性等则需要<strong>checkbox-group</strong></p></li></ol><h2 id="Vue部分语法修改"><a href="#Vue部分语法修改" class="headerlink" title="Vue部分语法修改"></a>Vue部分语法修改</h2><h3 id="页面生命周期函数"><a href="#页面生命周期函数" class="headerlink" title="页面生命周期函数"></a>页面生命周期函数</h3><ol><li><strong>onLoad</strong>类似于<strong>setup</strong>，最重要的是可以返回页面搜索值：？name&#x3D;lzd&amp;age&#x3D;18这种的</li><li><strong>onReady</strong>类似于<strong>onmounted</strong>，都是dom元素准备好后的函数</li><li><strong>onShow</strong>，从其他页面回到这个页面时会触发，不同于<strong>onLoad</strong>，因为他已经加载好</li><li><strong>onHide</strong>，离开页面触发</li><li><strong>onPageScroll</strong>是页面滚动触发</li><li>还有很多生命周期函数</li></ol><h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h2><ol><li><strong>vw</strong>和<strong>vh</strong>分别是可视的宽高</li><li><strong>px</strong>是像素</li><li><strong>rpx</strong>可以根据屏幕宽度进行动态换算，默认情况下 1 rpx 等于 1&#x2F;750 屏幕宽度。这意味着，<code>rpx</code> 单位能够根据设备的屏幕宽度自动调整，从而实现跨设备的适配。在 uni-app 中设置一个元素的宽度为 <code>100rpx</code>，这个元素在屏幕宽度为 750 像素的设备上会显示为 100 像素宽。如果设备屏幕宽度增加到 1500 像素，那么这个元素将显示为 200 像素宽。</li></ol><h2 id="引用CSS"><a href="#引用CSS" class="headerlink" title="引用CSS"></a>引用CSS</h2><p>使用<code>@import</code>语句可以导入外联样式表，<code>@import</code>后跟需要导入的外联样式表的相对路径，用<code>;</code>表示语句结束。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@import</span> <span class="string">&quot;../../common/uni.css&quot;</span>;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.uni-card</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pages-json页面路由"><a href="#pages-json页面路由" class="headerlink" title="pages.json页面路由"></a>pages.json页面路由</h2><p><a href="https://uniapp.dcloud.net.cn/collocation/pages.html%EF%BC%8C%E5%8C%85%E5%90%AB%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%EF%BC%8C%E8%83%8C%E6%99%AF%EF%BC%8C%E5%AD%97%E4%BD%93%E7%AD%89">https://uniapp.dcloud.net.cn/collocation/pages.html，包含下拉刷新，背景，字体等</a></p><h2 id="交互反馈"><a href="#交互反馈" class="headerlink" title="交互反馈"></a>交互反馈</h2><p>可以提供成功错误等的反馈，可以参考文档：<a href="https://uniapp.dcloud.net.cn/api/ui/prompt.html#showtoast">https://uniapp.dcloud.net.cn/api/ui/prompt.html#showtoast</a></p><h2 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h2><p>**uni.request(OBJECT)**，可以看作是 <code>Ajax</code> 请求的现代版本。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://www.example.com/request&#x27;</span>, </span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;uni.request&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;custom-header&#x27;</span>: <span class="string">&#x27;hello&#x27;</span> <span class="comment">//自定义请求头信息</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="comment">// 成功返回</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">text</span> = <span class="string">&#x27;request success&#x27;</span>;</span><br><span class="line">    &#125; <span class="comment">// 回调函数</span></span><br><span class="line">&#125;); <span class="comment">// 也可以用.then</span></span><br></pre></td></tr></table></figure><p>详情请看：<a href="https://uniapp.dcloud.net.cn/api/request/request.html">https://uniapp.dcloud.net.cn/api/request/request.html</a></p><h2 id="图片懒加载（注意）"><a href="#图片懒加载（注意）" class="headerlink" title="图片懒加载（注意）"></a>图片懒加载（注意）</h2><p>当我们不想一次全请求过来照片时需要<strong>lazy-load</strong></p><h2 id="env-safe-area-insert-bottom-安全区"><a href="#env-safe-area-insert-bottom-安全区" class="headerlink" title="env(safe-area-insert-bottom)安全区"></a>env(safe-area-insert-bottom)安全区</h2><p>安全区高度，作为防止按键进入手机虚拟键区域被干扰。</p><h2 id="小案例"><a href="#小案例" class="headerlink" title="小案例"></a>小案例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view class=&quot;contain&quot;&gt;</span><br><span class="line">&lt;view class=&quot;outer&quot;&gt;</span><br><span class="line">&lt;view class=&quot;inner&quot; v-for=&quot;(item, index) in list&quot;&gt;</span><br><span class="line">&lt;view class=&quot;pic&quot;&gt;</span><br><span class="line">&lt;image :src=&quot;item.url&quot; mode=&#x27;widthFix&#x27; :key=&quot;item._id&quot; @click=&quot;preview(index)&quot;&gt;&lt;/image&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;comment&quot;&gt; &#123;&#123;item.comment&#125;&#125; &lt;/view&gt; </span><br><span class="line">&lt;view class=&quot;text&quot;&gt; --&#123;&#123;item.shop&#125;&#125; &lt;/view &gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;float&quot;&gt;</span><br><span class="line">&lt;view class=&quot;text&quot; @click=&quot;onReFresh&quot;&gt;刷新&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;text&quot; @click=&quot;toTop&quot;&gt;顶部&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;onPullDownRefresh,onReachBottom&#125; from &#x27;@dcloudio/uni-app&#x27;</span><br><span class="line">import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line">let list = ref([])</span><br><span class="line">// 放大图片预览</span><br><span class="line">const preview = (index) =&gt; &#123;</span><br><span class="line">let urls = list.value.map(item =&gt; item.url)</span><br><span class="line">uni.previewImage(&#123;</span><br><span class="line">current:index,</span><br><span class="line">urls</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">// 网络请求</span><br><span class="line">const network = () =&gt; &#123;</span><br><span class="line">uni.showLoading() // 显示loading</span><br><span class="line">uni.request(&#123;</span><br><span class="line">url:&#x27;https://tea.qingnian8.com/tools/taoShow&#x27;,</span><br><span class="line">data:&#123;</span><br><span class="line">size:5</span><br><span class="line">&#125;,</span><br><span class="line">// header:&#123; // 访问次数？？</span><br><span class="line">// &quot;access-key&quot;:&quot;lzd24680&quot;</span><br><span class="line">// &#125;</span><br><span class="line">&#125;).then(res=&gt;&#123;</span><br><span class="line">console.log(res);</span><br><span class="line">list.value.push(...res.data.data)</span><br><span class="line">&#125;).catch(err=&gt;&#123;</span><br><span class="line">uni.showToast(&#123;</span><br><span class="line">title:&#x27;请求有误&#x27;,</span><br><span class="line">icon:&#x27;error&#x27;</span><br><span class="line">&#125;,500)</span><br><span class="line">&#125;).finally(()=&gt;&#123;</span><br><span class="line">uni.hideLoading() // 消失loading</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">network()</span><br><span class="line">//触底刷新</span><br><span class="line">onReachBottom(()=&gt;&#123;</span><br><span class="line">network()</span><br><span class="line">&#125;)</span><br><span class="line">//下拉刷新</span><br><span class="line">onPullDownRefresh(()=&gt;&#123;</span><br><span class="line">console.log(312)</span><br><span class="line">list.value = []</span><br><span class="line">network()</span><br><span class="line">&#125;)</span><br><span class="line">const onReFresh = () =&gt; &#123;</span><br><span class="line">console.log(1)</span><br><span class="line">uni.startPullDownRefresh();</span><br><span class="line">&#125;</span><br><span class="line">const toTop = () =&gt; &#123;</span><br><span class="line">uni.pageScrollTo(&#123;</span><br><span class="line">scrollTop:0</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.contain&#123;</span><br><span class="line">.outer&#123;</span><br><span class="line">padding: 50rpx;</span><br><span class="line">.inner&#123;</span><br><span class="line">margin-bottom: 50rpx;</span><br><span class="line">box-shadow: 1px 20px 30px rgb(207, 207, 207,0.8);</span><br><span class="line">border-radius: 15px;</span><br><span class="line">image&#123;</span><br><span class="line">width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.comment&#123;</span><br><span class="line">text-align: left;</span><br><span class="line">padding: 10rpx 30rpx;</span><br><span class="line">&#125;</span><br><span class="line">.text&#123;</span><br><span class="line">padding:  5rpx 15px 10rpx;</span><br><span class="line">text-align: right;</span><br><span class="line">color: rgb(195, 195, 195);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">.float&#123;</span><br><span class="line">position: fixed;</span><br><span class="line">right: 30rpx;</span><br><span class="line">bottom: 40rpx;</span><br><span class="line">padding-bottom: env(safe-area-insert-bottom);</span><br><span class="line">.text&#123;</span><br><span class="line">width: 90rpx;</span><br><span class="line">height: 90rpx;</span><br><span class="line">background-color: #ffffff;</span><br><span class="line">margin-bottom: 30rpx;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line">align-items: center;</span><br><span class="line">border-radius: 50%;</span><br><span class="line">opacity: 0.85;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习（本蒟蒻的第一篇博客）</title>
      <link href="/2024/09/12/Markdown%E5%AD%A6%E4%B9%A0%EF%BC%88%E6%9C%AC%E8%92%9F%E8%92%BB%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%89/"/>
      <url>/2024/09/12/Markdown%E5%AD%A6%E4%B9%A0%EF%BC%88%E6%9C%AC%E8%92%9F%E8%92%BB%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown学习（本蒟蒻的第一篇博客）"><a href="#Markdown学习（本蒟蒻的第一篇博客）" class="headerlink" title="Markdown学习（本蒟蒻的第一篇博客）"></a>Markdown学习（本蒟蒻的第一篇博客）</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>#＋空格＋标题</p><p>#一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题    （逐级递减，只有六级）</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>斜体：<em>coding</em>  字体两边都加一个 *</p><p>粗体：<strong>coding</strong>   字体两边都加两个 *</p><p>粗斜体： <em><strong>coding</strong></em>   字体两边都加三个 *</p><p>删除线：<del>coding</del>  字体两边都加两个 ~</p><p>标记文本：&#x3D;&#x3D;coding&#x3D;&#x3D; 字体两边都加两个 &#x3D;</p><p>运算：2^10^ 在次方的两边都加一个 ^</p><p>化学符号（化学好难呜）：H<del>2</del>O 在数字两边都加一个 ~</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>我爱薇尔莉特</p></blockquote><p>在开头输入&gt;，引用别人的文章，博客等常用。</p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><p>“—”和“***”都可以分割</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/ffe88e4fb9a9da4521f0ebe516e8af59.png" alt="网图"></p><p>以这种形式，将图片路径输入小括号中：!＋[]＋()</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://www.luogu.com.cn/">点击查看美女</a></p><p>格式：[]+() 中括号加内容，小括号里填链接</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li><p>a</p></li><li><p>b</p></li><li><p>c</p><p>有序列表：1.+空格</p></li></ol><ul><li>A</li><li>B</li><li>C</li></ul><p>​无序列表：-+空格</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ol><li><p>直接右键插入：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li><li><p>正常输入：</p><p>   姓名|性别|年龄|</p><p>   –|–|–|</p><p>   李四|男|48|</p><p>   张三|女|25|</p><p> 第一行为表头，之后用–|分隔开，与上面对齐，下面是表格内容，最后进入源代码删除每行的空隙生成表格。</p><table><thead><tr><th>姓名</th><th>性别</th><th>年龄</th></tr></thead><tbody><tr><td>李四</td><td>男</td><td>48</td></tr><tr><td>张三</td><td>女</td><td>25</td></tr></tbody></table></li></ol><p>​</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span> 万能头~~~</span></span><br></pre></td></tr></table></figure><p>用&#96;&#96;&#96; +语言 就可以在里面coding啦。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
